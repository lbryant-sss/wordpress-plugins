(()=>{function a(a){return function(a){if(Array.isArray(a))return n(a)}(a)||function(a){if("undefined"!=typeof Symbol&&null!=a[Symbol.iterator]||null!=a["@@iterator"])return Array.from(a)}(a)||function(a,t){if(a){if("string"==typeof a)return n(a,t);var r={}.toString.call(a).slice(8,-1);return"Object"===r&&a.constructor&&(r=a.constructor.name),"Map"===r||"Set"===r?Array.from(a):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(a,t):void 0}}(a)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(a,n){(null==n||n>a.length)&&(n=a.length);for(var t=0,r=Array(n);t<n;t++)r[t]=a[t];return r}var t=window.hCaptchaACFE||function(n,t){var r={savedOnLoad:null,init:function(){r.installCallbacks(),t(document).on("ajaxComplete",r.ajaxCompleteHandler)},installCallbacks:function(){var a=n.hCaptcha.getParams(),t=a.callback,e=a["error-callback"],o=a["expired-callback"];a.callback=function(a){return r.updateHidden(a,t)},a["error-callback"]=function(){return r.updateHidden("",e)},a["expired-callback"]=function(){return r.updateHidden("",o)},n.hCaptcha.setParams(a),r.savedOnLoad=n.hCaptchaOnLoad,n.hCaptchaOnLoad=r.onLoadWrapper},updateHidden:function(n,t){a(document.querySelectorAll('.acfe-field-recaptcha input[id^="acf-field_"]')).forEach(function(a){a.value=n}),t&&t(n)},onLoadWrapper:function(){n.hCaptchaOnLoad=r.savedOnLoad,n.hCaptchaOnLoad()},ajaxCompleteHandler:function(){"function"==typeof n.hCaptchaBindEvents&&n.hCaptchaBindEvents()}};return r}(window,jQuery);window.hCaptchaACFE=t,t.init()})();