{"version":3,"file":"sc-stripe-payment-element.spec.js","sourceRoot":"","sources":["../../../../../src/components/ui/stripe-payment-element/test/sc-stripe-payment-element.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { state as checkoutState, dispose as disposeCheckout } from '../../../../../src/store/checkout';\nimport { dispose as disposeProcessors } from '../../../../../src/store/processors';\n\ndescribe('sc-stripe-payment-element', () => {\n  beforeEach(() => {\n    disposeCheckout();\n    disposeProcessors();\n  });\n\n  describe('maybeApplyFilters', () => {\n    let mockApplyFilters: jest.MockedFunction<any>;\n    let originalWindow: Window;\n\n    // Create a test instance of the maybeApplyFilters method\n    // This mimics what the actual component does\n    const maybeApplyFilters = function (options: any) {\n      if (!window?.wp?.hooks?.applyFilters) return options;\n\n      return {\n        ...options,\n        paymentMethodOrder: window.wp.hooks.applyFilters('surecart_stripe_payment_element_payment_method_order', [], checkoutState.checkout),\n        wallets: window.wp.hooks.applyFilters('surecart_stripe_payment_element_wallets', {}, checkoutState.checkout),\n        terms: window.wp.hooks.applyFilters('surecart_stripe_payment_element_terms', {}, checkoutState.checkout),\n        fields: window.wp.hooks.applyFilters('surecart_stripe_payment_element_fields', options.fields ?? {}),\n      };\n    };\n\n    beforeEach(() => {\n      // Setup window object if it doesn't exist\n      if (!(global as any).window) {\n        (global as any).window = {};\n      }\n\n      // Store original window\n      originalWindow = (global as any).window;\n\n      // Reset window.wp before each test\n      (global as any).window.wp = undefined;\n      (global as any).window.checkoutState = { checkout: {} };\n\n      mockApplyFilters = jest.fn();\n    });\n\n    afterEach(() => {\n      // Restore original window\n      (global as any).window = originalWindow;\n    });\n\n    it('returns original options when window.wp is undefined', () => {\n      const options = { fields: { test: 'value' }, other: 'data' };\n      const result = maybeApplyFilters(options);\n\n      expect(result).toBe(options);\n      expect(result).toEqual(options);\n    });\n\n    it('returns original options when window.wp.hooks is undefined', () => {\n      (global as any).window.wp = {};\n      const options = { fields: { test: 'value' }, other: 'data' };\n      const result = maybeApplyFilters(options);\n\n      expect(result).toBe(options);\n      expect(result).toEqual(options);\n    });\n\n    it('returns original options when window.wp.hooks.applyFilters is undefined', () => {\n      (global as any).window.wp = { hooks: {} };\n      const options = { fields: { test: 'value' }, other: 'data' };\n      const result = maybeApplyFilters(options);\n\n      expect(result).toBe(options);\n      expect(result).toEqual(options);\n    });\n\n    it('applies filters when wp.hooks.applyFilters is available', () => {\n      // Mock the checkout state\n      const mockCheckout = { id: 'test-checkout' };\n      (global as any).window.checkoutState = { checkout: mockCheckout };\n\n      // Setup mock for applyFilters\n      mockApplyFilters.mockImplementation((filterName, defaultValue) => {\n        switch (filterName) {\n          case 'surecart_stripe_payment_element_payment_method_order':\n            return ['card', 'paypal'];\n          case 'surecart_stripe_payment_element_wallets':\n            return { applePay: 'auto', googlePay: 'auto' };\n          case 'surecart_stripe_payment_element_terms':\n            return { card: 'auto' };\n          case 'surecart_stripe_payment_element_fields':\n            return { billingDetails: { email: 'never' } };\n          default:\n            return defaultValue;\n        }\n      });\n\n      (global as any).window.wp = { hooks: { applyFilters: mockApplyFilters } };\n\n      const options = { fields: { test: 'value' }, other: 'data' };\n      const result = maybeApplyFilters(options);\n\n      // Verify filters were called with correct arguments\n      expect(mockApplyFilters).toHaveBeenCalledTimes(4);\n      expect(mockApplyFilters).toHaveBeenCalledWith('surecart_stripe_payment_element_payment_method_order', [], mockCheckout);\n      expect(mockApplyFilters).toHaveBeenCalledWith('surecart_stripe_payment_element_wallets', {}, mockCheckout);\n      expect(mockApplyFilters).toHaveBeenCalledWith('surecart_stripe_payment_element_terms', {}, mockCheckout);\n      expect(mockApplyFilters).toHaveBeenCalledWith('surecart_stripe_payment_element_fields', { test: 'value' });\n\n      // Verify the result has the filtered values\n      expect(result).toEqual({\n        fields: { billingDetails: { email: 'never' } },\n        other: 'data',\n        paymentMethodOrder: ['card', 'paypal'],\n        wallets: { applePay: 'auto', googlePay: 'auto' },\n        terms: { card: 'auto' },\n      });\n\n      // Verify original options were not mutated (immutability check)\n      expect(options).toEqual({ fields: { test: 'value' }, other: 'data' });\n      expect(result).not.toBe(options);\n    });\n\n    it('handles undefined options.fields gracefully', () => {\n      (global as any).window.checkoutState = { checkout: {} };\n      mockApplyFilters.mockReturnValue({});\n      (global as any).window.wp = { hooks: { applyFilters: mockApplyFilters } };\n\n      const options = { other: 'data' };\n      const result = maybeApplyFilters(options);\n\n      // Verify the fields filter was called with empty object when fields is undefined\n      expect(mockApplyFilters).toHaveBeenCalledWith('surecart_stripe_payment_element_fields', {});\n\n      expect(result).toHaveProperty('fields', {});\n    });\n\n    it('preserves all original properties when applying filters', () => {\n      (global as any).window.checkoutState = { checkout: {} };\n      mockApplyFilters.mockImplementation((_, defaultValue) => defaultValue);\n      (global as any).window.wp = { hooks: { applyFilters: mockApplyFilters } };\n\n      const options = {\n        fields: { test: 'value' },\n        existingProp1: 'value1',\n        existingProp2: { nested: 'object' },\n        existingProp3: [1, 2, 3],\n      };\n\n      const result = maybeApplyFilters(options);\n\n      // All original properties should be preserved\n      expect(result.existingProp1).toBe('value1');\n      expect(result.existingProp2).toEqual({ nested: 'object' });\n      expect(result.existingProp3).toEqual([1, 2, 3]);\n\n      // New properties should be added\n      expect(result).toHaveProperty('paymentMethodOrder');\n      expect(result).toHaveProperty('wallets');\n      expect(result).toHaveProperty('terms');\n      expect(result).toHaveProperty('fields');\n    });\n  });\n});\n"]}