import{h}from"@stencil/core";import{FormSubmitController}from"../../../functions/form-data";let id=0;export class ScSwitch{constructor(){this.switchId="switch-"+ ++id,this.labelId=`switch-label-${id}`,this.hasDescription=void 0,this.hasFocus=!1,this.name=void 0,this.value=void 0,this.disabled=!1,this.required=!1,this.checked=!1,this.invalid=!1,this.reversed=void 0,this.edit=!1}async reportValidity(){return this.invalid=!this.input.checkValidity(),this.input.reportValidity()}handleClick(){this.checked=!this.checked,this.scChange.emit()}handleBlur(){this.hasFocus=!1,this.scBlur.emit()}handleFocus(){this.hasFocus=!0,this.scFocus.emit()}handleKeyDown(e){if(this.edit)return!0;"ArrowLeft"===e.key&&(e.preventDefault(),this.checked=!1,this.scChange.emit()),"ArrowRight"===e.key&&(e.preventDefault(),this.checked=!0,this.scChange.emit())," "!==e.key&&"Enter"!==e.key||(e.preventDefault(),this.handleClick())}handleMouseDown(e){if(this.edit)return!0;e.preventDefault(),this.input.focus()}handleCheckedChange(){this.input&&(this.input.checked=this.checked,this.invalid=!this.input.checkValidity())}componentDidLoad(){this.formController=new FormSubmitController(this.el,{value:e=>e.checked?e.value:void 0}).addFormData(),this.hasDescription=!!this.el.querySelector('[slot="description"]')}disconnectedCallback(){var e;null===(e=this.formController)||void 0===e||e.removeFormData()}render(){const e=this.edit?"div":"label";return h(e,{key:"650bd824a5e356051a250a56159b9e367c239132",part:"base",htmlFor:this.switchId,class:{switch:!0,"switch--is-required":this.required,"switch--checked":this.checked,"switch--disabled":this.disabled,"switch--focused":this.hasFocus,"switch--reversed":this.reversed,"switch--editing":this.edit,"switch--has-description":this.hasDescription},onMouseDown:e=>this.handleMouseDown(e)},h("span",{key:"e0558457e581f57e66d1cc0c76c6de1bbf3f14f2",part:"control",class:"switch__control"},h("span",{key:"d4351ab6d5937323b221659cb56af99df0af8406",part:"thumb",class:"switch__thumb"}),h("input",{key:"8ea99e793ee30ceb754e8ae240cc62cc10020e74",ref:e=>this.input=e,id:this.switchId,type:"checkbox",role:"switch",name:this.name,value:this.value||"on",checked:this.checked,disabled:this.disabled,required:this.required,"aria-checked":this.checked?"true":"false","aria-labelledby":this.labelId,onClick:()=>this.handleClick(),onBlur:()=>this.handleBlur(),onFocus:()=>this.handleFocus(),onKeyDown:e=>this.handleKeyDown(e)})),h("span",{key:"53662433a0e3bbba11e6954dd1e8d3f13898c230",class:"switch__label"},h("span",{key:"d384be4b212ed7795cda71f71c5308f26bb236d8",part:"title",id:this.labelId,class:"switch__title"},h("slot",{key:"b3b86c765cf7803e4dc9b910b486d2483a5d0940"})),h("span",{key:"a658595fdcabec1536035e680bb0bd27f2cd8d1a",class:"switch__description",part:"description"},h("slot",{key:"10ade345cff53c1503358d16866fdf1aa1180c4e",name:"description"}))))}static get is(){return"sc-switch"}static get encapsulation(){return"shadow"}static get originalStyleUrls(){return{$:["sc-switch.scss"]}}static get styleUrls(){return{$:["sc-switch.css"]}}static get properties(){return{name:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"The switch's name attribute."},attribute:"name",reflect:!0},value:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"The switch's value attribute."},attribute:"value",reflect:!1},disabled:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Disables the switch."},attribute:"disabled",reflect:!0,defaultValue:"false"},required:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Makes the switch a required field."},attribute:"required",reflect:!0,defaultValue:"false"},checked:{type:"boolean",mutable:!0,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Draws the switch in a checked state."},attribute:"checked",reflect:!0,defaultValue:"false"},invalid:{type:"boolean",mutable:!0,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"This will be true when the control is in an invalid state. Validity is determined by the `required` prop."},attribute:"invalid",reflect:!0,defaultValue:"false"},reversed:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"reversed",reflect:!1},edit:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"This will be true as a workaround in the block editor to focus on the content."},attribute:"edit",reflect:!1,defaultValue:"false"}}}static get states(){return{hasDescription:{},hasFocus:{}}}static get events(){return[{method:"scBlur",name:"scBlur",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Emitted when the control loses focus."},complexType:{original:"void",resolved:"void",references:{}}},{method:"scChange",name:"scChange",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Emitted when the control's checked state changes."},complexType:{original:"void",resolved:"void",references:{}}},{method:"scFocus",name:"scFocus",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Emitted when the control gains focus."},complexType:{original:"void",resolved:"void",references:{}}}]}static get methods(){return{reportValidity:{complexType:{signature:"() => Promise<boolean>",parameters:[],references:{Promise:{location:"global",id:"global::Promise"}},return:"Promise<boolean>"},docs:{text:"Checks for validity and shows the browser's validation message if the control is invalid.",tags:[]}}}}static get elementRef(){return"el"}static get watchers(){return[{propName:"checked",methodName:"handleCheckedChange"}]}}