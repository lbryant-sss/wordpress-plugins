import*as e from"@wordpress/interactivity";var t={833:(t,o,n)=>{t.exports=(e=>{var t={};return n.d(t,e),t})({getConfig:()=>e.getConfig,getContext:()=>e.getContext,getElement:()=>e.getElement,store:()=>e.store,withScope:()=>e.withScope})}},o={};function n(e){var r=o[e];if(void 0!==r)return r.exports;var i=o[e]={exports:{}};return t[e](i,i.exports,n),i.exports}n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var r=n(833);const i="jetpack/field-file",a=(e,t=2)=>{const o=(0,r.getConfig)(i);if(0===e)return o.i18n.zeroBytes;const n=t<0?0:t,a=o.i18n.fileSizeUnits||["Bytes","KB","MB","GB","TB"],s=Math.floor(Math.log(e)/Math.log(1024)),l=parseFloat((e/Math.pow(1024,s)).toFixed(n));return`${new Intl.NumberFormat(o.i18n.locale,{minimumFractionDigits:n,maximumFractionDigits:n}).format(l)} ${a[s]}`},s=e=>{const t=new FileReader;t.readAsDataURL(e);const o=(0,r.getConfig)(i),n=(0,r.getContext)();let s=null;e.size>o.maxUploadSize&&(s=o.i18n.fileTooLarge),n.allowedMimeTypes.includes(e.type)||(s=o.i18n.invalidType),n.maxFiles<n.files.length+1&&(s=o.i18n.maxFiles);const p=performance.now()+"-"+Math.random();n.hasFiles=!0,n.files.push({name:e.name,formattedSize:a(e.size,2),hasToken:!1,hasError:!!s,id:p,error:s}),!s&&l(e,p),t.onload=(0,r.withScope)((()=>{f({url:"url("+t.result+")"},p)}))},l=(e,t)=>{const{endpoint:o,uploadToken:n}=(0,r.getConfig)(i),a=new XMLHttpRequest,s=new FormData;a.open("POST",o,!0),a.upload.addEventListener("progress",(0,r.withScope)(p.bind(void 0,t))),a.addEventListener("readystatechange",(0,r.withScope)(d.bind(void 0,t))),s.append("file",e),s.append("upload_token",n),a.send(s)},p=(e,t)=>{const o=t.loaded/t.total*100;f({progress:Math.min(o,97)},e)},d=(e,t)=>{const o=t.target;if(4===o.readyState){if(200===o.status){const t=JSON.parse(o.responseText);if(t.success)return void f({token:t.data.token,hasToken:!0},e)}if(o.responseText){const t=JSON.parse(o.responseText);f({error:t.message,hasError:!0},e)}}},f=(e,t)=>{const o=(0,r.getContext)(),n=o.files.findIndex((e=>e.id===t));o.files[n]=Object.assign(o.files[n],e)};(0,r.store)(i,{state:{get hasFiles(){return!!(0,r.getContext)().files.length>0},get hasMaxFiles(){const e=(0,r.getContext)();return e.maxFiles<=e.files.length}},actions:{openFilePicker(){const{ref:e}=(0,r.getElement)(),t=e.parentNode.querySelector(".jetpack-form-file-field");t&&t.click()},fileAdded:e=>{Array.from(e.target.files).forEach(s)},fileDropped:e=>{if(e.preventDefault(),e.dataTransfer)for(const t of Array.from(e.dataTransfer.items)){if(t.webkitGetAsEntry()?.isDirectory)return;s(t.getAsFile())}(0,r.getContext)().isDropping=!1},dragOver:e=>{(0,r.getContext)().isDropping=!0,e.preventDefault()},dragLeave:()=>{(0,r.getContext)().isDropping=!1},removeFile:e=>{e.preventDefault();const t=(0,r.getContext)(),o=e.target.dataset.id;t.files=t.files.filter((e=>e.id!==o)),(e=>{const{endpoint:t,uploadToken:o}=(0,r.getConfig)(i),n=new FormData;n.append("file_id",e),n.append("upload_token",o),fetch(`${t}/remove`,{method:"POST",body:n}).then((e=>e.json()))})(o)}},callbacks:{}});