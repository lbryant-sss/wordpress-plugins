var bfDateFieldsLogicCheck=function(){"use strict";const e=["date","advanced-datetime","datetime-local","time","month","week"];let t="";const n=(e,t,n,a)=>{if(!e)return null;try{switch(t){case"date":case"datetime-local":return new Date(e).getTime();case"advanced-datetime":{const t=r(n,a);return a?.inits?.[t]?.parseDate&&a.inits[t].parseDate(e).getTime(),new Date(e).getTime()}case"time":{const[t,n,r]=e.split(":");return 3600*+t+60*+n+ +(r||0)}case"week":{const[t,n]=e.split("-W");return((e,t)=>{const n=new Date(e,0,4),r=n.getDay()||7,a=new Date(n);return a.setDate(n.getDate()-r+1),a.setDate(a.getDate()+7*(t-1)),a})(+t,+n).getTime()}case"month":{const[t,n]=e.split("-");return 12*+t+ +n-1}default:return e}}catch(t){return console.error("Date normalization error:",t),e}},r=(e,n)=>{const r=((e,t)=>"undefined"!=typeof checkRepeatedField&&checkRepeatedField(e,t))(e,n)?`${e}[${t}]`:e;return n.inits&&!n.inits[r]?e:r};return function(r,a,c,s,i,u){t=u||"";const l=a[r.field]?.type;if(!e.includes(l))return;const o=n(c,l,i,r.field),d=n(s,l,i,r.field);if(null===o)return!1;switch(r.logic){case"change":return!0;case"null":return!c&&0===c.length;case"not_null":return c&&c.length>0}if(null===d||!s)return!1;switch(r.logic){case"equal":return o===d;case"not_equal":return o!==d;case"contain":return((e,t,n,r,a)=>{if(!n)return!1;const c=bfSplit(r,a);let s=0;return c.forEach(e=>{n.length>0&&-1!==n.indexOf(e)&&(s+=1)}),s>0})(0,0,o,s,i);case"greater":return o>d;case"less":return o<d;case"greater_or_equal":return o>=d;case"less_or_equal":return o<=d;case"between":return((e,t,r,a)=>{const c=t[e.field]?.type;let s=a;"string"==typeof a&&(s=JSON.parse(a));const i=n(s.min,c),u=n(s.max,c);return r>=i&&r<=u})(r,a,o,s);default:return}}}();
