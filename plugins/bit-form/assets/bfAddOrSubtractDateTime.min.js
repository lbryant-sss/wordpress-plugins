var bfAddOrSubtractDateTime=function(){"use strict";return function(t,e){const a=bfSplit(t,e),r=a[0]||"today",s=a[1]||1,n=a[2]||"days",d=a[3]||!1,o="undefined"!=typeof parseDateTime?parseDateTime(r):new Date(r),i=d?-1:1,u=new Date(o);switch(n.toLowerCase()){case"seconds":u.setSeconds(u.getSeconds()+s*i);break;case"minutes":u.setMinutes(u.getMinutes()+s*i);break;case"hours":u.setHours(u.getHours()+s*i);break;case"days":default:u.setDate(u.getDate()+s*i);break;case"weeks":u.setDate(u.getDate()+7*s*i);break;case"months":u.setMonth(u.getMonth()+s*i)}return((t,e)=>{if("today"===e.toLowerCase())return e;if(e.match(/^\d{4}-\d{2}-\d{2}$/))return t.toISOString().split("T")[0];if(e.match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}/))return t.toISOString().substring(0,16);if(e.match(/^\d{2}:\d{2}(:\d{2})?$/)){const a=t.getHours().toString().padStart(2,"0"),r=t.getMinutes().toString().padStart(2,"0"),s=t.getSeconds().toString().padStart(2,"0");return e.includes(":")?`${a}:${r}:${s}`:`${a}:${r}`}return e.match(/^\d{4}-W\d{2}$/i)?`${t.getFullYear()}-W${(t=>{const e=new Date(t);e.setHours(0,0,0,0),e.setDate(e.getDate()+4-(e.getDay()||7));const a=new Date(e.getFullYear(),0,1);return Math.ceil(((e-a)/864e5+1)/7)})(t).toString().padStart(2,"0")}`:e.match(/^\d{4}-\d{2}$/)?`${t.getFullYear()}-${(t.getMonth()+1).toString().padStart(2,"0")}`:t.toISOString()})(u,r)}}();
