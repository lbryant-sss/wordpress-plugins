{"version":3,"sources":["WPTB_FrontendBase.js","WPTB_ExtraStyles.js","WPTB_Logger.js","WPTB_CutGlueTable.js","WPTB_GetDirectionAfterReconstruction.js","WPTB_SortableTable.js","WPTB_RecalculateIndexes.js","WPTB_ResponsiveFrontend.js","WPTB_StylePass.js","WPTB_LazyLoad.js","WPTB_ScrollManager.js","wp-table-builder-frontend.js"],"names":["document","addEventListener","factory","WptbTableObject","containerElement","_this","this","parseId","parentContainer","matrixContainer","mainTable","id","tableElement","tableId","getAttribute","_tableId$match","match","_wrapRegExp","groups","parseInt","classList","contains","Error","querySelector","frontendBaseSingletonInstance","tableObjects","getTableObjects","init","Array","from","querySelectorAll","map","container","push","self","global","key","context","module","exports","_typeof","applyExtraStyle","head","styleElement","uniqueClass","extraStylesRaw","dataset","wptbExtraStyles","extraStyles","atob","_tableElement$getAttr","styleId","_slicedToArray","baseDocument","concat","createElement","type","disableThemeStyles","currentMode","modes","frontEnd","block","insertAdjacentElement","generalStyles","applyGeneralStyles","appendChild","prefixedStyles","prefixStyleRules","innerHTML","createTextNode","tableQueries","builder","_defineProperty","formatStyles","styles","replaceAll","prefix","parseCSS","css","result","current","braceCount","i","length","char","trim","formattedStyles","rules","prefixedRules","forEach","rule","selector","content","prefixedInnerRules","braceIndex","indexOf","substring","startsWith","innerContent","slice","innerRules","ruleContent","prefixedRule","prefixedContent","join","baseElement","arguments","undefined","generalStylesheet","prefixedStyleRules","parentPrefix","applyStyles","mode","allTables","bgColors","normal","prepareMessage","message","replace","prepareMessageStyle","messageType","keyName","log","console","WPTB_CutGlueTable","cutTableHorizontally","rowBefore","table","rows","tableRowsIChildren","children","j","rowSpan","newTdRowspan","td","sameCellBeforeDivision","hasOwnProperty","wptbCell","mark","getDOMElement","tdTopStyle","dataXIndex","setAttribute","colSpan","xIndex","dataXIndexNext","beforeTd","maxCols","insertBefore","WPTB_RecalculateIndexes","glueTableHorizontally","tds","_toConsumableArray","getElementsByTagName","hasAttribute","dataSameCellBeforeDivision","tdsSameBeforeDivision","parentNode","yIndex","tdsSameBeforeDivisionJPlusChildren","k","removeChild","cutTableVertically","col","rowSpanNewTd","colSpanNewTd","rowChildren","rowChildrenLength","afterTd","colSpanOld","tdLeftStyle","tdAnalogThisX","tdAnalogThisY","style","width","height","glueTableVertically","jFirstTdGlue","WPTB_GetDirectionAfterReconstruction","typeFirst","typeSecond","verticalProp","responsiveFront","itemsPerHeader","tableMaxCols","switchMode","getDirective","e","directives","sizeRangeId","detail","responsiveMode","modeOptions","topRowAsHeader","cellStackDirection","cellsPerRow","newTable","thisObject","sortingCellMouseMov","element","x","y","xMatch","target","tagName","offsetX","layerX","offsetY","layerY","clientWidth","clientHeight","add","remove","sortingCellMouseMoveVertical","sortingCellMouseMoveHorizontal","tdMouseLeave","sortableTable","currentTarget","tableWasSorted","tableRowsBefore","tableRowsAfter","tableRowsArr","tableLastCont","rowspan","rowNum","rowsTdFirst","rowsValuesArr","tdYCoordsRowSpanPrevious","tableRowsPushed","tdsChanged","changeSortingTdsCollection","tdRowspan","textElementsValues","textElementsValuesGet","rowsTd","value","orderBy","setSortedAscDataAttr","sort","prev","next","sortOrder","unshift","trRef","tBody","rowsValObj","row","tr","colspan","colNum","columnsTdFirst","columnsValuesArr","tdXCoordsColSpanPrevious","tdColspan","columnsTd","tdsColumn","difference","columnsValObj","removeCellsAttrAfterDivision","tdsAll","removeAttribute","tableSM","tableStateSet","reassignElementsStyles","dataAttr","prevValue","nextValue","cell","textElements","innerText","tdIndexSpanPrev","collectionTdsJSpan","collectionTdsJSpanProperty","indexName","indexNameCamelCase","indexNamePerpendicularCamelCase","tdSpanProperty","tableGroupCount","tdsCollectionChanged","collectionTds","splice","tdSpan","cellsStylesScheme","rowsStylesScheme","sortModeSwitcher","active","removeEventListener","sortableTableVerticalStart","sortingCellMouseMoveSwitcher","wptbSortableTableVertical","createTableElementsStylesScheme","sortableTableHorizontalStart","wptbSortableTableHorizontal","tableObjectChange","start","elemSelector","elements","elem","backgroundColor","window","getComputedStyle","getPropertyValue","objectKey","String","elementsStylesScheme","elemStyles","sortableTableInitialization","sortModeSwitcherRun","tableOld","switchModeObj","call","s","sCMM","dataAttrSortChange","rowsLength","dataYIndexStart","trs","maxColsFull","tdsArr","jMainIter","z","columns","logToConsole","process","env","NODE_ENV","CellObject","cellElement","reference","referenceObject","mergedRenderStatus","mergedCells","column","getMergedRenderStatus","setMergedRenderStatus","status","cloneNode","modifications","spans","remainingSpans","cacheSpanValues","Object","keys","defaultVal","prototype","getSpan","spanType","spanVal","getElement","attributeKey","attributeValue","append","glue","currentVal","default","setSpan","valueToApply","mc","remainingVal","remainingParentSpans","startIndex","endIndex","resetAttribute","resetAllAttributes","el","TableObject","tableEl","_this2","parsedTable","rowCache","originals","rowColors","header","even","odd","addToParsed","r","c","cellObject","parseTable","filter","rowEl","wptbResponsiveIgnore","ri","cells","currentIndex","ci","currentCellObject","spanRow","spanTypes","spanCol","sr","referenceCell","sc","parseRowColors","headerDatasetColor","wptbHeaderBackgroundColor","evenRowDatasetColor","wptbEvenRowBackgroundColor","oddRowDatasetColor","wptbOddRowBackgroundColor","rowsNeeded","rn","tempRow","addRow","fromOriginals","originalIndex","tableBody","isArray","range","createRange","setStart","createContextualFragment","childNodes","clearTable","getCell","returnObject","appendElementToRow","rowId","cachedRow","getParsedTable","responsiveClassDefaultOptions","query","scrollOperations","revertToOriginal","wptbHorizontalScrollStatus","storedMaxWidth","wptbTableContainerMaxWidth","isMainResponsiveEnabled","directive","responsiveEnabled","isCurrentBreakpointEnabled","size","_this3","calculateRangeId","breakpoints","disabled","calculateInnerSize","innerSize","body","relativeWidth","options","_objectSpread","elementObjects","tableObject","directiveString","wptbResponsiveDirectives","JSON","parse","autoBuild","sizeRange","autoOption","tableObj","direction","staticTopRow","repeatMergedHeader","buildDefault","autoDirectionBuild","convertTableObjectToCells","rowCount","colCount","reduce","max","Math","tableRec","futColInit","hidden","shadow","originalRow","originalCol","l","finalTable","transformTable","config","transpose","repeatFirst","columnCount","oldTable","heads","loopInit","isHeadActive","maxColspan","idx","subRowOfRow","filled","subRowObj","subRow","left","spaceUsed","min","fillerProps","subRowCount","isEdgeRow","buildTableFromCells","tableData","rowObj","cellEl","bg","cellData","_cellData$value","background","transformConfig","transformedTable","tempCell","val","stops","rangeId","mobile","tablet","rebuildTable","buildCallable","getBoundingClientRect","tabEvent","CustomEvent","dispatchEvent","wptbBreakpoint","rebuildTables","o","calculateRangeIdFromTable","isResponsiveEnabledForCurrentBreakpoint","tableDirectives","bindRebuildToResize","bindToResize","getTableElementObject","_this3$elementObjects","_ref","matrixWrapper","matches","RegExp","exec","Number","markRowForResponsive","rowElement","stringify","globalKey","stylesheets","insertShadowRoot","shadowRootContainer","tableContainer","mainParent","parentChildren","tableIndex","upSibling","downSibling","prepareAllStylesheets","shadowRoot","borrowFromTheme","fontFamily","tableContainers","setupStylePass","checkTableEligibility","settings","disableThemeStylesForAll","maxWidth","scrollStatus","attachShadow","stylesheetsObj","root","action","prepareStylesheet","copyStylesheet","styleSheet","handler","url","linkElement","LazyLoadAnimation","callHook","hookName","userHook","getHook","_len","args","_key","apply","instanceOptions","name","speed","step","hooks","perspective","flashColor","getOptions","calculateDuration","abs","calculateAnimationDirection","names","indexConstant","includes","calculateDirectionConstant","getBufferElement","imgElement","removeBufferElement","bufferElement","addStylesheet","contentRoot","lazyloadStyleSheet","styleRules","beforeAnimation","animate","afterAnimation","LazyLoadAnimationFactory","getAnimation","animationName","extraOptions","factoryOptions","none","imageElement","slideIn","overflow","transform","transition","growSling","flash","flashElement","flashStyle","ownerDocument","flip","parentWrapper","animationDirection","_parentWrapper$parent","rotationAmount","propertyName","wptbCardFlip","processImageElements","imgElements","currentYPos","position","firstTimeProcess","forceLoad","wptbLazyLoadStatus","img","svgIcon","bufferElementClass","iconSvg","iconWrapper","iconSize","wptbLazyLoadIconAnimation","iconAnimation","fill","iconColor","bufferElementContainerClass","animation","forceMode","isElementVisible","delay","setTimeout","imageElementLoadCallback","src","wptbLazyLoadTarget","scrollY","cachedScrollData","lastYPosition","windowCurrentYPosition","innerHeight","assignLazyLoadToElements","tables","shadowTables","carry","allImages","images","passive","defaultOptions","animationFactory","_imgElement$parentNod","top","bottom","visibilityPercentage","visibilityVariable","forceLoadImages","initOptions","enabled","imageLoadAnimation","imageLoadAnimationSpeed","imageLoadAnimationDirection","imageLoadAnimationPerspective","scrollOptions","prepareTableForScroll","mainContainer","frontendCalculationStatus","tableElements","getElementsByClassName","wptb_tableReconstraction","createNewTableIndic","previewTable","tableContainerMatrix","display","wptbTableAlignment","offsetWidth","reconstraction","wptbAdaptiveTable","tableContainerWidth","previewTableWidth","tableColumns","previewTableRows","tableReconstructed","wptbPreviewTableMobile","wholeColumnsInContainer","floor","dataWholeColumnInContainer","newTableTbody","infArr","className","tableRows","newTableLastSectionFilledColumns","valuesIsSaved","tableRowsWithoutHeader","newTableColumnsWithoutLeftHeader","countRows","ceil","tdStyles","sectionNumber","tdLeftHeader","rowFirstStyles","borderTopColor","borderColor","borderBottomColor","borderTopWidth","rowKStyles","borderWidth","newTableColumns","increaseRatioRows","newTableRows","jMax","jStart","rowStyles","newTd","minWidth","bubbles","wptb_tdDefaultWidth","_loop","wptbTableContainer","wptbTableContainers","wptbTableHorizontalScrollStatus","merginCellsHorizontally","mergingCellsHorizontally","tableWidthLogic","device","responsiveness","wptbTableContainerWidth","wptbTableTdsSumMaxWidth","wptbCellsWidthAutoCount","tableTdWidthAuto","wptbFixedWidthSize","tdPaddingCommon","tableTdBorderCommonWidth","styleElementCreate","wptbTdWidthAuto","targetWidth","auto","elementVisibilityStatus","findParentWithNoDisplay","parentObserver","tdStyleObj","tdBorderLeftWidth","tdBorderRightWidth","tdPaddingLeftWidth","tdPaddingRightWidth","parseFloat","_getComputedStyle","visibility","culpritParent","currentElement","currentParent","parentDisplayStatus","parentType","nodeName","toLowerCase","MutationObserver","mutationRecord","mutation","currentVisibility","containerWidth","disconnect","observe","attributes","childList","subtree","cssForTdsWidthAutoOld","cssForTdsWidthAuto","b","wptbElementHoverBgColor","wptbElementHoverTextColor","color","wptbElementHoverScale","wptbElementBgColor","wptbElementColor","wptbSizeNew","wptbButtonWrapper","wptbSize","WPTB_ResponsiveFrontend","wptbResponsiveFrontendInstance","WPTB_SortableTable","responsiveFrontReady","WPTB_ScrollManager","WptbFrontendData","scrollManager","WPTB_ExtraStyles","WPTB_LazyLoad","lazyLoad","WptbFrontendBase","tiEl","_ref2","WPTB_StylePass","stylePass"],"mappings":"izJACAA,SAASC,iBAAiB,mBAAoB,WAC7C,IAA+BC,EAAAA,EAKR,WAOtB,SAASC,EAAgBC,GAAkB,IAAAC,EAAAC,KAmCpCC,GA7BND,KAAKE,gBAAkB,KAOvBF,KAAKG,gBAAkB,KAOvBH,KAAKI,UAAY,KAOjBJ,KAAKK,GAAK,KAQM,SAACC,GAChB,IAAMC,EAAUD,EAAaE,aAAa,IAAI,EAC9C,OAAID,GACKF,GAAR,OAAAI,EAAeF,EAAQG,MAAKC,YAAC,iCAA4B,CAAAN,GAAA,CAAA,CAAA,CAAA,GAAC,KAAA,EAA3CI,EAA6CG,QAApDP,GACDQ,SAASR,EAAI,EAAE,GAGhB,IACR,GAeC,GAAIP,CAAAA,EAAiBgB,UAAUC,SAAS,sBAAsB,EAmB7D,MAAM,IAAIC,MAAM,mCAAmC,EAjB7Cb,GADNJ,EAAKG,gBAAkBJ,GACkBmB,cAAc,8BAA8B,EAErF,GAAId,CAAAA,EAYH,MAAM,IAAIa,MAAM,0BAA0B,EAP1C,GAJAjB,EAAKI,gBAAkBA,EAInBC,EAFEA,EAAYL,EAAKI,gBAAgBc,cAAc,0BAA0B,GAM9E,MAAM,IAAID,MAAM,uBAAuB,EAHvCjB,EAAKK,UAAYA,EAnBhBL,EAAKK,YACRL,EAAKM,GAAKJ,EAAQF,EAAKI,eAAe,EAgCzC,CAuCA,IAAMe,EAAgC,IAhCtC,WAMC,IAAMC,EAAe,GAiBrBnB,KAAKoB,gBAAkB,WACtB,OAAOD,CACR,EAEAnB,KAAKqB,KAAO,WAdXC,MAAMC,KAAK7B,SAAS8B,iBAAiB,uBAAuB,CAAC,EAAEC,IAAI,SAACC,GACnEP,EAAaQ,KAAK,IAAI9B,EAAgB6B,CAAS,CAAC,CACjD,CAAC,CAcF,CACD,EAKA,OAFAR,EAA8BG,KAAK,EAE5BH,CACR,GAvIiBU,MAAQC,QAGtB,oBADajC,EAAQ,CAsIzB,CAAC,ECzID,SAAckC,EAAKC,EAASnC,GACF,aAAlB,OAAOoC,QAA6C,YAAL,aAAd,OAAOC,QAAO,YAAAC,QAAPD,OAAO,GAC/CD,OAAOC,QAAUrC,EAAQ,EAGzBmC,EAAQD,GAAOlC,EAAQ,CAG9B,EAAE,mBAAoBgC,MAAQC,OAAQ,WAkRnC,OAAO,IAzQP,WA4L4B,SAAlBM,EAAmB7B,GACrB,IAQSC,EAMH6B,EAGFC,EAuBEC,EAxCAC,EAAiBjC,EAAakC,QAAQC,gBAGvCF,IAGCG,EAAcC,KAAKJ,CAAc,EAEvCK,EAAoBtC,EACfE,aAAa,OAAO,EACpBE,MAAM,sDAAsD,EAE3DmC,EAXgB,sBAObtC,EAEyDuC,eAAAF,EAAA,CAAA,EAFlD,KASZP,EAAeD,OAHbA,EAAOrC,EAAKgD,aAAa9B,cAAc,MAAM,GAG5B,KAAA,EAAJmB,EAAMnB,cAAa,IAAA+B,OAAKH,CAAO,CAAE,MAIhDR,EAAe3C,SAASuD,cAAc,OAAO,GAChCC,KAAO,WACpBb,EAAahC,GAAKwC,EAEYvC,EAAakC,QAAQW,oBAIrBpD,EAAKqD,cAAgBrD,EAAKsD,MAAMC,UAC1DvD,EAAKqD,cAAgBrD,EAAKsD,MAAME,OAEhCjD,EAAakD,sBAAsB,cAAenB,CAAY,EAC1DtC,EAAKqD,cAAgBrD,EAAKsD,MAAMC,UAAYvD,EAAK0D,eACjDC,EAAmB3D,EAAK0D,cAAenD,CAAY,GAGvD8B,EAAKuB,YAAYtB,CAAY,GAG/BC,EAAW,oCAAAU,OAAuCzC,CAAO,EAEzDqD,EAAiBC,EAAiBvB,EAAaI,CAAW,EAIhEL,EAAayB,UAAY,GACzBzB,EAAasB,YAAYjE,SAASqE,eAAeH,CAAc,CAAC,EACpE,CA7OwB,IAAA7D,EAAAC,KAsClBgE,GAhCNhE,KAAKqD,MAAQ,CACTY,QAAS,UACTX,SAAU,WACVC,MAAO,OACX,EAOAvD,KAAK+C,aAAerD,SAOpBM,KAAKoD,YAAcpD,KAAKqD,MAAMY,QAO9BjE,KAAKyD,cAAgB,GAOHS,gBAAAA,gBAAAA,gBAAA,GACblE,KAAKqD,MAAMY,QAAU,uCAAuC,EAC5DjE,KAAKqD,MAAME,MAAQ,6CAA6C,EAChEvD,KAAKqD,MAAMC,SAAW,2CAA2C,GAShEa,EAAe,SAACC,GAKlB,OAHgBA,EAAOC,WAAW,yCAA0C,EAAE,EAG/DA,WAAW,IAAK,cAAc,CACjD,EASMR,EAAmB,SAACS,EAAQ5B,GAgCb,SAAX6B,EAAYC,GAMd,IALA,IAAMC,EAAS,GACXC,EAAU,GACVC,EAAa,EACbC,EAAI,EAEDA,EAAIJ,EAAIK,QAAQ,CACnB,IAAMC,EAAON,EAAII,GACjBF,GAAWI,EAEE,MAATA,EACAH,CAAU,GACM,MAATG,GAEY,IADnBH,EAAAA,IAGIF,EAAO9C,KAAK+C,EAAQK,KAAK,CAAC,EAC1BL,EAAU,IAGlBE,CAAC,EACL,CAOA,OAJIF,EAAQK,KAAK,GACbN,EAAO9C,KAAK+C,EAAQK,KAAK,CAAC,EAGvBN,CACX,CA3DA,IAAMO,EAAkBb,EAAazB,CAAW,EA8D1CuC,EAAQV,EAASS,CAAe,EAChCE,EAAgB,GA2BtB,OAzBAD,EAAME,QAAQ,SAACC,GACX,IAMMC,EACAC,EAtEiChB,EAIjCiB,EA2DDH,GAIc,CAAC,KADdI,EAAaJ,EAAKK,QAAQ,GAAG,KAG7BJ,EAAWD,EAAKM,UAAU,EAAGF,CAAU,EAAET,KAAK,EAC9CO,EAAUF,EAAKM,UAAUF,CAAU,EAGrCH,IAAaf,EACbY,EAAcvD,KAAKyD,CAAI,EAChBC,EAASM,WAAW,GAAG,GA3EKrB,EA8EuBA,EA5ExDsB,GAFwBN,EA8EuBA,GA5ExBO,MAAM,EAAG,CAAC,CAAC,EAClCC,EAAavB,EAASqB,CAAY,EAClCL,EAAqB,GAE3BO,EAAWX,QAAQ,SAACC,GAChB,IAKMC,EACAU,EANDX,GAGc,CAAC,KADdI,EAAaJ,EAAKK,QAAQ,GAAG,KAG7BJ,EAAWD,EAAKM,UAAU,EAAGF,CAAU,EAAET,KAAK,EAC9CgB,EAAcX,EAAKM,UAAUF,CAAU,EAEzCH,IAAaf,EACbiB,EAAmB5D,KAAKyD,CAAI,GAEtBY,EAAY,GAAAhD,OAAMsB,EAAM,GAAA,EAAAtB,OAAIqC,CAAQ,EAAArC,OAAG+C,CAAW,EACxDR,EAAmB5D,KAAKqE,CAAY,GAE5C,CAAC,EAyDSC,EAvDV,IAAAjD,OAAWuC,EAAmBW,KAAK,EAAE,EAAC,GAAA,EAwDlChB,EAAcvD,KAAI,GAAAqB,OAAIqC,CAAQ,EAAArC,OAAGiD,CAAe,CAAE,IAG5CD,EAAY,GAAAhD,OAAMsB,EAAM,GAAA,EAAAtB,OAAIqC,CAAQ,EAAArC,OAAGsC,CAAO,EACpDJ,EAAcvD,KAAKqE,CAAY,GAEvC,CAAC,EAEMd,EAAcgB,KAAK,EAAE,CAChC,EAQMxC,EAAqB,SAACD,GAAsC,IAAvB0C,EAAW,EAAAC,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAC/CE,EAAoB5G,SAASuD,cAAc,OAAO,EAYlDsD,GAXND,EAAkBpD,KAAO,WACzBoD,EAAkBjG,GAAK,sBAElB8F,EAMDA,EAAY3C,sBAAsB,cAAe8C,CAAiB,GAJ9DvG,EAAKqD,cAAgBrD,EAAKsD,MAAME,MAAQxD,EAAKgD,aAAehD,EAAKgD,aAAa9B,cAAc,MAAM,GAEjG0C,YAAY2C,CAAiB,EAIXzC,EAAiBJ,EAAc+C,aAAc/C,EAAcW,MAAM,GAC5FkC,EAAkB3C,YAAYjE,SAASqE,eAAewC,CAAkB,CAAC,CAC7E,EAiEAvG,KAAKyG,YAAc,WAA+E,IAA9EC,EAAI,EAAAN,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,GAAAA,UAAA,GAAGrG,EAAKsD,MAAMC,SAAUG,EAAa,EAAA2C,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAMrD,EAAY,EAAAqD,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG1G,SAK3EiH,GAJN5G,EAAKgD,aAAeA,EACpBhD,EAAKqD,YAAcsD,EACnB3G,EAAK0D,cAAgBA,EAEHnC,MAAMC,KAAKxB,EAAKgD,aAAavB,iBAAiBwC,EAAa0C,EAAK,CAAC,GAE/EC,GACAA,EAAUlF,IAAIU,CAAe,EAI5BuE,IAAS3G,EAAKsD,MAAMC,UAAYoD,IAAS3G,EAAKsD,MAAME,OAAUE,CAAAA,GAC/DC,EAAmBD,CAAa,CAExC,CACJ,CAIJ,CAAC,EC9RD,SAAc3B,EAAKC,EAASnC,GACL,aAAlB,OAAOoC,QAA6C,YAAL,aAAd,OAAOC,QAAO,YAAAC,QAAPD,OAAO,GAClDD,OAAOC,QAAUrC,EAAQ,EAGzBmC,EAAQD,GAAOlC,EAAQ,CAGxB,EAAE,cAAegC,MAAQC,OAAQ,WACjC,IAYM+E,EAAW,CAChBC,OAAQ,SACT,EAEA,MAAO,CAONC,eAAc,SAACC,GACd,MAxBa,oCAwBCC,QAAQ,YAAaD,CAAO,CAC3C,EAOAE,oBAAmB,WAAyB,IAAxBC,EAAW,EAAAd,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,SAC7Be,EAEAP,EAASM,GACFA,EAHG,SAMd,MApCmB,uFAoCCF,QAAQ,YAAaJ,EAASO,EAAQ,CAC3D,EAMAC,IAAG,SAACL,GAEHM,QAAQD,IAAIpH,KAAK8G,eAAeC,CAAO,EA9CxC,sGA8CuD/G,KAAKiH,oBAAoB,QAAQ,CAAC,CACzF,CACD,CACD,CAAC,EC5DD,IAAIK,kBAAoB,CACpBC,qBAAsB,SAAUC,EAAWC,GACvC,GAAIA,GAASA,EAAMC,KAAKF,GACpB,IAAK,IAAI5C,EAAI,EAAGA,EAAI4C,EAAW5C,CAAC,GAG5B,IAFA,IAAI+C,EAAqBF,EAAMC,KAAK9C,GAAGgD,SAE9BC,EAAI,EAAGA,EAAIF,EAAmB9C,OAAQgD,CAAC,GAC5C,GAAqC,EAAhCF,EAAmBE,GAAGC,SAAeH,EAAmBE,GAAGC,QAAUN,EAAY5C,EAAI,CAwBtF,IAvBA,IAAImD,EAAeJ,EAAmBE,GAAGC,QAAUN,EAAY5C,EAM3DoD,GALJL,EAAmBE,GAAGC,QAAUN,EAAY5C,EACtC+C,EAAmBE,GAAGrF,QAAQyF,yBAChCN,EAAmBE,GAAGrF,QAAQyF,uBAAyB,IAAMrD,EAAI,IAAMiD,GAGrE,KAAA,GAGFG,EAFDP,EAAMS,eAAe,UAAU,GAC9BF,EAAK,IAAIP,EAAMU,SAAUV,EAAMW,IAAK,GAC5BC,cAAc,EAEjB3I,SAASuD,cAAc,IAAI,EAGhCqF,EAAaX,EAAmBE,GAAGrH,aAAc,OAAQ,EAMzD+H,GALJP,EAAGQ,aAAc,QAASF,CAAW,EACrCN,EAAGS,QAAUd,EAAmBE,GAAGY,QACnCT,EAAGF,QAAUC,EACbC,EAAGxF,QAAQyF,uBAAyBN,EAAmBE,GAAGrF,QAAQyF,uBAEjDN,EAAmBE,GAAGrF,QAAQkG,QAC3CC,EAAiB9H,SAAU0H,CAAW,EAAI1H,SAAU8G,EAAmBE,GAAGY,OAAQ,EAClFG,EAAQ,KAAA,EACL,CAAEA,GAAYD,EAAiBlB,EAAMoB,SACxCD,EAAWnB,EAAMC,KAAKF,GAAWvG,cAAe,kBAAoB0H,EAAiB,IAAK,EAC1FA,CAAc,GAElBlB,EAAMC,KAAKF,GAAWsB,aAAcd,EAAIY,CAAS,EAEjDG,wBAAwBtB,CAAK,CACjC,CAIhB,EACAuB,sBAAuB,SAAUvB,GAC7B,GAAGA,EAAO,CAEN,IADA,IAAIwB,EAAGC,mBAAOzB,EAAM0B,qBAAsB,IAAK,CAAC,EACvCvE,EAAI,EAAGA,EAAIqE,EAAIpE,OAAQD,CAAC,GAC7B,GAAIqE,EAAIrE,GAAGwE,aAAc,gCAAiC,EAGtD,IAFA,IAAIC,EAA6BJ,EAAIrE,GAAGpC,QAAQyF,uBAC5CqB,EAAwB7B,EAAMjG,iBAAkB,oCAAsC6H,EAA6B,IAAK,EACnHxB,EAAI,EAAGA,EAAIyB,EAAsBzE,OAAQgD,CAAC,GAC/C,GAAIyB,EAAsBzB,IAAMyB,EAAsBzB,EAAI,IAClDyB,EAAsBzB,GAAG0B,YAAcD,EAAsBzB,EAAI,GAAG0B,YACpE,CAAED,EAAsBzB,GAAG0B,WAAWzI,UAAUC,SAAU,iBAAkB,GAC5E,CAAEuI,EAAsBzB,EAAI,GAAG0B,WAAWzI,UAAUC,SAAU,iBAAkB,GAC1EuI,EAAsBzB,EAAI,GAAGrF,QAAQgH,QAAU3I,SAAUyI,EAAsBzB,GAAGrF,QAAQgH,MAAO,EACnG3I,SAAUyI,EAAsBzB,GAAGC,OAAQ,EAAM,CACjDwB,EAAsBzB,GAAGC,SAAWwB,EAAsBzB,EAAI,GAAGC,QAIjE,IAFA,IAAI2B,EAAkCP,mBAAOI,EAAsBzB,EAAI,GAAGD,QAAQ,EAEzE8B,EAAI,EAAGA,EAAID,EAAmC5E,OAAQ6E,CAAC,GAC5DJ,EAAsBzB,GAAGlE,YAAa8F,EAAmCC,EAAG,EAGlEJ,EAAsBzB,EAAI,GAAG0B,WACnCI,YAAaL,EAAsBzB,EAAI,EAAG,CACtD,CAOpBkB,wBAAwBtB,CAAK,CACjC,CACJ,EACAmC,mBAAoB,SAAUC,EAAKpC,GAC/B,IAAM,IAAI7C,EAAI,EAAGA,EAAI6C,EAAMC,KAAK7C,OAAQD,CAAC,GAAK,CAC1C,GAAIiF,EAAMpC,EAAMoB,SACD,GAAPgB,GAAc,CAAEpC,EAAMC,KAAK9C,GAAG3D,cAAe,kBAAoB4I,EAAM,IAAK,EAS5E,IARA,IAKIC,EAEAC,EAPAC,EAAcvC,EAAMC,KAAK9C,GAAGgD,SAE5BI,EAAE,KAAA,EACFiC,EAAoBD,EAAYnF,OAChCqF,EAAO,KAAA,EAIFrC,EAAI,EAAGA,EAAIoC,EAAmBpC,CAAC,GACpC,GAA6B,EAAzBmC,EAAYnC,GAAGY,SAAe5H,SAAUmJ,EAAYnC,GAAGrF,QAAQkG,MAAO,EAAImB,GAC1EhJ,SAAUmJ,EAAYnC,GAAGrF,QAAQkG,MAAO,EAAI7H,SAAUmJ,EAAYnC,GAAGY,OAAQ,EAAIoB,EAAM,CAGnF7B,EAFDP,EAAMS,eAAe,UAAU,GAC9BF,EAAK,IAAIP,EAAMU,SAAUV,EAAMW,IAAK,GAC5BC,cAAc,EAEjB3I,SAASuD,cAAc,IAAI,EAGpC6G,EAAeE,EAAYnC,GAAGC,QAC9BqC,EAAaH,EAAYnC,GAAGY,QAC5BuB,EAAYnC,GAAGY,QAAUoB,EAAMG,EAAYnC,GAAGrF,QAAQkG,OACtDqB,EAAeI,EAAaH,EAAYnC,GAAGY,QAErCuB,EAAYnC,GAAGrF,QAAQyF,yBACzB+B,EAAYnC,GAAGrF,QAAQyF,uBAAyB,IAAMrD,EAAI,IAAMiD,GAGpE,IAAIuC,EAAcJ,EAAYnC,GAAGrH,aAAc,OAAQ,EAGnD6J,GAFJrC,EAAGQ,aAAc,QAAS4B,CAAY,EAElB3C,EAAMxG,cAAe,kBAAoB4I,EAAM,IAAK,GAKpES,GAJAD,IACArC,EAAGuC,MAAMC,MAAQH,EAAcE,MAAMC,OAGrB/C,EAAMxG,cAAe,kBAAoB2D,EAAI,IAAK,GAClE0F,IACAtC,EAAGuC,MAAME,OAASH,EAAcC,MAAME,QAGtCP,EADAF,EAAYnC,EAAI,IAGN,KAGdJ,EAAMC,KAAK9C,GAAGkE,aAAcd,EAAIkC,CAAQ,EACxClC,EAAGS,QAAUsB,EACb/B,EAAGF,QAAUgC,EACb9B,EAAGxF,QAAQyF,uBAAyB+B,EAAYnC,GAAGrF,QAAQyF,uBAC3DrD,GAAKkF,EAAe,EACpB,KACJ,CAIZf,wBAAwBtB,CAAK,CACjC,CACJ,EACAiD,oBAAqB,SAAUjD,GAC3B,GAAIA,EAAQ,CAER,IADA,IAAIwB,EAAGC,mBAAOzB,EAAM0B,qBAAsB,IAAK,CAAC,EACvCvE,EAAI,EAAGA,EAAIqE,EAAIpE,OAAQD,CAAC,GAC7B,GAAIqE,EAAIrE,GAAGwE,aAAc,gCAAiC,EAKtD,IAJA,IAAIC,EAA6BJ,EAAIrE,GAAGpC,QAAQyF,uBAC5CqB,EAAqBJ,mBAAOzB,EAAMjG,iBAAkB,oCAAsC6H,EAA6B,IAAK,CAAC,EAE7HsB,EAAe,KACV9C,EAAI,EAAGA,EAAIyB,EAAsBzE,OAAQgD,CAAC,GAC/C,GAAIyB,EAAsBzB,IAAMyB,EAAsBzB,EAAI,IACtD,CAAEyB,EAAsBzB,GAAG/G,UAAUC,SAAU,oBAAqB,GACpE,CAAEuI,EAAsBzB,EAAI,GAAG/G,UAAUC,SAAU,oBAAqB,GAClEuI,EAAsBzB,EAAI,GAAGrF,QAAQkG,QAAU7H,SAAUyI,EAAsBzB,GAAGrF,QAAQkG,MAAO,EACnG7H,SAAUyI,EAAsBzB,GAAGY,OAAQ,EAAM,CAIjDa,EAFIqB,EADgB,MAAhBA,EACe9C,EAEG8C,GAAclC,SAAWa,EAAsBzB,EAAI,GAAGY,QAI5E,IAFA,IAAIgB,EAAkCP,mBAAOI,EAAsBzB,EAAI,GAAGD,QAAQ,EAEzE8B,EAAI,EAAGA,EAAID,EAAmC5E,OAAQ6E,CAAC,GAC5DJ,EAAsBqB,GAAchH,YAAa8F,EAAmCC,EAAG,EAG7EJ,EAAsBzB,EAAI,GAAG0B,WACnCI,YAAaL,EAAsBzB,EAAI,EAAG,CACtD,CAMhBkB,wBAAwBtB,CAAK,CACjC,CACJ,CACJ,ECxKImD,qCAAuC,SAAUnD,EAAOoD,EAAWC,EAAYC,EAAcC,GAE7F,IAAIC,EAAiB,EACjBC,EAAezD,EAAMoB,QACnBsC,EAAa,GACfjI,EAAO,GA4DX,OA3DI8H,GAAmBA,EAAgBI,aAAa3D,CAAK,EACrD0D,EAAU,OAAU,SAAUE,GAC1B,IAAMC,EAAaN,EAAgBI,aAAa3D,CAAK,EAEjD8D,EAAc,UAmClB,OAlCIF,GAAKA,EAAEG,SACPD,EAAcF,EAAEG,OAAOD,aAE3BrI,EAAO,CAAC2H,EAAW,GACC,YAAhBU,EACID,EAAWpD,eAAe,aAAa,IACjCxB,EAAO4E,EAAWG,gBAClBC,EAAcJ,EAAWI,YAAYhF,IAG3BwB,eAAe,gBAAgB,GAC3CwD,EAAYC,eAAezD,eAAeqD,CAAW,GACrDG,EAAYC,eAAeJ,GAGvBG,EAAYxD,eAAe,oBAAoB,GAC/CwD,EAAYE,mBAAmB1D,eAAeqD,CAAW,IAEL,QAAhDG,EAAYE,mBAAmBL,IAC/BrI,EAAO,CAAC4H,EAAY,GACpBG,EAAiBC,EAAe,GACuB,WAAhDQ,EAAYE,mBAAmBL,IAClCG,EAAYxD,eAAe,aAAa,IACxC+C,EAAiBS,EAAYG,YAAYN,KAKrDN,EAAiB,GAIzBA,EAAiB,EAEd,CAAE/H,KAAAA,EAAM+H,eAAAA,CAAe,CAClC,EAEAE,EAAU,OAAU,SAAUE,GAE1B,IAOQS,EAPR,OADA5I,EAAO,CAAC2H,EAAW,GACfpD,EAAM3G,UAAUC,SAAS,yBAAyB,GAC9C0G,EAAM3G,UAAUC,SAAS,yBAAyB,IAClDmC,EAAO,CAAC4H,EAAY,MACPC,IACTE,EAAiBC,EAAe,GAGpCY,EAAWrE,EAAM8B,WAAWA,WAAWtI,cAAc,4BAA4B,EAC9E,CAAEiC,KAAAA,EAAM+H,eAAAA,EAAgBa,SAAAA,CAAS,GAGrC,CAAE5I,KAAAA,EAAM+H,eAAAA,CAAe,CAClC,EAGGE,CACX,E,urCCrEA,CAAA,SAAyBrJ,EAAKC,EAASnC,GACf,YAAL,aAAd,OAAOqC,QAAO,YAAAC,QAAPD,OAAO,IAAmC,aAAlB,OAAOD,OACzCA,OAAOC,QAAUrC,EAAQ,EAGzBmC,EAAQD,GAAOlC,EAAQ,CAGxB,EAAE,qBAAsBgC,MAAQC,OAAQ,WAiyBxC,OAhyBA,WAAsC,IAC/B4F,EAASzH,KAAKyH,OADU,EAAArB,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,IACGqB,MAE9BsE,GADNhD,wBAAwBtB,CAAK,EACVzH,MAmRnB,SAASgM,EAAoBX,EAAGnI,EAAM+I,GACrC,IACOC,EACAC,EACFC,EAHoB,OAArBf,EAAEgB,OAAOC,UACNJ,EAAiB7F,MAAbgF,EAAEkB,QAAuBlB,EAAEmB,OAASnB,EAAEkB,QAC1CJ,EAAiB9F,MAAbgF,EAAEoB,QAAuBpB,EAAEqB,OAASrB,EAAEoB,QAC5CL,EAAS,CAAA,EAEZA,EADa,aAATlJ,GAAuBmI,EAAEgB,OAAOM,YAAcT,GAAK,IAAiB,eAAThJ,GAAyBgJ,GAAK,IAG1FE,KAAWf,EAAEgB,OAAOO,aAAe,IAAM,EAAIT,IAAMd,EAAEgB,OAAOO,aAAe,IAAM,EAAIT,EACxFF,EAAQnL,UAAU+L,IAAI,gBAAgB,EAKvCZ,EAAQnL,UAAUgM,OAAO,gBAAgB,CAE3C,CAOA,SAASC,EAA6B1B,GACrCW,EAAoBX,EAAG,WAAYrL,IAAI,CACxC,CAOA,SAASgN,EAA+B3B,GACvCW,EAAoBX,EAAG,aAAcrL,IAAI,CAC1C,CAKA,SAASiN,IACRjN,KAAKc,UAAUgM,OAAO,gBAAgB,CACvC,CASA,SAASI,EAAc7B,EAAGnI,GACzB,GACCmI,EAAEgB,QACmB,OAArBhB,EAAEgB,OAAOC,SACT,CAAC7E,EAAM8B,WAAWzI,UAAUC,SAAS,iCAAiC,EACrE,CACD,IAAM0G,EAAQ4D,EAAE8B,cACZC,EAAiB,CAAA,EACrB,GAAa,aAATlK,GAAuBmI,EAAEgB,OAAO7J,QAAQ0F,eAAe,gBAAgB,EAAG,CAK7E,IAAMmF,EAAkB,GAClBC,EAAiB,GACvB,GAAItN,KAAKiL,gBAAkBjL,KAAKiL,eAAiBxD,EAAMC,KAAK7C,OAAQ,CACnEkE,wBAAwBtB,CAAK,EAG7B,IAFA,IAAM8F,EAAYrE,mBAAOzB,EAAMC,IAAI,EAC7B8F,EAAgB/F,EAAMxG,cAAc,OAAO,EAAIwG,EAAMxG,cAAc,OAAO,EAAIwG,EAC3E7C,EAAI,EAAGA,EAAI2I,EAAa1I,OAAQD,CAAC,GACrCA,EAAIyG,EAAEgB,OAAO7J,QAAQgH,QACxB6D,EAAgB1L,KAAK4L,EAAa3I,EAAE,EACpC4I,EAAc7D,YAAY4D,EAAa3I,EAAE,GAC/BA,EAAI/D,SAASwK,EAAEgB,OAAO7J,QAAQgH,OAAQ,EAAE,EAAIxJ,KAAKiL,iBAC3DqC,EAAe3L,KAAK4L,EAAa3I,EAAE,EACnC4I,EAAc7D,YAAY4D,EAAa3I,EAAE,GAG3CmE,wBAAwBtB,CAAK,CAC9B,CAEA,IAMIgG,EACAC,EAPAzE,EAAMxB,EAAMjG,iBAAgB,kBAAAwB,OAAmBqI,EAAEgB,OAAO7J,QAAQkG,OAAM,IAAA,CAAI,GAQ9EO,EAPGC,mBAAOD,CAAG,GAOTxH,IAAI,SAACuG,GACFyF,GAAAA,EAAU5M,SAASmH,EAAGF,QAAS,EAAE,IAC5B,EAEX4F,EAAS1F,EAAGxF,QAAQgH,OACpBlC,kBAAkBC,qBAAqBmG,EAAQjG,CAAK,EACpDiG,GAAUD,EACVnG,kBAAkBC,qBAAqBmG,EAAQjG,CAAK,CACrD,CAAC,EAMD,IAJA,IACIkG,EADEC,EAAgB,GAElBC,EAA2B,EACzBC,EAAkB,GACflJ,EAAI,EAAGA,EAAIqE,EAAIpE,OAAQD,CAAC,GAAI,CACpC,IAAMmJ,EAAaC,EAClB3C,EACA5D,EACAwB,EACArE,EACAiJ,EACA,UACD,EACA,GAAIE,GAAcA,EAAW7F,eAAe,GAAG,EAC9Ce,EAAM8E,EAAW9E,IACjBrE,EAAImJ,EAAWnJ,MAFhB,CAkBA,IAVA,IAAMoD,GAHLiB,EADU8E,EACJA,EAAW9E,IAGPA,GAAIrE,GAGVqJ,GAAAA,EADWpN,SAASmH,EAAGF,QAAS,EAAE,IACX,EAE5B+F,EAA2BhN,SAASmH,EAAGxF,QAAQgH,OAAQ,EAAE,EAAIyE,EAEvDC,EAAqBC,EAAsBnG,CAAE,EAE7CoG,EAAS,GACNvG,EAAI,EAAGA,EAAIoG,EAAWpG,CAAC,GAC/BuG,EAAOzM,KAAK8F,EAAMC,KAAK7G,SAASmH,EAAGxF,QAAQgH,OAAQ,EAAE,EAAI3B,EAAE,EAC3DiG,EAAgBnM,KAAKd,SAASmH,EAAGxF,QAAQgH,OAAQ,EAAE,EAAI3B,CAAC,EAEjC,EAApBG,EAAGxF,QAAQgH,OACdoE,EAAcjM,KAAK,CAClByM,OAAAA,EACAC,MAAOH,CACR,CAAC,EAEDP,EAAcS,CAtBf,CAwBD,CAEA,IAAME,EAAUC,EAAqBlD,EAAG,gBAAgB,EACxD,GAAI,CAACiD,EAAS,OAMd,GAJIV,EAAc/I,QAAQ+I,EAAcY,KAAK,SAACC,EAAMC,GAAI,OAAKC,EAAUL,EAASG,EAAMC,CAAI,CAAC,CAAA,EAE3Fd,EAAcgB,QAAQ,CAAER,OAAQT,CAAY,CAAC,EAEzCC,EAAc/I,OAAS4C,EAAMC,KAAK7C,OACrC,IAAK,IAEEuJ,EAFExJ,EAAI,EAAGA,EAAI6C,EAAMC,KAAK7C,OAAQD,CAAC,GACN,CAAC,EAA9BkJ,EAAgBrI,QAAQb,CAAC,KACvBwJ,EAAS,IACRzM,KAAK8F,EAAMC,KAAK9C,EAAE,EAEzBgJ,EAAcjM,KAAK,CAClByM,OAAAA,CACD,CAAC,GAIH,IAaOZ,EAECqB,EAODrB,EAtBDsB,EAAQrH,EAAMxG,cAAc,OAAO,EACzC6N,EAAMhL,UAAY,GAElB8J,EAAcnM,IAAI,SAACsN,GAClBA,EAAWX,OAAO3M,IAAI,SAACuN,GACtBF,EAAMnL,YAAYqL,CAAG,CACtB,CAAC,CACF,CAAC,EAKG3B,EAAgBxI,SACb2I,EAAgB/F,EAAMxG,cAAc,OAAO,EAAIwG,EAAMxG,cAAc,OAAO,EAAIwG,KAE7EoH,EAAQrB,EAAcvM,cAAc,IAAI,EAC9CoM,EAAgB5L,IAAI,SAACwN,GACpBzB,EAAc1E,aAAamG,EAAIJ,CAAK,CACrC,CAAC,GAGCvB,EAAezI,SACZ2I,EAAgB/F,EAAMxG,cAAc,OAAO,EAAIwG,EAAMxG,cAAc,OAAO,EAAIwG,EAChFqH,IACHxB,EAAe7L,IAAI,SAACwN,GACnBzB,EAAc7J,YAAYsL,CAAE,CAC7B,CAAC,EAIHlG,wBAAwBtB,CAAK,EAE7BH,kBAAkB0B,sBAAsBvB,CAAK,EAE7C2F,EAAiB,CAAA,CAClB,MAAO,GAAa,eAATlK,GAAqD,MAA5BmI,EAAEgB,OAAO7J,QAAQkG,OAAgB,CACpE,IAIIwG,EACAC,EALAlG,EAAMxB,EAAMjG,iBAAgB,kBAAAwB,OAAmBqI,EAAEgB,OAAO7J,QAAQgH,OAAM,IAAA,CAAI,GAM9EP,EALGC,mBAAOD,CAAG,GAKTxH,IAAI,SAACuG,GACFkH,GAAAA,EAAUrO,SAASmH,EAAGS,QAAS,EAAE,IAC5B,EAEX0G,EAASnH,EAAGxF,QAAQkG,OACpBpB,kBAAkBsC,mBAAmBuF,EAAQ1H,CAAK,EAClD0H,GAAUD,EACV5H,kBAAkBsC,mBAAmBuF,EAAQ1H,CAAK,CACnD,CAAC,EAMD,IAJA,IACI2H,EADEC,EAAmB,GAGrBC,EAA2B,EACtB1K,EAAI,EAAGA,EAAIqE,EAAIpE,OAAQD,CAAC,GAAI,CACpC,IAAMmJ,EAAaC,EAClB3C,EACA5D,EACAwB,EACArE,EACA0K,EACA,YACD,EACA,GAAIvB,GAAcA,EAAW7F,eAAe,GAAG,EAC9Ce,EAAM8E,EAAW9E,IACjBrE,EAAImJ,EAAWnJ,MAFhB,CAgBA,IARA,IAAMoD,GAHLiB,EADU8E,EACJA,EAAW9E,IAGPA,GAAIrE,GAEV2K,GAAAA,EADW1O,SAASmH,EAAGS,QAAS,EAAE,IACX,EAE5B6G,EAA2BzO,SAASmH,EAAGxF,QAAQkG,OAAQ,EAAE,EAAI6G,EAEvDrB,EAAqBC,EAAsBnG,CAAE,EAC7CwH,EAAY,GACT3H,EAAI,EAAGA,EAAI0H,EAAW1H,CAAC,GAAI,CACnC,IAAM4H,EAASvG,mBACXzB,EAAMjG,iBAAgB,kBAAAwB,OAAmBnC,SAASmH,EAAGxF,QAAQkG,OAAQ,EAAE,EAAIb,EAAC,IAAA,CAAI,CAAC,EAErF2H,EAAU7N,KAAK8N,CAAS,CACzB,CACwB,EAApBzH,EAAGxF,QAAQkG,OACd2G,EAAiB1N,KAAK,CACrB6N,UAAAA,EACAnB,MAAOH,CACR,CAAC,EAEDkB,EAAiBI,CAtBlB,CAwBD,CAEA,IAAMlB,EAAUC,EAAqBlD,EAAG,kBAAkB,EAC1D,GAAI,CAACiD,EAAS,OAMd,GAJIe,EAAiBxK,QAAQwK,EAAiBb,KAAK,SAACC,EAAMC,GAAI,OAAKC,EAAUL,EAASG,EAAMC,CAAI,CAAC,CAAA,EAEjGW,EAAiBT,QAAQ,CAAEY,UAAWJ,CAAe,CAAC,EAElDC,EAAiBxK,OAAS4C,EAAMoB,QAEnC,IADA,IAAM6G,EAAajI,EAAMoB,QAAUwG,EAAiBxK,OAC3CD,EAAI,EAAGA,EAAI8K,EAAY9K,CAAC,GAAI,CACpC,IAAM6K,EAASvG,mBACXzB,EAAMjG,iBAAgB,kBAAAwB,OACNnC,SAAS4G,EAAMoB,QAAS,EAAE,EAAIhI,SAAS6O,EAAY,EAAE,EAAI9K,EAAC,IAAA,CAC7E,CAAC,EAGFyK,EAAiB1N,KAAK,CACrB6N,UAAW,CAACC,EACb,CAAC,CACF,CAGD,IAAK,IAAI7K,EAAI,EAAGA,EAAI6C,EAAMC,KAAK7C,OAAQD,CAAC,GACvC6C,EAAMC,KAAK9C,GAAGd,UAAY,GAG3BuL,EAAiB5N,IAAI,SAACkO,GACrBA,EAAcH,UAAU/N,IAAI,SAACgO,GAC5BA,EAAUhO,IAAI,SAACuG,GACdP,EAAMC,KAAKM,EAAGxF,QAAQgH,QAAQ7F,YAAYqE,CAAE,CAC7C,CAAC,CACF,CAAC,CACF,CAAC,EAEDe,wBAAwBtB,CAAK,EAE7BH,kBAAkBoD,oBAAoBjD,CAAK,EAE3C2F,EAAiB,CAAA,CAClB,CAEA,GAAIA,EAAgB,CAiMrB,IAhMEwC,IA+LIC,EAAM3G,mBA/LmBzB,EA+LN0B,qBAAqB,IAAI,CAAC,EAC1CvE,EAAI,EAAGA,EAAIiL,EAAOhL,OAAQD,CAAC,GAC/BiL,EAAOjL,GAAGwE,aAAa,gCAAgC,GAC1DyG,EAAOjL,GAAGkL,gBAAgB,gCAAgC,EAhMtDrI,EAAMS,eAAe,SAAS,IAEjC,IADgBT,EAAMsI,QAAQ,IAChBC,cAAc,EAG7BhQ,KAAKiQ,uBAAuB,IAAI,EAChCjQ,KAAKiQ,uBAAuB,IAAI,CACjC,CACD,CACD,CAUA,SAAS1B,EAAqBlD,EAAG6E,GAChC,MACC7E,EAAAA,CAAAA,EAAE8B,eACD9B,CAAAA,EAAE8B,cAAcrM,UAAUC,SAAS,oBAAoB,GACvDsK,CAAAA,EAAE8B,cAAcrM,UAAUC,SAAS,2BAA2B,KAE1DsK,EAAEgB,OAAO7J,QAAQ0N,IAA4C,QAA/B7E,EAAEgB,OAAO7J,QAAQ0N,GAGnD7E,EAAEgB,OAAO7J,QAAQ0N,GAAY,MAF7B7E,EAAEgB,OAAO7J,QAAQ0N,GAAY,OAKvB7E,EAAEgB,OAAO7J,QAAQ0N,GAI1B,CAUA,SAASvB,EAAT,EAAA,EAAA,GAAgD,IAA7BL,EAAO,EAAAlI,UAAAvB,QAAAwB,KAAAA,IAA1B,EAAA,EAA6B,MACxB8J,GADmC,EAAA/J,UAAAvB,OAAxC,EAAwCwB,KAAAA,GAClBgI,MACjB+B,GAFyC,EAAAhK,UAAAvB,OAA9C,EAA8CwB,KAAAA,GAExBgI,MAMrB,OALIxN,SAASsP,CAAS,GAAKtP,SAASuP,CAAS,IAC5CD,EAAYtP,SAASsP,CAAS,EAC9BC,EAAYvP,SAASuP,CAAS,GAGf,QAAZ9B,EACC6B,EAAYC,EACR,CAAC,EAELD,IAAcC,EACV,EAED,EAEJD,EAAYC,EACR,EAEJD,IAAcC,EACV,EAED,CAAC,CACT,CAQA,SAASjC,EAAsBkC,GAI9B,IAHA,IAAIC,EAAeD,EAAK7O,iBAAiB,sBAAsB,EAC/D8O,EAAYpH,mBAAOoH,CAAY,EAC3BjC,EAAQ,GACHxG,EAAI,EAAGA,EAAIyI,EAAazL,OAAQgD,CAAC,GACzCwG,GAASiC,EAAazI,GAAG0I,UACrB1I,IAAMyI,EAAazL,OAAS,IAAGwJ,GAAS,KAG7C,OAAOA,CACR,CAeA,SAASL,EAA2B3C,EAAG5D,EAAOwB,EAAKrE,EAAG4L,EAAiBtN,GACtE,IAGIuN,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAC,EAVE/I,EAAKiB,EAAIrE,GACXoM,EAAuB,CAAA,EA2B3B,GAhBa,aAAT9N,GACHwN,EAA6B,UAC7BC,EAAY,eACZC,EAAqB,SACrBC,EAAkC,SAClCC,EAAiB,UACjBC,EAAkBtJ,EAAMC,KAAK7C,QACV,eAAT3B,IACVwN,EAA6B,UAC7BC,EAAY,eACZC,EAAqB,SACrBC,EAAkC,SAClCC,EAAiB,UACjBC,EAAkBtJ,EAAMoB,SAG8B,EAAnDb,EAAGxF,QAAQoO,GAAsBJ,EAGpC,IAAK,IAFLS,EAAgBxJ,EAAMjG,iBAAgB,IAAAwB,OAAK2N,EAAS,IAAA,EAAA3N,OAAKwN,EAAe,IAAA,CAAI,EAEnE3I,EAAI,EAAGA,EAAIoJ,EAAcpM,OAAQgD,CAAC,GAI1C,GAFK4I,GADLA,EAAqBQ,EAAcpJ,GAAG6I,KACQ,EAG7CO,EAAcpJ,GAAGrF,QAAQqO,GACxBxF,EAAEgB,OAAO7J,QAAQqO,IAClBhQ,SAASoQ,EAAcpJ,GAAGrF,QAAQqO,GAAkC,EAAE,EACrEhQ,SAAS4P,EAAoB,EAAE,EAC/BpF,EAAEgB,OAAO7J,QAAQqO,GACjB,CACD5H,EAAIiI,OAAOtM,EAAG,EAAGqM,EAAcpJ,EAAE,EACjCmJ,EAAuB,CAAA,EACvBpM,CAAC,GACD,KACD,CAIF,GAAIoM,EAAsB,MAAO,CAAE/H,IAAAA,EAAKrE,EAAAA,CAAE,EAGrCuM,GAAAA,EADQtQ,SAASmH,EAAG8I,GAAiB,EAAE,IACtB,EACtB,GAAIlM,GAAKqE,EAAIpE,OAAS,GAAKhE,SAASmH,EAAGxF,QAAQoO,GAAqB,EAAE,EAAIO,EAASJ,EAAiB,CACnGE,EAAgBxJ,EAAMjG,iBAAgB,IAAAwB,OACjC2N,EAAS,IAAA,EAAA3N,OAAKnC,SAASmH,EAAGxF,QAAQoO,GAAqB,EAAE,EAAIO,EAAM,IAAA,CACxE,EACA,IAAK,IAAItJ,EAAI,EAAGA,EAAIoJ,EAAcpM,OAAQgD,CAAC,GAI1C,GAFK4I,GADLA,EAAqBQ,EAAcpJ,GAAG6I,KACQ,EAG7CO,EAAcpJ,GAAGrF,QAAQqO,GACxBxF,EAAEgB,OAAO7J,QAAQqO,IAClBhQ,SAASoQ,EAAcpJ,GAAGrF,QAAQqO,GAAkC,EAAE,EACrEhQ,SAAS4P,EAAoB,EAAE,EAC/BpF,EAAEgB,OAAO7J,QAAQqO,GACjB,CACD5H,EAAItH,KAAKsP,EAAcpJ,EAAE,EACzBmJ,EAAuB,CAAA,EACvB,KACD,CAEF,CAEA,MAAIA,CAAAA,CAAAA,GAA6B,CAAE/H,IAAAA,CAAI,CAExC,CAkCA,OAzxBAjJ,KAAKiL,eAAiB,EACtBjL,KAAKkL,aAAezD,EAAMoB,QAC1B7I,KAAKoR,kBAAoB,GACzBpR,KAAKqR,iBAAmB,GASxBrR,KAAKsR,iBAAmB,SAAUpO,EAAMqO,GACpCA,IACFvR,KAAKsR,iBAAiB,aAAc,CAAA,CAAK,EACzCtR,KAAKsR,iBAAiB,WAAY,CAAA,CAAK,GAG3B,aAATpO,GACHlD,KAAKyH,MAAM+J,oBAAoB,QAASxR,KAAKyR,2BAA4B,CAAA,CAAK,EAE1EF,GACHvR,KAAK0R,6BAA6B,WAAY,CAAA,CAAI,EAClD1R,KAAKyH,MAAM9H,iBAAiB,QAASK,KAAKyR,2BAA4B,CAAA,CAAK,EAC3EzR,KAAKyH,MAAMjF,QAAQmP,0BAA4B,IAC/C3R,KAAK4R,gCAAgC,IAAI,EACzC5R,KAAK4R,gCAAgC,IAAI,IAEzC5R,KAAK0R,6BAA6B,WAAY,CAAA,CAAK,EACnD,OAAO1R,KAAKyH,MAAMjF,QAAQmP,4BAER,eAATzO,IACVlD,KAAKyH,MAAM+J,oBAAoB,QAASxR,KAAK6R,6BAA8B,CAAA,CAAK,EAE5EN,GACHvR,KAAK0R,6BAA6B,aAAc,CAAA,CAAI,EACpD1R,KAAKyH,MAAM9H,iBAAiB,QAASK,KAAK6R,6BAA8B,CAAA,CAAK,EAC7E7R,KAAKyH,MAAMjF,QAAQsP,4BAA8B,IACjD9R,KAAK4R,gCAAgC,IAAI,EACzC5R,KAAK4R,gCAAgC,IAAI,IAEzC5R,KAAK0R,6BAA6B,aAAc,CAAA,CAAK,EACrD,OAAO1R,KAAKyH,MAAMjF,QAAQsP,6BAG7B,EAQA9R,KAAK+R,kBAAoB,WAAwB,IAAdC,EAAK5L,EAAA,EAAAA,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,KAAAA,UAAA,GAMvC,OALGpG,KAAKyH,MAAM3G,UAAUC,SAAS,yBAAyB,GAAKiR,EAC9DhS,KAAKyH,MAAQA,EAAM8B,WAAWA,WAAWtI,cAAc,4BAA4B,EAC1EjB,KAAKyH,MAAM3G,UAAUC,SAAS,2BAA2B,GAAK,CAACiR,IACxEhS,KAAKyH,MAAQA,EAAM8B,WAAWtI,cAAc,qBAAqB,GAE3DjB,KAAKyH,KACb,EAOAzH,KAAK4R,gCAAkC,SAAUK,GAChDjS,KAAK+R,kBAAkB,EACvB,IAAIG,EAAWlS,KAAKyH,MAAMjG,iBAAiByQ,CAAY,EACvD,GAAGC,EAASrN,OACX,IAAI,IAAID,EAAI,EAAGA,EAAIsN,EAASrN,OAAQD,CAAC,GAAI,CACxC,IAAIuN,EAAOD,EAAStN,GAEhBwN,EADmBC,OAAOC,iBAAiBH,EAAM,IAAI,EAClBI,iBAAkB,kBAAmB,EACxEC,EAAY,GACI,OAAjBP,GACFO,EAAYL,EAAK3P,QAAQkG,OAAS,IAAMyJ,EAAK3P,QAAQgH,OACrDxJ,KAAKoR,kBAAkBoB,GAAa,CAACJ,gBAAAA,CAAe,GAC1B,OAAjBH,IACTO,EAAYC,OAAO7N,CAAC,EACpB5E,KAAKqR,iBAAiBmB,GAAa,CAACJ,gBAAAA,CAAe,EAGrD,CAGDpS,KAAK+R,kBAAkB,CAAA,CAAK,CAC7B,EAOA/R,KAAKiQ,uBAAyB,SAAUgC,GACvCjS,KAAK+R,kBAAkB,EACvB,IACIW,EADAR,EAAWlS,KAAKyH,MAAMjG,iBAAiByQ,CAAY,EAOvD,GALoB,OAAjBA,EACFS,EAAuB1S,KAAKoR,kBACF,OAAjBa,IACTS,EAAuB1S,KAAKqR,kBAE1Ba,EAASrN,OACX,IAAI,IAAID,EAAI,EAAGA,EAAIsN,EAASrN,OAAQD,CAAC,GAAI,CACxC,IAAIuN,EAAOD,EAAStN,GAChB4N,EAAY,GAMhB,GALoB,OAAjBP,EACFO,EAAYL,EAAK3P,QAAQkG,OAAS,IAAMyJ,EAAK3P,QAAQgH,OAC3B,OAAjByI,IACTO,EAAY5N,GAEV8N,EAAqBxK,eAAesK,CAAS,EAAG,CAClD,IACQ1Q,EADJ6Q,EAAaD,EAAqBF,GACtC,IAAQ1Q,KAAO6Q,EACdR,EAAK5H,MAAMzI,GAAO6Q,EAAW7Q,EAE/B,CACD,CAED9B,KAAK+R,kBAAkB,CAAA,CAAK,CAC7B,EAQA/R,KAAK4S,4BAA8B,SAAU5H,GAC5C,IAAIH,EACAC,EAcAK,EAGM0H,EAhBN7S,KAAKyH,MAAMjF,QAAQmP,2BAA8E,MAAjD3R,KAAKyH,MAAMjF,QAAQmP,2BACtE9G,EAAY,WACZC,EAAa,cAEb9K,KAAKyH,MAAMjF,QAAQsP,6BACgC,MAAnD9R,KAAKyH,MAAMjF,QAAQsP,8BAEnBjH,EAAY,aACZC,EAAa,YAGVD,GAAkC,UAArB,OAAOA,GAA2BC,GAAoC,UAAtB,OAAOA,IAEpEK,EAAaP,qCAAqC5K,KAAKyH,MAAOoD,EAAWC,EAAY,WAAYE,CAAe,EAE3F,WAAtB9I,QAAOiJ,CAAU,IAAiBA,EAAWjD,eAAe,QAAQ,KAC7D2K,EAAT,SAA8BxH,GAC7B,IAIMyH,EAJFC,EAAgB5H,EAAU,OAAQE,CAAC,EACX,WAAzBnJ,QAAO6Q,CAAa,IACtB/S,KAAKiL,eAAiB8H,EAAc9H,eACjC8H,EAAc7K,eAAe,UAAU,GACrC4K,EAAW9S,KAAKyH,MACpBzH,KAAKyH,MAAQsL,EAAcjH,SAC3B9L,KAAKsR,iBAAiByB,EAAc7P,KAAK,GAAI,CAAA,CAAI,EACjDlD,KAAKyH,MAAQqL,GAEb9S,KAAKsR,iBAAiByB,EAAc7P,KAAK,GAAI,CAAA,CAAI,EAGpD,GACoB8P,KAAKjH,CAAU,EACnC/L,KAAKyH,MAAM9H,iBACV,gBACA,SAAU0L,GACTwH,EAAoBG,KAAKjH,EAAYV,CAAC,CACvC,EACA,CAAA,CACD,EAEF,EASArL,KAAK0R,6BAA+B,SAAUxO,EAAMqO,GAAQ,IAAAxR,EAAAC,KAQ3D,SAASiT,EAAEjL,EAAIkL,EAAM3B,GACpBvJ,EAAGwJ,oBAAoB,YAAa0B,EAAM,CAAA,CAAK,EAC/ClL,EAAGwJ,oBAAoB,aAAcvE,EAAc,CAAA,CAAK,EACpDsE,IACHvJ,EAAGrI,iBAAiB,YAAauT,EAAM,CAAA,CAAK,EAC5ClL,EAAGrI,iBAAiB,aAAcsN,EAAc,CAAA,CAAK,EAEvD,CASA,SAASkG,EAAmBnL,EAAIkI,EAAUqB,GACrCA,EACEvJ,EAAGxF,QAAQ0N,IAAsC,kBAAzBlI,EAAGxF,QAAQ0N,GAGvClI,EAAGxF,QAAQ0N,GAAY,OAFvBlI,EAAGxF,QAAQ0N,GAAY,MAIW,QAAzBlI,EAAGxF,QAAQ0N,GACrBlI,EAAGxF,QAAQ0N,GAAY,eACY,SAAzBlI,EAAGxF,QAAQ0N,KACrBlI,EAAGxF,QAAQ0N,GAAY,gBAEzB,CAIA,IAAIjH,EAAMjJ,KAAKyH,MAAMjG,iBAAiB,IAAI,EAa1C,GAZIyH,EAAIpE,SACPoE,EAAGC,mBAAOD,CAAG,GACTxH,IAAI,SAACuG,GACRiL,EAAEjL,EAAI+E,EAA8B,CAAA,CAAK,EACzCoG,EAAmBnL,EAAI,iBAAkB,CAAA,CAAK,EAC9CiL,EAAEjL,EAAIgF,EAAgC,CAAA,CAAK,EAC3CmG,EAAmBnL,EAAI,mBAAoB,CAAA,CAAK,CACjD,CAAC,EAKEuJ,EACH,GAAa,aAATrO,EAGH,IAFA,IAAIkQ,EAAapT,KAAKyH,MAAMC,KAAK7C,OAC7BwO,EAAkB,EACF,EAAbD,GAAgB,CACtB,IAAInK,EAAMjJ,KAAKyH,MAAMjG,iBAAgB,kBAAAwB,OAAmBqQ,EAAe,IAAA,CAAI,GAE3EpK,EADGC,mBAAOD,CAAG,GACTxH,IAAI,SAACuG,GACRiL,EAAEjL,EAAI+E,EAA8BwE,CAAM,EAC1C4B,EAAmBnL,EAAI,iBAAkBuJ,CAAM,CAChD,CAAC,EAEGvR,KAAKiL,gBACRmI,GAAcpT,KAAKiL,eAAiB,EACpCoI,GAAmBrT,KAAKiL,eAAiB,GAEzCmI,EAAa,CAEf,KACmB,eAATlQ,IACN+F,EAAMjJ,KAAKyH,MAAMjG,iBAAiB,oBAAoB,GAE1DyH,EADGC,mBAAOD,CAAG,GACTxH,IAAI,SAACuG,GAEgB,EADNjI,EAAK0H,MAAMjG,iBAAgB,kBAAAwB,OAAmBgF,EAAGxF,QAAQgH,OAAM,IAAA,CAAI,EACtE3E,SACdoO,EAAEjL,EAAIgF,EAAgCuE,CAAM,EAC5C4B,EAAmBnL,EAAI,mBAAoBuJ,CAAM,EAEnD,CAAC,EAGJ,EAmgBAvR,KAAKyR,2BAA6B,SAAUpG,GAC3C6B,EAAc8F,KAAKjH,EAAYV,EAAG,UAAU,CAC7C,EAOArL,KAAK6R,6BAA+B,SAAUxG,GAC7C6B,EAAc8F,KAAKjH,EAAYV,EAAG,YAAY,CAC/C,EAEOrL,IACR,CAGD,CAAC,EC/yBD,IAAM+I,wBAA0B,SAAUtB,GAItC,IAHA,IACIwB,EADAqK,EAAM7L,EAAM0B,qBAAsB,IAAK,EAClCN,EAAU,EAAG0K,EAAc,EAAGC,EAAS,GAEtC5O,EAAI,EAAGA,EAAI0O,EAAIzO,OAAQD,CAAC,GAAK,CACnCqE,EAAMqK,EAAI1O,GAAGuE,qBAAsB,IAAK,EAEtB9C,MAAbmN,EAAO5O,KACR4O,EAAO5O,GAAK,IAIhB,IADA,IAAI6O,EAAY,EACN5L,EAAI,EAAGA,EAAIoB,EAAIpE,OAAQgD,CAAC,GAAK,CACnC,GAAqBxB,MAAhBmN,EAAO5O,GAAGiD,GACX,IAAM,IAAIsE,EAAI,EAAGA,EAAI,IAAKA,CAAC,GAAK,CAC5B,GAA6B9F,MAAxBmN,EAAO5O,GAAG6O,GAAf,CAIAD,EAAO5O,GAAG6O,GAAaxK,EAAIpB,GAC3BoB,EAAIpB,GAAGrF,QAAQkG,OAAS+K,EACxB,KAHA,CAFIA,CAAS,EAMjB,MAEAD,EAAO5O,GAAGiD,GAAKoB,EAAIpB,GACnBoB,EAAIpB,GAAGrF,QAAQkG,OAAS+K,EAI5B,GAFAxK,EAAIpB,GAAGrF,QAAQgH,OAAS5E,EAEF,EAAjBqE,EAAIpB,GAAGY,QACR,IAAM,IAAIiB,EAAI,EAAGA,EAAIT,EAAIpB,GAAGY,QAASiB,CAAC,GAElC8J,EAAO5O,GADP6O,EAAAA,GACuB,UAI/B,GAAsB,EAAjBxK,EAAIpB,GAAGC,QACR,IAAM,IAAIoE,EAAI,EAAGA,EAAIjD,EAAIpB,GAAGC,QAASoE,CAAC,GAAK,CACjB7F,MAAjBmN,EAAO5O,EAAIsH,KACZsH,EAAO5O,EAAIsH,GAAK,IAEpB,IAAM,IAAIwH,EAAI,EAAGA,EAAIzK,EAAIpB,GAAGY,QAASiL,CAAC,GAClCF,EAAO5O,EAAIsH,GAAGuH,EAAYxK,EAAIpB,GAAGY,QAAU,EAAIiL,GAAM,SAE7D,CAEJD,CAAS,EACb,CAEKxK,EAAIpE,OAASgE,IACdA,EAAUI,EAAIpE,QAGT,GAALD,IACA2O,EAAcE,EAEtB,CACAhM,EAAMkM,QAAU9K,EAChBpB,EAAMoB,QAAU0K,CACpB,E,6oMCtDA,CAAA,SAAyBzR,EAAKC,EAASnC,GACZ,YAAL,aAAd,OAAOqC,QAAO,YAAAC,QAAPD,OAAO,IAAmC,aAAlB,OAAOD,OACtCA,OAAOC,QAAUrC,EAAQ,EAGzBmC,EAAQD,GAAOlC,EAAQ,CAG9B,EAAE,0BAA2BgC,MAAQC,OAAQ,WAQ1C,SAAS+R,EAAa7M,EAAtB,GAA6C,IAAd7D,EAAI,EAAAkD,UAAAvB,QAAAwB,KAAAA,IAAnC,EAAA,EAAsC,MAClC,GAAuB,aAAnB,OAAOwN,SAAoD,gBAAzBA,QAAQC,IAAIC,SAA4B,CAE1E,GAAI1M,CAAAA,QAAQnE,GAIR,MAAM,IAAIlC,MAAK,mDAAAgC,OAAoDE,EAAI,GAAA,CAAG,EAF1EmE,QAAQnE,GAAK,WAAAF,OAAY+D,CAAO,CAAE,CAI1C,CACJ,CAUA,SAASiN,EAAWC,GAA+B,IAAAlU,EAAAC,KAAlBkU,EAAS,EAAA9N,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAgOzC,OA9NApG,KAAKiM,QAAUgI,EAEfjU,KAAKmU,gBAAkBD,EAGvBlU,KAAKoU,mBAAqB,CAAA,EAG1BpU,KAAKqU,YAAc,CACfrF,IAAK,GACLsF,OAAQ,EACZ,EAOAtU,KAAKuU,sBAAwB,WACzB,OAAOxU,EAAKqU,kBAChB,EAOApU,KAAKwU,sBAAwB,SAACC,GAC1B1U,EAAKqU,mBAAqBK,CAC9B,EAE6B,OAAzBzU,KAAKmU,kBACLnU,KAAKiM,QAAUgI,EAAYS,UAAU,CAAA,CAAI,GAK7C1U,KAAK2U,cAAgB,GAGrB3U,KAAK4U,MAAQ,CACT5F,IAAK,EACLnF,IAAK,CACT,EAEA7J,KAAK6U,eAAiB,CAClB7F,IAAK,EACLnF,IAAK,CACT,EAOA7J,KAAK8U,gBAAkB,WAEnBC,OAAOC,KAAKjV,EAAK6U,KAAK,EAAEnT,IAAI,SAACiI,GACzB,IACUuL,EADNF,OAAOG,UAAUhN,eAAe8K,KAAKjT,EAAK6U,MAAOlL,CAAC,IAC5CuL,EAAalV,EAAK6U,MAAMlL,GAE9B3J,EAAK6U,MAAMlL,GAAK3J,EAAKkM,QAAQzL,aAAY,GAAAwC,OAAI0G,EAAC,MAAA,CAAM,GAAKuL,EAEjE,CAAC,CACL,EAEAjV,KAAK8U,gBAAgB,EASrB9U,KAAKmV,QAAU,SAACC,GAAkC,IACxCC,EAD2B,EAAAjP,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,IAAAA,UAAA,GACHrG,EAAKuV,WAAW,EAAE9U,aAAY,GAAAwC,OAAIoS,EAAQ,MAAA,CAAM,EAAIrV,EAAK6U,MAAMQ,GAC7F,GAAIC,EACA,OAAOA,EAEX,MAAM,IAAIrU,MAAK,+CAAAgC,OAAgDoS,EAAQ,GAAA,CAAG,CAC9E,EAOApV,KAAKsV,WAAa,WACd,OAAOvV,EAAKkM,OAChB,EAGKgI,IACDjU,KAAKiM,QAAUvM,SAASuD,cAAc,IAAI,GAc9CjD,KAAKwI,aAAe,SAAC+M,EAAcC,GAA+C,IAA/BC,EAAM,EAAArP,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,IAAAA,UAAA,GAAUsP,EAAI,EAAAtP,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAClE6O,EAAalV,EAAKuV,WAAW,EAAEC,GAY/BI,GATsB,YAAtB,OAAOV,GAAmD,WAAtB/S,QAAO+S,CAAU,IACrDA,EAAalV,EAAKuV,WAAW,EAAE9U,aAAa+U,CAAY,GAKxDN,EADAlV,EAAK4U,cAAcY,GACNxV,EAAK4U,cAAcY,GAAa,QAGhCN,GAGbQ,EACAE,GAAU,GAAA3S,OAAO2S,CAAU,EAAA3S,OAAG0S,CAAI,EAAA1S,OAAGwS,CAAc,EAEnDG,EAAaH,EAGjBzV,EAAK4U,cAAcY,GAAgB,CAC/BlH,MAAOsH,EACPC,QAASX,CACb,EAEAlV,EAAKuV,WAAW,EAAEC,GAAgBI,CACtC,EASA3V,KAAK6V,QAAU,SAACT,EAAU/G,GAEtB,GAA6B,OAAzBtO,EAAKoU,gBAAT,CACI,IAAM2B,EAAe/V,EAAKoV,QAAQC,CAAQ,EAAI/G,EAAQ,EAAItO,EAAKoV,QAAQC,CAAQ,EAAI/G,EAEnFtO,EAAKyI,aAAY,GAAAxF,OAAIoS,EAAQ,MAAA,EAAQU,CAAY,EAGjD/V,EAAK8U,eAAeO,GAAYrV,EAAKoV,QAAQC,CAAQ,EAAIU,EAGzD,IAAK,IAAIC,EAAK,EAAGA,EAAKD,EAAe,EAAGC,GAAM,EACtChW,EAAKsU,YAAYe,IAAarV,EAAKsU,YAAYe,GAAUW,IACzDhW,EAAKsU,YAAYe,GAAUW,GAAIvB,sBAAsB,CAAA,CAAK,CAKtE,KAhBA,CAmBA,GAAI,CAACzU,EAAKwU,sBAAsB,EAC5B,MAAO,CAAA,EAGX,IAAMyB,EAAejW,EAAKoU,gBAAgBU,eAAeO,GAGzD,GAAqB,IAAjBY,EACA,MAAO,CAAA,EAGX,IAAMF,EAAeE,EAAe3H,EAAQ,EAAI2H,EAAe3H,EAEzD4H,EAAuBD,EAAeF,EAM5C,GALA/V,EAAKoU,gBAAgBU,eAAeO,GAAYa,EAEhDlW,EAAKyI,aAAY,GAAAxF,OAAIoS,EAAQ,MAAA,EAAQU,CAAY,EAGpB,GAAzBG,EAKA,IAJA,IACMC,EADsBnW,EAAKoU,gBAAgBE,YAAYe,GAAUvQ,OAC9BmR,EAAe,EAClDG,EAAWD,EAAaJ,EAAe,EAEpCC,EAAKG,EAAYH,EAAKI,EAAUJ,GAAM,EAC3ChW,EAAKsU,YAAYe,GAAUW,GAAIvB,sBAAsB,CAAA,CAAK,CA5BlE,CAgCA,MAAO,CAAA,CACX,EAOAxU,KAAKoW,eAAiB,SAACb,GACfxV,EAAK4U,cAAcY,KACnBxV,EAAKuV,WAAW,EAAEC,GAAgBxV,EAAK4U,cAAcY,GAAa,QAClExV,EAAK4U,cAAcY,GAAgBlP,KAAAA,EAE3C,EAKArG,KAAKqW,mBAAqB,WAEtBtB,OAAOC,KAAKjV,EAAK4U,aAAa,EAAElT,IAAI,SAACiI,GAC7BqL,OAAOG,UAAUhN,eAAe8K,KAAKjT,EAAK4U,cAAejL,CAAC,GAC1D3J,EAAKqW,eAAe1M,CAAC,CAE7B,CAAC,CACL,EAEO,CACH4L,WAAYtV,KAAKsV,WACjBgB,GAAItW,KAAKiM,QACTzD,aAAcxI,KAAKwI,aACnB6N,mBAAoBrW,KAAKqW,mBACzBlB,QAASnV,KAAKmV,QACdU,QAAS7V,KAAK6V,QACdxB,YAAarU,KAAKqU,YAClBG,sBAAuBxU,KAAKwU,sBAC5BD,sBAAuBvU,KAAKuU,qBAChC,CACJ,CAWA,SAASgC,EAAYC,GAAS,IAAAC,EAAAzW,KAqP1B,OA9OAA,KAAKM,aAAekW,EAQpBxW,KAAK0W,YAAc,GAOnB1W,KAAK2W,SAAW,GAQhB3W,KAAK4W,UAAY,CAAElP,KAAM,EAAG,EAO5B1H,KAAK6W,UAAY,CACbC,OAAQ,KACRC,KAAM,KACNC,IAAK,IACT,EAUAhX,KAAKiX,YAAc,SAACC,EAAGC,EAAGC,GACjBX,EAAKC,YAAYQ,KAClBT,EAAKC,YAAYQ,GAAK,IAG1BT,EAAKC,YAAYQ,GAAGC,GAAKC,CAC7B,EAOApX,KAAKqX,WAAa,WACd,IAAM3P,EAAOpG,MAAMC,KAAKkV,EAAKnW,aAAakB,iBAAiB,IAAI,CAAC,EAGhEkG,EAAK4P,OAAO,SAACC,GACT,MAA8C,SAAvCA,EAAM/U,QAAQgV,oBAEzB,CAAC,EAAE/V,IAAI,SAACyV,EAAGO,GAEPhB,EAAKG,UAAUlP,KAAK/F,KAAKuV,CAAC,EAE1B,IAAMQ,EAAQpW,MAAMC,KAAK2V,EAAE1V,iBAAiB,IAAI,CAAC,EAE7CmW,EAAe,EAEnBD,EAAMjW,IAAI,SAAC0V,EAAGS,GACV,IAAMC,EAAoB,IAAI7D,EAAWmD,CAAC,EAIpCW,GAHNrB,EAAKQ,YAAYQ,EAAIE,EAAcE,CAAiB,EACpDF,GAAgB,EAEAE,EAAkB1C,QAAQnB,EAAW+D,UAAU/I,GAAG,GAC5DgJ,EAAUH,EAAkB1C,QAAQnB,EAAW+D,UAAUzD,MAAM,EAErE,GAAc,EAAVwD,EACA,IAAK,IAAIG,EAAK,EAAGA,EAAKH,EAASG,GAAM,EAAG,CACpC,IAAMC,EAAgB,IAAIlE,EAAWmD,EAAGU,CAAiB,EACzDA,EAAkBxD,YAAYrF,IAAIrN,KAAKuW,CAAa,EACpDzB,EAAKQ,YAAYQ,EAAKQ,EAAIL,EAAIM,CAAa,CAC/C,CAEJ,GAAc,EAAVF,EACA,IAAK,IAAIG,EAAK,EAAGA,EAAKH,EAASG,GAAM,EAAG,CACpC,IAAMD,EAAgB,IAAIlE,EAAWmD,EAAGU,CAAiB,EACzDA,EAAkBxD,YAAYC,OAAO3S,KAAKuW,CAAa,EACvDzB,EAAKQ,YAAYQ,EAAIE,EAAcO,CAAa,EAChDP,GAAgB,CACpB,CAER,CAAC,CACL,CAAC,EACDlB,EAAK2B,eAAe1Q,CAAI,CAC5B,EAQA1H,KAAKoY,eAAiB,SAAC1Q,GACnB,GAAKA,GAAQA,EAAAA,EAAK7C,QAAU,GAA5B,CAqBA,IAhBA,IAAMwT,EAAqB5B,EAAKnW,aAAakC,QAAQ8V,0BAC/CC,EAAsB9B,EAAKnW,aAAakC,QAAQgW,2BAChDC,EAAqBhC,EAAKnW,aAAakC,QAAQkW,0BAW/CC,GARNlC,EAAKI,UAAUC,OACYzQ,KAAAA,IAAvBgS,EACMA,EACkC,KAAlC3Q,EAAK,GAAG6C,MAAM6H,gBACd,KACA1K,EAAK,GAAG6C,MAAM6H,gBAGc,GAAnB1K,EAAK7C,OAAS,EAAS,EAAoB,IAAhB6C,EAAK7C,OAAe,GAAK6C,EAAK7C,OAAS,GAAK,GAGjF+T,EAAK,EAAGA,EAAKD,EAAYC,GAAM,EAAG,CACvC,IAAMC,EAAUnZ,SAASuD,cAAc,IAAI,EAC3CwT,EAAKnW,aAAaW,cAAc,OAAO,EAAE0C,YAAYkV,CAAO,EAC5DnR,EAAK/F,KAAKkX,CAAO,CACrB,CAIApC,EAAKI,UAAUE,KAAOwB,GAAuBjG,iBAAiB5K,EAAK,EAAE,EAAE0K,gBACvEqE,EAAKI,UAAUG,IAAMuB,EAAsBE,EAAqBnG,iBAAiB5K,EAAK,EAAE,EAAE0K,gBAG1F,IAAK,IAAI8E,EAAI,EAAGA,EAAIyB,EAAYzB,GAAK,EACjCxP,EAAKA,EAAK7C,QAAUqS,EAAI,IAAIpK,OAAO,CAhCvC,CAkCJ,EASA9M,KAAK8Y,OAAS,SAAChY,GAAwD,IAA7CiY,EAAa,EAAA3S,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,IAAAA,UAAA,GAAU4S,EAAa,EAAA5S,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAMvD6S,GALD3X,MAAM4X,QAAQpY,CAAS,IAExBA,EAAY,CAACA,IAGC2V,EAAKnW,aAAaW,cAAc,OAAO,GASrD4X,EANCE,EAMStC,EAAKG,UAAUlP,KAAKsR,KALxBG,EAAQzZ,SAAS0Z,YAAY,GAC7BC,SAASJ,EAAW,CAAC,EAEjBE,EAAMG,yBAAwB,cAAAtW,OAAelC,EAAUoF,KAAK,GAAG,EAAC,SAAA,CAAS,EAAEqT,WAAW,IAWpG,OALAN,EAAUtV,YAAYkV,CAAO,EAG7BpC,EAAKE,SAAShV,KAAKkX,CAAO,EAEnB,CAAEvC,GAAIuC,EAASxY,GAAIoW,EAAKE,SAAS9R,OAAS,CAAE,CACvD,EAKA7E,KAAKwZ,WAAa,WAEd/C,EAAKE,SAAW,GAGhBF,EAAKnW,aAAaW,cAAc,OAAO,EAAE6C,UAAY,EACzD,EAYA9D,KAAKyZ,QAAU,SAACvC,EAAGC,GAA4B,IAAzBuC,EAAY,EAAAtT,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,IAAAA,UAAA,GAC9B,IACI,GAAIqQ,EAAKC,YAAYQ,GAAGC,GACpB,OAAIuC,EACOjD,EAAKC,YAAYQ,GAAGC,GAExBV,EAAKC,YAAYQ,GAAGC,GAAGb,EAMtC,CAJE,MAAOjL,IAOT,OADAuI,EAAY,0CAAA5Q,OAA2CkU,EAAC,GAAA,EAAAlU,OAAImU,EAAC,GAAA,EAAK,MAAM,EACjE,IACX,EAQAnX,KAAK2Z,mBAAqB,SAACrD,EAAIsD,GACrBC,EAAYpD,EAAKE,SAASiD,GAE5BtD,GAAMuD,GACNA,EAAUlW,YAAY2S,CAAE,CAEhC,EAEAtW,KAAK8Z,eAAiB,WAClB,OAAOrD,EAAKC,WAChB,EAEA1W,KAAKqX,WAAW,EAET,CACHyB,OAAQ9Y,KAAK8Y,OACbU,WAAYxZ,KAAKwZ,WACjBC,QAASzZ,KAAKyZ,QACdE,mBAAoB3Z,KAAK2Z,mBACzBrD,GAAItW,KAAKM,aACTuW,UAAW7W,KAAK6W,UAChBiD,eAAgB9Z,KAAK8Z,cACzB,CACJ,CAvQA9F,EAAW+D,UAAY,CAAE/I,IAAK,MAAOsF,OAAQ,KAAM,EA0QnD,IAAMyF,EAAgC,CAClCC,MAAO,qBACX,EAupBA,OA/oBA,WAoC6B,SAAnBC,EAAoB3Z,EAAc4Z,GACpC,IAIU/Z,EAJwBG,EAAakC,QAAQ2X,6BAI7Cha,EAAkBG,EAAaiJ,WACjC2Q,GACME,EAAiB9Z,EAAakC,QAAQ6X,2BAE5Cla,EAAgBoK,MAAMC,MAAK,GAAAxH,OAAMoX,EAAc,IAAA,GAE/Cja,EAAgBoK,MAAMC,MAAQ,GAG1C,CAmYgC,SAA1B8P,EAA2BC,GAC7B,MAAOA,CAAAA,CAAAA,GAAYA,EAAUC,iBACjC,CAQmC,SAA7BC,EAA8BF,EAAWG,GAC3C,IAMMhU,EAJN,MAAoB,aAAhB6E,EAFgBoP,EAAKC,iBAAiBF,EAAMH,EAAUM,WAAW,KAM/DnU,EAAO6T,EAAU9O,gBACjBC,EAAc6O,EAAU7O,YAAYhF,IAEvBoU,WAAY,CAACpP,EAAYoP,SAASvP,EACzD,CAoE2B,SAArBwP,EAAsBza,GACxB,IAAI0a,EAAYtb,SAASub,KAAKtO,YAExBrB,EAAaqP,EAAKvP,aAAa9K,CAAY,EAGjD,GAAIgL,GAAcA,EAAW4P,cACzB,OAAQ5P,EAAW4P,eACf,IAAK,SAEDF,EAAYtb,SAASub,KAAKtO,YAC1B,MACJ,IAAK,YAGDqO,EAAY1a,EAAaiJ,WAAWA,WAAWA,WAAWoD,YAC1D,MACJ,QAEIqO,EAAYtb,SAASub,KAAKtO,WAElC,CAGJ,OAAOqO,CACX,CAviBmC,IAAAL,EAAA3a,KAAdmb,EAAO,EAAA/U,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAioB/B,OA/nBApG,KAAKmb,QAAOC,cAAAA,cAAA,GAAQrB,CAA6B,EAAKoB,CAAO,EAE7Dnb,KAAKkS,SAAW5Q,MAAMC,KAAK7B,SAAS8B,iBAAiBxB,KAAKmb,QAAQnB,KAAK,CAAC,EAExEha,KAAKqb,eAAiBrb,KAAKkS,SAASzQ,IAAI,SAAC4J,GACrC,MAAO,CACHiL,GAAIjL,EACJiQ,YAAa,IAAI/E,EAAYlL,CAAC,CAClC,CACJ,CAAC,EASDrL,KAAKoL,aAAe,SAACkL,GACXiF,EAAkBjF,EAAG9T,QAAQgZ,yBAEnC,OAAKD,EAIEE,KAAKC,MAAM/Y,KAAK4Y,CAAe,CAAC,EAH5B,IAIf,EAkCAvb,KAAK2b,UAAY,SAACnF,EAASoF,EAAWC,EAAYC,GAE9C,IAAMC,EAAYF,EAAWjQ,mBAAmBgQ,GAE1CjQ,EAAiBkQ,EAAWlQ,eAAeiQ,GAC3C/P,EAAcgQ,EAAWhQ,YAAY+P,GAGrCI,EAAeH,CAAAA,CAAAA,EAAWG,cAAeH,EAAWG,aAAaJ,GACjEK,GAGgC5V,KAAAA,IAAlCwV,EAAWI,oBAAiF,CAAA,IAA7CJ,EAAWI,mBAAmBL,KACvEjQ,CAAAA,CAAAA,IACIkQ,CAAAA,EAAWI,oBACPJ,EAAWI,mBAAmBL,IAMhDE,EAAStC,WAAW,EAEF,YAAdoC,GACA3B,EAAiBzD,EAAS,CAAA,CAAI,EAC9BmE,EAAKuB,aAAaJ,CAAQ,IAE1B7B,EAAiBzD,EAAS,CAAA,CAAK,EAC/BmE,EAAKwB,mBACDL,EACAC,EACApQ,EACAqQ,EACAnQ,EACAoQ,CACJ,EAER,EAQAjc,KAAKoc,0BAA4B,SAACN,GAS9B,IARA,IAAMpF,EAAcoF,EAAShC,eAAe,EAEtCuC,EAAW3F,EAAY7R,OACvByX,EAAW5F,EAAY6F,OAAO,SAACC,EAAKxN,GAAG,OAAKyN,KAAKD,IAAIA,EAAKxN,EAAInK,MAAM,CAAC,EAAE,CAAC,EAExE6X,EAAW,GACXC,EAAa,GAEV/X,EAAI,EAAGA,EAAIyX,EAAUzX,CAAC,GAI3B,IAHA,IAAMoK,EAAM0H,EAAY9R,GAEpBiF,GADJ6S,EAAS9X,GAAK8X,EAAS9X,IAAM,GACnB+X,EAAW/X,IAAM,GAClBiD,EAAI,EAAGA,EAAImH,EAAInK,OAAQgD,CAAC,GAAI,CACjC,IAAMwI,EAAOrB,EAAInH,GAEXY,EAAU4H,EAAKiG,GAAG7N,QAClBX,EAAUuI,EAAKiG,GAAGxO,QAcxB,GAZA4U,EAAS9X,GAAGiF,GAAO,CACfwE,MAAOgC,EACPvI,QAAAA,EACAW,QAAAA,EACAmU,OAAQ,CAAA,EACR/S,IAAKA,EACLmF,IAAKpK,EACLiY,OAAQ,CAAA,EACRC,YAAalY,EACbmY,YAAalT,CACjB,EAEc,EAAVpB,GAAyB,EAAVX,EACf,IAAK,IAAIkV,EAAI,EAAGA,EAAIlV,EAASkV,CAAC,GAC1B,IAAK,IAAItT,EAAI,EAAGA,EAAIjB,EAASiB,CAAC,GAChB,IAANsT,GAAiB,IAANtT,IACfgT,EAAS9X,EAAIoY,GAAKN,EAAS9X,EAAIoY,IAAM,GACrCN,EAAS9X,EAAIoY,GAAGnT,EAAMH,GAAK,CACvB5B,QAAS,EACTW,QAAS,EACTmU,OAAQ,CAAA,EACR/S,IAAKA,EAAMH,EACXsF,IAAKpK,EAAIoY,EACTH,OAAQ,CAAA,EACRC,YAAalY,EAAIoY,EACjBD,YAAalT,EAAMH,CACvB,GAKZ,GAAc,EAAV5B,GAAuB,IAAR+B,EACf,IAAK,IAAImT,EAAI,EAAGA,EAAIlV,EAASkV,CAAC,GAC1BL,EAAW/X,EAAIoY,GAAKvU,EAI5BoB,GAAOpB,CACX,CAGJ,IADA,IAAMwU,EAAa,GACVrY,EAAI,EAAGA,EAAIyX,EAAUzX,CAAC,GAAI,CAE/B,IADA,IAAMoK,EAAM,GACHnH,EAAI,EAAGA,EAAIyU,EAAUzU,CAAC,GAC3BmH,EAAIrN,KAAK+a,EAAS9X,GAAGiD,EAAE,EAE3BoV,EAAWtb,KAAKqN,CAAG,CACvB,CAEA,OAAOiO,CACX,EASAjd,KAAKkd,eAAiB,SAACzV,EAAO0V,GAC1B,IAAQC,EAAwCD,EAAxCC,UAAWC,EAA6BF,EAA7BE,YAAaC,EAAgBH,EAAhBG,YAChC,GAAIF,EAAW,CAEX,IADA,IAAMtR,EAAWxK,MAAMC,KAAK,CAAEsD,OAAQ4C,EAAM,GAAG5C,MAAO,EAAG,WAAA,MAAM,EAAE,CAAA,EACxDqS,EAAI,EAAGA,EAAIzP,EAAM,GAAG5C,OAAQqS,CAAC,GAClC,IAAK,IAAIC,EAAI,EAAGA,EAAI1P,EAAM5C,OAAQsS,CAAC,GAAI,CACnCrL,EAASoL,GAAGC,GAAK1P,EAAM0P,GAAGD,GAC1B,IAAMpP,EAAUgE,EAASoL,GAAGC,GAAGrP,QACzBW,EAAUqD,EAASoL,GAAGC,GAAG1O,QAC/BqD,EAASoL,GAAGC,GAAGrP,QAAUW,EACzBqD,EAASoL,GAAGC,GAAG1O,QAAUX,CAC7B,CAEJL,EAAQqE,CACZ,CAEA,IAAMyR,EAAW9V,EACjBA,EAAQ,GAER,IAAK,IAAIyP,EAAI,EAAGA,EAAIqG,EAAS1Y,OAAQqS,CAAC,GAAI,CAEtC,IADA,IAAMlI,EAAM,GACHmI,EAAI,EAAGA,EAAIoG,EAASrG,GAAGrS,OAAQsS,CAAC,GACrCnI,EAAIrN,KAAIyZ,cAAA,GACDmC,EAASrG,GAAGC,EAAE,CACpB,EAEL1P,EAAM9F,KAAKqN,CAAG,CAClB,CAEA,GAAIsO,GAAe7V,EAAM,GAAG5C,OACxB,OAAO4C,EAGX,IAAM+V,EAAQ,GACVC,EAAW,EAETC,EAAeL,GAA8B,EAAf5V,EAAM5C,OAE1C,GAAI6Y,EAAc,CACd,IAAIC,EAAa,EACjBF,EAAW,EASX,GARAhW,EAAMtC,QAAQ,SAACuS,EAAOkG,GACZvN,EAAOqH,EAAM,GACnB8F,EAAMI,GAAO,CACTvN,KAAAA,EACAnB,QAASmB,EAAK5H,OAClB,EACAkV,EAAalB,KAAKD,IAAImB,EAAYtN,EAAK5H,OAAO,CAClD,CAAC,EACiB6U,GAAdK,EACA,OAAOlW,CAEf,CAIA,IAFA,IAAMoW,EAAc,GAEX3G,EAAI,EAAGA,EAAIzP,EAAM5C,OAAQqS,CAAC,GAI3B2G,EAAY3G,GAHXwG,EAGgB,CAAEI,OAAQN,EAAMtG,GAAGhI,QAASxH,KAAM,CAAC,CAAC8V,EAAMtG,GAAG7G,MAAO,EAFpD,CAAEyN,OAAQ,EAAGpW,KAAM,CAAC,GAAI,EAMjD,IAAK,IAAIwP,EAAI,EAAGA,EAAIzP,EAAM5C,OAAQqS,CAAC,GAI/B,IAHA,IAAMQ,EAAQjQ,EAAMyP,GACd6G,EAAYF,EAAY3G,GAC1B8G,EAASD,EAAUrW,KAAK,GACnByP,EAAIsG,EAAUtG,EAAIO,EAAM7S,OAAQsS,CAAC,GAAI,CAC1C,IAAM9G,EAAOqH,EAAMP,GAGbjI,GAFN8O,EAAOrc,KAAK0O,CAAI,EAEAA,EAAK5H,SACfwV,EAAOX,EAAcO,EAAY3G,GAAG4G,OACpCI,EAAYzB,KAAK0B,IAAIjP,EAAS+O,CAAI,EACtB,IAAdC,GACA7W,QAAQD,IAAI,iBAAiB,EAEjC2W,EAAUD,QAAU,EAChBI,EAAYhP,IACZmB,EAAK5H,QAAUyV,EACTE,EAAWhD,cAAAA,cAAA,GACV/K,CAAI,EAAA,GAAA,CACP5H,QAASyG,EAAUgP,EACnBpW,QAASuI,EAAKvI,QACd8U,OAAQ,CAAA,EACRC,OAAQ,CAAA,CAAI,CAAA,EAEhBpV,EAAMyP,GAAGC,EAAI+G,GAAaE,GAG1BJ,EAAOnZ,SAAWyY,IAClBU,EAAS,GACTD,EAAUD,OAAS,EACnBC,EAAUrW,KAAK/F,KAAKqc,CAAM,EACtBN,KACAK,EAAUD,OAASN,EAAMtG,GAAGhI,QAC5B8O,EAAOrc,KAAK6b,EAAMtG,GAAG7G,IAAI,EAGrC,CAOJ,IAJA,IACMvE,EAAW,GAEXuS,EAAcR,EAAY,GAAGnW,KAAK7C,OAC/BoT,EAAK,EAAGA,EAAKoG,EAAapG,CAAE,GACjC,IAAK,IAAIf,EAAI,EAAGA,EAAIzP,EAAM5C,OAAQqS,CAAC,GAAI,CACnC,IAAM8G,EAASH,EAAY3G,GAAGxP,KAAKuQ,IACf,EAAhB+F,EAAOnZ,QAAc,CAAC6Y,IACtB5R,EAASnK,KAAKqc,CAAM,EAEpBlS,EAASjH,OAAS4C,EAAM5C,QAAW,GAAuB,EAAlBiH,EAASjH,SACvCiH,EAASjH,OAAS,EAA5ByZ,EAER,CAEJ,OAAOxS,CACX,EAQA9L,KAAKue,oBAAsB,SAACC,EAAW1C,GACnC,IAAK,IAAIlX,EAAI,EAAGA,EAAI4Z,EAAU3Z,OAAQD,CAAC,GAEnC,IADA,IAAM6Z,EAAS3C,EAAShD,OAAO,UAAU,EAChCjR,EAAI,EAAGA,EAAI2W,EAAU5Z,GAAGC,OAAQgD,CAAC,GAAI,CAAA,IAMtC6W,EAUIC,EAfFC,EAAWJ,EAAU5Z,GAAGiD,GAC1B+W,EAAShC,UAIT8B,EAAM,OAAAG,EAAGD,EAASvQ,OAAK,KAAA,EAAdwQ,EAAgBvI,KAIzBoI,EAASA,EAAOhK,UAAU,CAAA,CAAI,EAC1BkK,EAAS/B,SACT6B,EAAO5a,UAAY,IAEnB6a,EAAKD,EAAOnU,MAAM6H,iBAAmBsM,EAAOnU,MAAMuU,WAElDH,EADyB,IAAzBC,EAAS9B,YACT6B,GAAO7C,EAASjF,UAAUC,QAAUgF,EAASjF,UAAUG,IAChD4H,EAAS9B,YAAc,GAAM,EACpC6B,GAAO7C,EAASjF,UAAUE,KAE1B4H,GAAO7C,EAASjF,UAAUG,IAE9B0H,EAAOnU,MAAM6H,gBAAkBuM,GAd/BD,EAAShf,SAASuD,cAAc,IAAI,EAgBxCyb,EAAOjW,QAAUmW,EAASnW,QAC1BiW,EAAO5W,QAAU8W,EAAS9W,QAC1BgU,EAASnC,mBAAmB+E,EAAQD,EAAOpe,EAAE,EACjD,CAER,EAgBAL,KAAKmc,mBAAqB,SACtBL,EACAC,GAKC,IAJDpQ,EAAc,EAAAvF,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,IAAAA,UAAA,GAEdyF,EAAW,EAAAzF,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAIR2Y,EAAkB,CACpB3B,UAAyB,WAAdrB,EACXsB,YAAa1R,EACb2R,YAAazR,GAAeF,EAAiB,EAAI,EACrD,EAGM+K,EAAciE,EAAKyB,0BAA0BN,CAAQ,EAGrDkD,EAAmBrE,EAAKuC,eAAexG,EAAaqI,CAAe,EAGzEpE,EAAK4D,oBAAoBS,EAAkBlD,CAAQ,CACvD,EASA9b,KAAKkc,aAAe,SAACJ,GAKjB,IAJA,IAAMpF,EAAcoF,EAAShC,eAAe,EACtCpS,EAAOgP,EAAY7R,OACnB8O,EAAU+C,EAAY6F,OAAO,SAACC,EAAKxN,GAAG,OAAKyN,KAAKD,IAAIA,EAAKxN,EAAInK,MAAM,CAAC,EAAE,CAAC,EAEpEqS,EAAI,EAAGA,EAAIxP,EAAMwP,GAAK,EAE3B,IADA,IAAM0C,EAAQkC,EAAShD,OAAO,GAAI,CAAA,EAAM5B,CAAC,EAAE7W,GAClC8W,EAAI,EAAGA,EAAIxD,EAASwD,GAAK,EAAG,CACjC,IAAM8H,EAAWnD,EAASrC,QAAQvC,EAAGC,EAAG,CAAA,CAAI,EAGxC8H,GAAyC,OAA7BA,EAAS9K,kBAErB8K,EAAS5I,mBAAmB,EAC5ByF,EAASnC,mBAAmBsF,EAAS3J,WAAW,EAAGsE,CAAK,EAEhE,CAER,EASA5Z,KAAK4a,iBAAmB,SAACsE,EAAKC,GAC3B,IAAIC,EAAU,UAMd,OALIF,GAAOC,EAAME,OAAO7U,MACvB4U,EAAU,SACAF,GAAOC,EAAMG,OAAO9U,QAC9B4U,EAAU,UAEJA,CACV,EA0CApf,KAAKuf,aAAe,SAACjJ,EAAIoE,EAAMoB,GAC3B,IAAMvB,EAAYI,EAAKvP,aAAakL,CAAE,EACtC,GAAKiE,GAGAD,EAAwBC,CAAS,EAAtC,CAKA,IAAM7T,EAAO6T,EAAU9O,eAGjB+T,EAAgB7E,EAAI,GAAA3X,OAAI0D,EAAI,OAAA,GAO5B6E,GALDmP,EAAAA,GAEMpE,EAAGmJ,sBAAsB,EAAEjV,MAGlBmQ,EAAKC,iBAAiBF,EAAMH,EAAUM,WAAW,GAErE,GAAI,CAAC2E,EACD,MAAM,IAAIxe,MAAK,2BAAAgC,OAA4B0D,EAAI,UAAA,CAAU,EAE7D,IAAMgF,EAAc6O,EAAU7O,YAAYhF,GAYpCgZ,GATDjF,EAA2BF,EAAWG,CAAI,EAI3C8E,EAAcxM,KAAK2H,EAAMrE,EAAI/K,EAAaG,EAAaoQ,CAAQ,GAH/DA,EAAStC,WAAW,EACpBmB,EAAKuB,aAAaJ,CAAQ,GAM9B/S,wBAAwBuN,CAAE,EACT,IAAIqJ,YAAY,gBAAiB,CAC9CnU,OAAQ,CACJD,YAAAA,EACAI,eAAgB4O,EAAU7O,YAAYhF,GAAMiF,cAChD,CACJ,CAAC,GACD2K,EAAGsJ,cAAcF,CAAQ,EAGrBpJ,GAAM/K,IACN+K,EAAG9T,QAAQqd,eAAiBtU,EAvChC,CAyCJ,EAwCAvL,KAAK8f,cAAgB,SAACpF,GAElBC,EAAKU,eAAe5Z,IAAI,SAACse,GACrB,IAAI/E,EAAYN,EACXA,IAEDM,EAAYD,EAAmBgF,EAAEzJ,EAAE,GAEvCqE,EAAK4E,aAAaQ,EAAEzJ,GAAI0E,EAAW+E,EAAEzE,WAAW,CACpD,CAAC,CACL,EAOAtb,KAAKggB,0BAA4B,SAAC1f,GAC9B,IAAMgL,EAAaqP,EAAKvP,aAAa9K,CAAY,EAC3C0a,EAAYD,EAAmBza,CAAY,EAEjD,OAAOqa,EAAKC,iBAAiBI,EAAW1P,EAAWuP,WAAW,CAClE,EAOA7a,KAAKigB,wCAA0C,SAAC3f,GAC5C,IAAM4f,EAAkBvF,EAAKvP,aAAa9K,CAAY,EAEtD,OACI4f,GACA5F,EAAwB4F,CAAe,GACvCzF,EAA2ByF,EAAiBnF,EAAmBza,CAAY,CAAC,CAEpF,EAKAN,KAAKmgB,oBAAsB,WAEvB9N,OAAO1S,iBAAiB,SAAU,WAC9Bgb,EAAKmF,cAAc,CACvB,CAAC,CACL,EAEI9f,KAAKmb,QAAQiF,cACbpgB,KAAKmgB,oBAAoB,EAS7BngB,KAAKqgB,sBAAwB,SAAC9f,GAC1B,IAAA+f,EAA0B3F,EAAKU,eAAe/D,OAAO,SAAAiJ,GAC3CC,EADgDD,EAAFjK,GAC3B/M,WAGnBkX,EADQ,IAAIC,OAAO,uBAAuB,EAC1BC,KAAKH,EAAchgB,aAAa,IAAI,CAAC,EAE3D,OAAOigB,GAAWA,EAAQ,IAAMG,OAAO/f,SAAS4f,EAAQ,GAAI,EAAE,IAAMlgB,CACxE,CAAC,EAED,OAFEuC,eAAAwd,EAAA,CAAA,EAPoB,EAU1B,EAQAtgB,KAAK6gB,qBAAuB,SAACC,EAAYrM,GAErCqM,EAAWte,QAAQgV,qBAAuBiE,KAAKsF,UAAUtM,CAAM,CACnE,EAEO,CACHqL,cAAe9f,KAAK8f,cACpBP,aAAcvf,KAAKuf,aACnBnU,aAAcpL,KAAKoL,aACnBwP,iBAAkB5a,KAAK4a,iBACvBoF,0BAA2BhgB,KAAKggB,0BAChCC,wCAAyCjgB,KAAKigB,wCAC9CI,sBAAuBrgB,KAAKqgB,sBAC5BQ,qBAAsB7gB,KAAK6gB,qBAC3B9F,mBAAAA,EACAxE,YAAAA,CACJ,CACJ,CAGJ,CAAC,ECvrCD,SAAyByK,EAAWjf,EAASnC,GAE5CmC,EAAQif,GAAaphB,EAAQ,CAE7B,EAAE,iBAAkBgC,MAAQC,OAAQ,WAyJpC,OAAO,IAlJP,WAAqB,IAAA9B,EAAAC,KACpBA,KAAKmb,QAAU,CAAE8F,YAAa,EAAG,EASjCjhB,KAAKkhB,iBAAmB,SAACC,EAAqBC,GAC7C,IAAMC,EAAaD,EAAe7X,WAC5B+X,EAAiBhgB,MAAMC,KAAK8f,EAAWzZ,QAAQ,EAC/C2Z,EAAaD,EAAe7b,QAAQ2b,CAAc,EAClDI,EAA6B,EAAjBD,EAAa,EAAQ,KAAOD,EAAeC,EAAa,GACpEE,EAAcF,EAAa,GAAKD,EAAezc,OAAS,KAAOyc,EAAeC,EAAa,GAEjGxhB,EAAK2hB,sBAAsB3hB,EAAKob,QAAQ8F,YAAaE,EAAoBQ,UAAU,EACnF5hB,EAAK6hB,gBAAgBR,CAAc,EAEnCD,EAAoBQ,WAAWhe,YAAYyd,CAAc,EAErDI,EACHA,EAAUhe,sBAAsB,WAAY2d,CAAmB,EACrDM,EACVA,EAAYje,sBAAsB,cAAe2d,CAAmB,EAEpEE,EAAW1d,YAAYwd,CAAmB,CAE5C,EAOAnhB,KAAK4hB,gBAAkB,SAACR,GACvB,IAAM3Z,EAAQ2Z,EAAengB,cAAc,OAAO,EAC1C4gB,EAAevP,iBAAiB7K,CAAK,EAArCoa,WACRpa,EAAM8C,MAAMsX,WAAaA,CAC1B,EAOA7hB,KAAKqB,KAAO,SAAC8Z,GACZpb,EAAKob,QAAOC,cAAAA,cAAA,GAAQrb,EAAKob,OAAO,EAAKA,CAAO,EACtC2G,EAAkBxgB,MAAMC,KAAK7B,SAAS8B,iBAAiB,2BAA2B,CAAC,EAE5D,EAAzBsgB,EAAgBjd,QACnBid,EAAgBrgB,IAAI1B,EAAKgiB,cAAc,CAEzC,EAQA/hB,KAAKgiB,sBAAwB,SAACZ,GACvB3Z,EAAQ2Z,EAAengB,cAAc,OAAO,EAClD,MAAOwG,CAAAA,CAAAA,IAAQ1H,EAAKob,QAAQ8G,SAASC,0BAA4Bza,EAAMjF,QAAQW,mBAChF,EAOAnD,KAAK+hB,eAAiB,SAACX,GAEtB,IAGM1f,EAKAygB,EAEAC,EAVDriB,EAAKiiB,sBAAsBZ,CAAc,KAGxC1f,EAAYhC,SAASuD,cAAc,KAAK,GACpCnC,UAAU+L,IAAI,4BAA4B,EAI9CsV,GAFA/hB,EAAYghB,EAAengB,cAAc,OAAO,GAE3BuB,QAAQ6X,2BAE7B+H,EAAehiB,EAAUoC,QAAQ2X,2BAGnCgI,GAAY,CAACC,IAChB1gB,EAAU6I,MAAM4X,SAAQ,GAAAnf,OAAMmf,EAAQ,IAAA,GAGvCzgB,EAAU2gB,aAAa,CAAE3b,KAAM,MAAO,CAAC,EAEvC3G,EAAKmhB,iBAAiBxf,EAAW0f,CAAc,EAChD,EAEAphB,KAAK0hB,sBAAwB,SAACY,EAAgBC,GAE7CxN,OAAOC,KAAKsN,CAAc,EAAE7gB,IAAI,SAAC+gB,GAChC,GAAIzN,OAAOG,UAAUhN,eAAe8K,KAAKsP,EAAgBE,CAAM,EAE9D,OAAQA,GACP,IAAK,SAEJzN,OAAOC,KAAKsN,EAAeE,EAAO,EAAE/gB,IAAI,SAACwR,GACpC8B,OAAOG,UAAUhN,eAAe8K,KAAKsP,EAAeE,GAASvP,CAAC,GACjElT,EAAK0iB,kBAAkBxP,EAAGqP,EAAeE,GAAQvP,GAAIsP,CAAI,CAE3D,CAAC,EACD,MACD,IAAK,OAEJD,EAAeE,GAAQ/gB,IAAI,SAACuY,GAC3Bja,EAAK2iB,eAAe1I,EAAOuI,CAAI,CAChC,CAAC,CAEH,CAEF,CAAC,CACF,EAQAviB,KAAK0iB,eAAiB,SAAC1I,EAAOuI,GACvBI,EAAajjB,SAASuB,cAAc+Y,CAAK,EAE3C2I,GACHJ,EAAK5e,YAAYgf,EAAWjO,UAAU,CAAA,CAAI,CAAC,CAE7C,EAEA1U,KAAKyiB,kBAAoB,SAACG,EAASC,EAAKN,GACvC,IAAMO,EAAcpjB,SAASuD,cAAc,MAAM,EACjD6f,EAAYta,aAAa,KAAMoa,CAAO,EACtCE,EAAYta,aAAa,OAAQqa,CAAG,EACpCC,EAAYta,aAAa,MAAO,YAAY,EAC5Csa,EAAYta,aAAa,QAAS,KAAK,EAEvC+Z,EAAK5e,YAAYmf,CAAW,CAC7B,CACD,CAGD,CAAC,ECjKD,SAAyBhhB,EAAKC,EAASnC,GACf,YAAL,aAAd,OAAOqC,QAAO,YAAAC,QAAPD,OAAO,IAAmC,aAAlB,OAAOD,OACzCA,OAAOC,QAAUrC,EAAQ,EAEzBmC,EAAQD,GAAOlC,EAAQ,CAGxB,EAAE,gBAAiBgC,MAAQC,OAAQ,WAOnC,SAASkhB,EAAkB5H,GAqGT,SAAX6H,EAAYC,GACjB,IAAMC,EAAWC,EAAQF,CAAQ,EACjC,GAAIC,EAAU,CAAA,IAAA,IAAAE,EAAAhd,UAAAvB,OAFgBwe,EAAI,IAAA/hB,MAAA,EAAA8hB,EAAAA,EAAA,EAAA,CAAA,EAAAE,EAAA,EAAAA,EAAAF,EAAAE,CAAA,GAAJD,EAAIC,EAAA,GAAAld,UAAAkd,GAGjCJ,EAASK,MAAMxjB,EAAMsjB,CAAI,CAC1B,CACD,CA1GmC,IAAAtjB,EAAAC,KAiB7BwjB,EAAepI,cAAAA,cAAA,GAXJ,CAChBqI,KAAM,GACNC,MAAO,EACPC,KAAM,GACNC,MAAO,GACP7H,UAAW,OACX8H,YAAa,IACbC,WAAY,SACb,CAGqC,EAAK3I,CAAO,EAO3CtY,EAAU,wBA4DVsgB,GAlDNnjB,KAAK+jB,WAAa,WACjB,OAAA3I,cAAA,GAAYoI,CAAe,CAC5B,EASAxjB,KAAKgkB,kBAAoB,WAAwB,IAAvB7F,EAAG,EAAA/X,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAKoW,EAAG,EAAApW,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC1C,OAAOqW,KAAKD,IAAI2B,EAAK3B,CAAG,EAAKC,KAAKwH,IAAIzH,EAAM2B,CAAG,EAAIqF,EAAgBG,KAAQH,EAAgBE,KAC5F,EASA1jB,KAAKkkB,4BAA8B,WAAoB,IAEhDC,EAAQ,CAAC,IAAK,KACdC,EAHmC,EAAAhe,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,IAAAA,UAAA,GAGV,EAAI,EAEnC,MAJc,CAAC,OAAQ,SAIVie,SAASb,EAAgBzH,SAAS,EAC5CoI,GAAO,EAAIC,GAAiB,GAC5BD,GAAO,EAAIC,GAAiB,EAChC,EASApkB,KAAKskB,2BAA6B,WAEjC,OAFwC,EAAAle,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,IAAAA,UAAA,GAEvB,CAAC,EAAI,IADG,CAAC,OAAQ,MACWie,SAAStkB,EAAKgkB,WAAW,EAAEhI,SAAS,EAAI,EAAI,CAAC,EAC3F,EAQgB,SAACja,GAChB,GAAIiT,OAAOG,UAAUhN,eAAe8K,KAAKwQ,EAAgBI,MAAO9hB,CAAG,EAAG,CAC/DohB,EAAWM,EAAgBI,MAAM9hB,GACvC,GAAwB,YAApB,OAAOohB,EACV,OAAOA,CAET,CAEA,OAAO,IACR,GA4BAljB,KAAKukB,iBAAmB,SAACC,GAExB,OADuBA,EAAfjb,WACUtI,cAAa,IAAA+B,OAjGL,+BAiG4B,CAAE,CACzD,EAOAhD,KAAKykB,oBAAsB,SAACD,GAC3B,IAESjb,EAFHmb,EAAgB3kB,EAAKwkB,iBAAiBC,CAAU,EAClDE,KACKnb,EAAemb,EAAfnb,YACGI,YAAY+a,CAAa,EACpCnb,EAAWzI,UAAUgM,OA7Ga,yCA6GqB,EAEzD,EAQA9M,KAAK2kB,cAAgB,SAACrf,EAASsf,GAC9B,IAAIC,EAAqBD,EAAY3jB,cAAa,aAAA+B,OAAcH,EAAO,IAAA,CAAI,EAUrEiiB,GARDD,KACJA,EAAqBD,EAAY3hB,cAAc,OAAO,GACnC5C,GAAKwC,EACxBgiB,EAAmB3hB,KAAO,WAE1B0hB,EAAYxiB,KAAKuB,YAAYkhB,CAAkB,GAG7BnlB,SAASqE,eAAeuB,CAAO,GAClDuf,EAAmB/gB,UAAY,GAC/B+gB,EAAmBlhB,YAAYmhB,CAAU,CAC1C,EAOA9kB,KAAK+kB,gBAAkB,SAACP,GACvBxB,EAAS,kBAAmBwB,CAAU,CACvC,EAOAxkB,KAAKglB,QAAU,SAACR,GACfxB,EAAS,UAAWwB,CAAU,CAC/B,EAOAxkB,KAAKilB,eAAiB,SAACT,GACtBxB,EAAS,iBAAkBwB,CAAU,EA1ErC,OAAOzkB,CA4ER,CACD,CAQA,SAASmlB,EAAyB/J,GACjCnb,KAAKmlB,aAAe,SAACC,GAAqC,IAAtBC,EAAY,EAAAjf,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAClD,OAAI+U,EAAQiK,GACJ,IAAIrC,EAAiB3H,cAAAA,cAAA,GAAMD,EAAQiK,EAAc,EAAKC,CAAY,CAAE,EAGrE,IAAItC,EAAkB,EAAE,CAChC,CACD,CAOA,IAAMuC,EAAiB,CAEtBC,KAAM,CACL3B,MAAO,CACNoB,QAAO,SAACQ,GACPxlB,KAAKykB,oBAAoBe,CAAY,CACtC,CACD,CACD,EACAC,QAAS,CACR7B,MAAO,CACNmB,gBAAe,SAACS,GACfA,EAAajc,WAAWgB,MAAMmb,SAAW,SAEzCF,EAAajb,MAAMob,UAAS,YAAA3iB,OAAehD,KAAKkkB,4BAA4B,EAAC,GAAA,EAAAlhB,OACxC,IAApChD,KAAKskB,2BAA2B,EAAO,IAAA,CAEzC,EACAU,QAAO,SAACQ,GACPxlB,KAAKykB,oBAAoBe,CAAY,EACrCA,EAAajb,MAAMqb,WAAU,aAAA5iB,OAAgBhD,KAAKgkB,kBAAkB,EAAC,YAAA,EACrEwB,EAAajb,MAAMob,UAAS,YAAA3iB,OAAehD,KAAKkkB,4BAA4B,EAAC,KAAA,CAC9E,CACD,CACD,EACA2B,UAAW,CACVjC,MAAO,CACNmB,gBAAe,SAACS,GACfA,EAAajb,MAAMob,UAAY,YAChC,EACAX,QAAO,SAACQ,GACPxlB,KAAKykB,oBAAoBe,CAAY,EACrCA,EAAajb,MAAMqb,WAAU,aAAA5iB,OAAgBhD,KAAKgkB,kBAAkB,EAAC,yCAAA,EACrEwB,EAAajb,MAAMob,UAAY,UAChC,CACD,CACD,EACAG,MAAO,CACNlC,MAAO,CACNmB,gBAAe,SAACS,GACf,IAAMO,EAAermB,SAASuD,cAAc,KAAK,EAM3C+iB,GALND,EAAajlB,UAAU+L,IAAI,oBAAoB,EAE/C2Y,EAAajc,WAAWzI,UAAU+L,IAAI,yCAAyC,EAC/E2Y,EAAahiB,sBAAsB,WAAYuiB,CAAY,EAE3C,uKAAA/iB,OACfhD,KAAK+jB,WAAW,EAAED,WAAU,gDAAA,EAAA9gB,OACoBhD,KAAKgkB,kBAAkB,EAAC,uBAAA,GACzEhkB,KAAK2kB,cAAcqB,EAAYR,EAAaS,aAAa,CAC1D,EACAjB,QAAO,SAACQ,GACPxlB,KAAKykB,oBAAoBe,CAAY,EACrC,IAAMO,EAAeP,EAAajc,WAAWtI,cAAc,qBAAqB,EAC5E8kB,IACHP,EAAajc,WAAWzI,UAAU+L,IAAI,yCAAyC,EAE/EkZ,EAAapmB,iBAAiB,eAAgB,SAAC0L,GACtB,eAApBA,EAAE+Z,gBACLI,EAAajc,WAAWzI,UAAUgM,OAAO,yCAAyC,EAClFiZ,EAAajZ,OAAO,EAEtB,CAAC,EAEDiZ,EAAajlB,UAAU+L,IAAI,sBAAsB,EAEnD,CACD,CACD,EACAqZ,KAAM,CACLtC,MAAO,CACNmB,gBAAe,SAACS,GAAc,IACvBW,EAAgBX,EAAajc,WAY7B6c,GAXND,EAAcrlB,UAAU+L,IAAI,+BAA+B,EAE3D,OAAAwZ,EAAAF,EAAc5c,aAAd8c,EAA0BvlB,UAAU+L,IAAI,iCAAiC,EAEzE2Y,EAAa1kB,UAAU+L,IAAI,2BAA4B,gCAAgC,EAEvF7M,KAAKukB,iBAAiBiB,CAAY,EAAE1kB,UAAU+L,IAC7C,iCACA,2BACD,EAE2B7M,KAAKkkB,4BAA4B,CAAA,CAAI,GAC1DoC,EAAc,GAAAtjB,OAA8C,IAAxChD,KAAKskB,2BAA2B,CAAA,CAAI,EAAO,KAAA,EAE/DlgB,EAAM,iDAAApB,OACXhD,KAAK+jB,WAAW,EAAEF,YAAW,2FAAA,EAAA7gB,OAC8DhD,KAAKgkB,kBAAkB,EAAC,6FAAA,EAAAhhB,OAA8FojB,EAAkB,GAAA,EAAApjB,OAAIsjB,EAAc,2JAAA,EAAAtjB,OAA4JojB,EAAkB,GAAA,EAAApjB,OAAIsjB,EAAc,kEAAA,EACtbtmB,KAAK2kB,cAAcvgB,EAAQohB,EAAaS,aAAa,CACtD,EACAjB,QAAO,SAACQ,GAAc,IAAA/O,EAAAzW,KACfmmB,EAAgBX,EAAajc,WACnC4c,EAAcxmB,iBAAiB,gBAAiB,SAAC0L,GACzB,cAAnBA,EAAEkb,cACL9P,EAAKgO,oBAAoBe,CAAY,EAEtCW,EAAcrlB,UAAUgM,OAAO,gCAAiC,qBAAqB,EAGrFqZ,EAAc5c,WAAWzI,UAAUgM,OAAO,iCAAiC,EAE3E0Y,EAAa1kB,UAAUgM,OAAO,2BAA4B,gCAAgC,CAC3F,CAAC,EAEDqZ,EAAc3jB,QAAQgkB,aAAe,MACtC,CACD,CACD,CAED,EA8RA,OAAO,IAtRP,WAsK8B,SAAvBC,EAAwBC,EAAaC,GAA6D,IAZ7EC,EAY6BC,EAAgB,EAAAzgB,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,IAAAA,UAAA,GAAU0gB,EAAS,EAAA1gB,UAAAvB,QAAAwB,KAAAA,IAAAD,UAAA,IAAAA,UAAA,GAE1FsgB,EACEpP,OAAO,SAACrL,GACR,MAA8C,UAAvCA,EAAQzJ,QAAQukB,kBACxB,CAAC,EAEAtlB,IAAI,SAACulB,GAjGiB,IAACxC,EAUlByC,EATDvC,EAsDgCF,EAAYmC,EA6C5CE,IApGmBrC,EAqGLwC,GApGdtC,EAAgBhlB,SAASuD,cAAc,KAAK,GACpCnC,UAAU+L,IAAIqa,CAAkB,EAG9CxC,EAAcna,MAAM6H,gBAAkB+I,EAAQ/I,gBAE1C+I,EAAQgM,UACXzC,EAAc5gB,UAAS,oFAAAd,OAAuFmY,EAAQgM,QAAO,QAAA,EAEvHF,EAAUvC,EAAczjB,cAAc,KAAK,GAC3CmmB,EAAc1C,EAAczjB,cAAc,qCAAqC,GAGzEsJ,MAAMC,MAAK,GAAAxH,OAAMmY,EAAQkM,SAAQ,IAAA,EAC7CD,EAAY7c,MAAME,OAAM,GAAAzH,OAAMmY,EAAQkM,SAAQ,IAAA,EAG9CD,EAAY5kB,QAAQ8kB,0BAA4BnM,EAAQoM,cAEpDN,KAEHA,EAAQ1c,MAAMid,KAAOrM,EAAQsM,WAK/BjD,EAAWhhB,sBAAsB,WAAYkhB,CAAa,EAE1DF,EAAWjb,WAAWzI,UAAU+L,IAAI6a,CAA2B,EAE/DC,EAAU5C,gBAAgBP,CAAU,IAyE7BrJ,CAAAA,EAAQyM,WAAad,KAjDUtC,EAkDLwC,EAlDiBL,EAkDZA,EAjDlCxL,EAAQyM,WAAaC,EAAiBrD,EAAYmC,CAAW,KAQhEnC,EAAWhiB,QAAQukB,mBAAqB,OAExCvC,EAAW7kB,iBAAiB,OAAQwb,EAAQ2M,MATtB,WACrBC,WAAW,WACVC,EAAyB,CAAE3b,OAAQmY,CAAW,CAAC,CAChD,EAAmB,IAAhBrJ,EAAQ2M,KAAY,CACxB,EAKoEE,CAAwB,EAG5FxD,EAAWyD,IAAMzD,EAAWhiB,QAAQ0lB,mBAsCpC,CAAC,EA7BwBtB,EA+BRvU,OAAO8V,QA9BzBC,EAAiBC,cAAgBzB,CA+BlC,CAO+B,SAAzB0B,IACL,OAAOjW,OAAOkW,WACf,CAmBiC,SAA3BC,IACL,IAAMC,EAASnnB,MAAMC,KAAK7B,SAAS8B,iBAAiB,qBAAqB,CAAC,EAGpEknB,EAAepnB,MAAMC,KAAK7B,SAAS8B,iBAAiB,6BAA6B,CAAC,EAAE+a,OACzF,SAACoM,EAAOxH,GACD1Z,EAAQ0Z,EAAoBQ,WAAW1gB,cAAc,qBAAqB,EAIhF,OAHIwG,GACHkhB,EAAMhnB,KAAK8F,CAAK,EAEVkhB,CACR,EACA,EACD,EAEMhiB,EAAS,GAAA3D,OAAOylB,EAAMvf,mBAAKwf,CAAY,CAAA,EAC7CE,EAAUjnB,KAAI4hB,MAAdqF,EAAS1f,mBAA2BvC,EA1BnB4V,OAAO,SAACoM,EAAOroB,GACzBuoB,EAASvnB,MAAMC,KAAKjB,EAAakB,iBAAiB,qBAAqB,CAAC,EAE9E,OADAmnB,EAAMhnB,KAAI4hB,MAAVoF,EAAcE,CAAM,EACbF,CACR,EAAG,EAAE,CAsByC,CAAA,EAG9ClC,EAAqBmC,EAAWN,EAAuB,EAAG,CAAA,CAAI,EAGzDnN,EAAQyM,WAEZvV,OAAO1S,iBACN,SACA,WACC8mB,EAAqBmC,EAAWN,EAAuB,CAAC,CACzD,EACA,CAAEQ,QAAS,CAAA,CAAK,CACjB,CAEF,CAhPA,IAAMC,EAAiB,CAEtBnB,UAAW,CAAA,CACZ,EAOIzM,EAAU,GAORiN,EAAmB,CACxBC,cAAe,CAChB,EAOMO,EAAY,GAEZ1B,EAAqB,gCACrBQ,EAA8B,0CAE9BsB,EAAmB,IAAI9D,EAAyBI,CAAc,EAWhEqC,EAAY,KAUVE,EAAmB,SAACrD,EAAYmC,GAErC,IAAAsC,EAAgCzE,EAAWjb,WAAWkW,sBAAsB,EAApEyJ,EAAGD,EAAHC,IAAKze,EAAMwe,EAANxe,OAAQ0e,EAAMF,EAANE,OACbC,EAAyBjO,EAAzBiO,qBAKFC,EArBoD,GAAnDhX,OAAO8V,QAAUC,EAAiBC,cAkBda,EAAMze,GAAU2e,EAAuB,KACpCD,EAAS1e,GAAU2e,EAAuB,KAIxE,OAA6B,GAAtBC,GAA2BA,GAAsB1C,CACzD,EA8CMqB,EAA2B,SAAC3c,GAC3Bma,EAAena,EAAEgB,OAEvBsb,EAAU3C,QAAQQ,CAAY,EAE9BA,EAAahU,oBAAoB,OAAQwW,CAAwB,EAEjEL,EAAU1C,eAAeO,CAAY,CACtC,EAgIAxlB,KAAKspB,gBAAkB,WACtB7C,EAAqBmC,EAAW,KAAM,CAAA,EAAO,CAAA,CAAI,CAClD,EAOA5oB,KAAKqB,KAAO,SAACkoB,GACRA,GAAsC,WAAvBrnB,QAAOqnB,CAAW,IACpCpO,EAAOC,cAAAA,cAAA,GAAQ2N,CAAc,EAAKQ,CAAW,GAEjCC,UACX7B,EAAYqB,EAAiB7D,aAAahK,EAAQsO,mBAAkBrO,cAAA,CACnEsI,MAAOvI,EAAQuO,wBACf3N,UAAWZ,EAAQwO,4BACnB9F,YAAa1I,EAAQyO,6BAA6B,EAC/CzO,CAAO,CACV,EACDqN,EAAyB,EAG5B,CACD,CAID,CAAC,EC/mBD,SAAyB1mB,EAAKC,EAASnC,GACtCmC,EAAQD,GAAOlC,EAAQ,CAEvB,EAAE,qBAAsBgC,MAAQC,OAAQ,WA6CxC,OAtCA,SAA4BgoB,GAQG,SAAxBC,EAAyBxpB,GAC9B,IAAMypB,EAAgBzpB,EAAaiJ,WAAWA,WACxCpJ,EAAkBG,EAAaiJ,WAG/B6Q,GADN2P,EAAcvnB,QAAQ2X,2BAA6B,OAC5B4P,EAAcxf,MAAM4X,UAC3C4H,EAAcxf,MAAM4X,SAAW,GAE/BhiB,EAAgBoK,MAAMC,MAAQ4P,CAC/B,CAhBA,IAAQ4P,EAA8BH,EAA9BG,0BAqBRhqB,KAAKqB,KAAO,WACX,IAAM4oB,EAAgB3oB,MAAMC,KAC3B7B,SAAS8B,iBAAiB,gDAAgD,CAC3E,EAIIwoB,GACHC,EAAcxoB,IAAIqoB,CAAqB,CAEzC,CACD,CAMD,CAAC,ECjDDpqB,SAASC,iBAAiB,mBAAoB,WAC1C,IAAMmiB,EAAkBpiB,SAASwqB,uBAAuB,sBAAsB,EAkD9E,SAASC,IACL,IAAK,IAAIvlB,EAAI,EAAGA,EAAIkd,EAAgBjd,OAAQD,CAAC,GAAI,CAC7C,IAAMwc,EAAiBU,EAAgBld,GAGnCwlB,EAAsB,CAAA,EAEtBC,EAAejJ,EAAe8I,uBAAuB,oBAAoB,EACzEI,EAAuBlJ,EAAe8I,uBAAuB,6BAA6B,EAE9F,GAA0B,EAAtBG,EAAaxlB,QAA4C,EAA9BylB,EAAqBzlB,OAAY,CAC5DwlB,EAAeA,EAAa,GAC5BC,EAAuBA,EAAqB,GAuB5C,GAtBAD,EAAa9f,MAAMggB,QAAU,QAEzBF,EAAa7nB,QAAQgoB,qBACbA,EAAuBH,EAAa7nB,QAApCgoB,mBAEwBpJ,EAAeqJ,YACjBJ,EAAaI,YACvCJ,EAAa9f,MAAK,MAAS,KAE3B8f,EAAa9f,MAAK,MADW,UAAtBigB,EACoB,KAEAA,EAI3BpJ,EAAe7W,MAAK,MADE,UAAtBigB,EAC6B,KAEAA,GAKM,GAAvCH,EAAa7nB,QAAQkoB,gBAAiE,GAA1CL,EAAa7nB,QAAQmoB,kBAAwB,CAEzF,IAAMC,EAAsBxJ,EAAeqJ,YACrCI,EAAoBR,EAAaI,YAGnCK,EAAY,KAAA,EACVC,EAAmBV,EAAa3iB,KACR,EAA1BqjB,EAAiBlmB,SAIjBimB,EAHiBC,EAAiB,GACVvpB,iBAAiB,IAAI,EAEvBqD,QAV1B,IAkBImmB,EAAqB,CAAA,EACrBC,EAAsB,KAAA,EAC1B,IAAK,CANyBZ,EAAavpB,UAAUC,SAAS,yBAAyB,GAMzC,EAAf+pB,IAAoC,EAAfA,EAGhD,GAAIF,EAAsBC,GAUtB,GATAzJ,EAAe7W,MAAMmb,SAAW,QAG5B4E,GAAwB,CAACA,EAAqBxpB,UAAUC,SAAS,kBAAkB,IACnFupB,EAAqBxpB,UAAU+L,IAAI,kBAAkB,EACrDme,EAAqB,CAAA,GAEzBX,EAAavpB,UAAU+L,IAAI,yBAAyB,EAEhDwd,EAAa3iB,MAAQojB,EAAc,CAEnC,IAGII,EAA0BzO,KAAK0O,MAAMP,GAHzBC,EAAoBC,EAGkC,EA+BtE,GA9BII,EAA0B,IAAGA,EAA0B,GAMqB,EAA5E9J,EAAe8I,uBAAuB,2BAA2B,EAAErlB,UACnEomB,EACI7J,EAAe8I,uBAAuB,2BAA2B,EAAE,IAChDppB,UAAUgM,OAAO,kBAAkB,GACpDse,EACFH,EAAuBzoB,QAAQ0oB,0BAGDA,GAC9Bb,EAAavpB,UAAUC,SAAS,yBAAyB,GAIzDqqB,GAA8BF,GAC9B,CAACb,EAAavpB,UAAUC,SAAS,yBAAyB,IACnC,IAAtB6pB,GAA8D,GAAjCK,EAAuB3W,QAErD8V,EAAsB,CAAA,EAEtBa,EAAuB1hB,WAAWI,YAAYshB,CAAsB,GAKxEb,EAAqB,CAErB,IAAMte,EAAWpM,SAASuD,cAAc,OAAO,EACzCooB,EAAgB3rB,SAASuD,cAAc,OAAO,EAK9CqoB,GAJNxf,EAASnI,YAAY0nB,CAAa,EAGlCvf,EAAShL,UAAU+L,IAAI,2BAA2B,EACnCwd,EAAakB,UAAU7qB,MAAM,8BAA8B,GAMpE8qB,GALFF,GAAUhqB,MAAM4X,QAAQoS,CAAM,GAC9Bxf,EAAShL,UAAU+L,IAAIye,EAAO,EAAE,EAIlBjB,EAAa3iB,KAAK7C,QAGhC4mB,EAAgC,KAAA,EAKhCC,EAAgB,CAAA,EAGpB,GAAIrB,EAAavpB,UAAUC,SAAS,yBAAyB,EAAG,CAE5D,IAAM4qB,EAAyBH,EAAY,EAGvCI,EAAgC,KAAA,EAKpC,GAAgBV,EAAZM,EAIA,IAAK,IAAI5mB,EAAI,EAAGA,EAAI+mB,EAAwB/mB,CAAC,GAAI,CAQ7C,GAAwC,IAHxC6mB,EACIE,GAHAC,GAFJA,EAAmCV,EAA0B,EAAItmB,IACzB,EACD,EAGVgnB,IAEc,CACvCF,EAAgB,CAAA,EAChB,KACJ,CAAO,GACgC,EAAnCE,GACAA,GAAoC,GACpCA,EACI,EAAIH,EACJ,GACJA,EAAmCG,EACrC,CACEF,EAAgB,CAAA,EAChB,KACJ,CAAO,GACgC,EAAnCE,GACAA,GAAoC,IACpCA,EACI,IAAMH,EACN,GACJA,EAAmCG,EACrC,CACEF,EAAgB,CAAA,EAChB,KACJ,CAAO,GACgC,GAAnCE,GACAA,GAAoC,IACpCA,EACI,IAAMH,EACN,GACJA,EAAmCG,EACrC,CACEF,EAAgB,CAAA,EAChB,KACJ,CAGJ,MAEAE,EAAmCD,EAEnCD,EAAgB,EADhBD,EAAmC,GAKvC,GAAIC,EAcA,IAbA,IAAIG,EAAS,KAAA,EAETA,EADmC,EAAnCD,EAEId,EACArO,KAAKqP,KACDH,EAAyBC,CAC7B,EAEQd,EAIZiB,GADsBtP,KAAK0O,OAAOU,EAAY,GAAKf,CAAY,EACvD,KAAA,GACHjjB,EAAI,EAAGA,EAAIgkB,EAAWhkB,CAAC,GAAI,CAChC,IAAMmkB,EAAgBvP,KAAK0O,MAAMtjB,EAAIijB,CAAY,EAC3C7b,EAAKvP,SAASuD,cAAc,IAAI,EAChCgpB,EACF5B,EAAa3iB,KAAK,GAAGE,SACjBC,EAAImkB,EAAgBlB,GACtBpW,UAAU,CAAA,CAAI,EAChB1M,EAAE,KAAA,EACAkkB,EAAiB7Z,OAAOC,iBAAiB+X,EAAa3iB,KAAK,EAAE,EAC9DukB,EAAa1hB,MAAM6H,kBACpB6Z,EAAa1hB,MAAM6H,gBAAkB8Z,EAAe9Z,iBAExD6Z,EAAa1hB,MAAMC,MAAQ,KAC3ByhB,EAAa1hB,MAAME,OAAS,KAE5BwhB,EAAanc,gBAAgB,6BAA6B,GAC1Dic,EAAW1Z,OAAOC,iBAAiB+X,EAAappB,cAAc,IAAI,CAAC,GACtDkrB,eACTF,EAAa1hB,MAAM6hB,YAAcL,EAASI,eAE1CF,EAAa1hB,MAAM6hB,YAAcL,EAASM,kBAE1B,EAAhBL,GAAqBnkB,EAAIijB,GAAgB,IACzCmB,EAAa1hB,MAAM+hB,eAAiB,OAExCrd,EAAGtL,YAAYsoB,CAAY,EAE3B,IACI,IASUM,EATN7iB,EAAIkiB,EAAmCI,EAAgB,EAC3DtiB,EAAIkiB,GAAoCI,EAAgB,GAAK,EAC7DtiB,CAAC,GAEGA,EAAI2gB,EAAa3iB,KAAK7C,QACtBmD,EACIqiB,EAAa3iB,KAAKgC,GAAG9B,SACjBC,EAAImkB,EAAgBlB,GACtBpW,UAAU,CAAA,CAAI,EACd6X,EAAala,OAAOC,iBACtB+X,EAAa3iB,KAAKgC,EACtB,EACK1B,EAAGuC,MAAM6H,kBACVpK,EAAGuC,MAAM6H,gBAAkBma,EAAWna,iBAG1CpK,EAAGuC,MAAMC,MAAQ,KACjBxC,EAAGuC,MAAME,OAAS,KAElBzC,EAAG8H,gBAAgB,6BAA6B,KAEhD9H,EAAKtI,SAASuD,cAAc,IAAI,GAC7BsH,MAAMiiB,YAAc,MAEvBxkB,EAAGuC,MAAMuU,WAAa,SAG1BiN,EAAW1Z,OAAOC,iBACd+X,EAAappB,cAAc,IAAI,CACnC,GACakrB,eACTnkB,EAAGuC,MAAM6hB,YAAcL,EAASI,eAEhCnkB,EAAGuC,MAAM6hB,YAAcL,EAASM,kBAGhB,EAAhBL,GAAqBnkB,EAAIijB,GAAgB,IACzC9iB,EAAGuC,MAAM+hB,eAAiB,OAG9Brd,EAAGtL,YAAYqE,CAAE,EAGrBqjB,EAAc1nB,YAAYsL,CAAE,CAChC,CAER,KAAO,CACH,IAAIwd,EAAe,KAAA,EACnB,GAA0B,IAAtB7B,EACA,IAAK,IAAIhmB,EAAI,EAAGA,EAAIkmB,EAAclmB,CAAC,GAAI,CAKnC,GAAwC,IAFxC6mB,EAAmCX,GADT2B,EAAH,IADvBA,EAAkBvB,EAA0BtmB,GACA,EACM6nB,IAEP,CACvCf,EAAgB,CAAA,EAChB,KACJ,CAAO,GACe,EAAlBe,GACAA,GAAmB,GACnBA,EAAkB,EAAIhB,GAAoC,GAC1DA,EAAmCgB,EACrC,CACEf,EAAgB,CAAA,EAChB,KACJ,CAAO,GACe,EAAlBe,GACAA,GAAmB,IACnBA,EAAkB,IAAMhB,GAAoC,GAC5DA,EAAmCgB,EACrC,CACEf,EAAgB,CAAA,EAChB,KACJ,CAAO,GACe,GAAlBe,GACAA,GAAmB,IACnBA,EAAkB,IAAMhB,GAAoC,GAC5DA,EAAmCgB,EACrC,CACEf,EAAgB,CAAA,EAChB,KACJ,CAGJ,MAIAA,EAAgB,EADhBD,EAAmC,GAEnC3f,EAASwI,OAHTmY,EAAkB,EAMtB,IAAMC,EAAoBjQ,KAAKqP,KAAKhB,EAAe2B,CAAe,EAE5DE,EAAeD,EAAoBlB,EAEzC,GAAIE,EACA,IAAK,IAAI9mB,EAAI,EAAGA,EAAI+nB,EAAc/nB,CAAC,GAAI,CACnC,IAAMonB,EAAgBvP,KAAK0O,MAAMvmB,EAAI4mB,CAAS,EACxCvc,EAAKvP,SAASuD,cAAc,IAAI,EAClC2pB,EAAI,KAAA,EACJC,EAAM,KAAA,EAMND,EAJAZ,GAAiBU,EAAoB,GACD,GAApCjB,GAEAoB,EAASb,EAAgBS,EAClBA,GAAmB,EAAIT,KAE9Ba,EAAS/B,EAAeW,EACjBX,GAEL9b,EAAMqb,EAAa3iB,KAAK9C,EAAIonB,EAAgBR,GAClDvc,EAAGnO,UAAYkO,EAAIlO,UACnBmO,EAAG1E,MAAM6H,gBAAkBpD,EAAIzE,MAAM6H,gBAErC,IAAK,IAAIvK,EAAIglB,EAAQhlB,EAAI+kB,EAAM/kB,CAAC,GAAI,CAChC,IAEUilB,EAFJC,EAAQ/d,EAAIpH,SAASC,GAAG6M,UAAU,CAAA,CAAI,EACvCqY,EAAMxiB,MAAM6H,kBACP0a,EAAYza,OAAOC,iBAAiBtD,CAAG,EAC7C+d,EAAMxiB,MAAM6H,gBAAkB0a,EAAU1a,iBAE5C2a,EAAMxiB,MAAMC,MAAQ,KACpBuiB,EAAMxiB,MAAME,OAAS,KAErBsiB,EAAMjd,gBAAgB,6BAA6B,EACnDb,EAAGtL,YAAYopB,CAAK,CACxB,CAEA1B,EAAc1nB,YAAYsL,CAAE,CAChC,CAER,CAEAnD,EAAStJ,QAAQ0oB,wBAA0BA,EAC3C,IAAMrC,EAAS/c,EAAStK,iBAAiB,UAAU,EACnD,GAAoB,EAAhBqnB,EAAOhkB,OACP,IAAK,IAAID,EAAI,EAAGA,EAAIikB,EAAOhkB,OAAQD,CAAC,GAChCikB,EAAOjkB,GAAGkL,gBAAgB,QAAQ,EAI1CsR,EAAezd,YADfsnB,EAAyBnf,CACU,EACnCkf,EAAqB,CAAA,CACzB,CACJ,CAAA,MAEAV,GACAA,EAAqBxpB,UAAUC,SAAS,kBAAkB,IAE1DupB,EAAqBxpB,UAAUgM,OAAO,kBAAkB,EACxDke,EAAqB,CAAA,EACrBX,EAAavpB,UAAUgM,OAAO,yBAAyB,GACvDme,EAAyB7J,EAAengB,cAAc,4BAA4B,IAE9EmgB,EACK8I,uBAAuB,2BAA2B,EAAE,GACpDppB,UAAU+L,IAAI,kBAAkB,EAEzCuU,EAAe7W,MAAMmb,SAAW,aAGpC2E,EAAa9f,MAAMyiB,SAAW,OAGlCjkB,wBAAwBshB,CAAY,EAEhCW,IACAjiB,wBAAwBkiB,CAAsB,EACxCvL,EAAW,IAAIC,YAAY,gBAAiB,CAAEnU,OAAQ,CAAA,EAAMyhB,QAAS,CAAA,CAAK,CAAC,EACjF5C,EAAazK,cAAcF,CAAQ,EAE3C,CACJ,CACJ,CACJ,CAEA,SAASwN,IAEL,SAAAC,IAEI,IAAMC,EAAqBC,EAAoBzoB,GAI3C6C,GAFJ2lB,EAAmBtsB,UAAU+L,IAAG,wBAAA7J,OAAyB4B,CAAC,CAAE,EAEhDwoB,EAAmBlD,uBAAuB,oBAAoB,GAC1E,GAAmB,EAAfziB,EAAM5C,OAAY,CAKd4C,EAJJA,EAAQA,EAAM,IAIJjF,QAAQ6X,4BACb5S,EAAMjF,QAAQ8qB,iCACdF,EAAmB5qB,QAAQ2X,6BAE5BiT,EAAmB7iB,MAAM4X,SAAQ,GAAAnf,OAAMyE,EAAMjF,QAAQ6X,2BAA0B,IAAA,GAEnF5S,EAAM3G,UAAUgM,OAAO,iCAAiC,EAExDrF,EAAM8lB,wBAA0B,CAAA,EAEhC,IADA,IAAMtkB,EAAMxB,EAAMjG,iBAAiB,IAAI,EAC9BqG,EAAI,EAAGA,EAAIoB,EAAIpE,OAAQgD,CAAC,GACR,EAAjBoB,EAAIpB,GAAGY,UACPhB,EAAM+lB,yBAA2B,CAAA,GAsBjB,SAAlBC,IAEF,IAoDYC,EATEC,EA3CRC,EAA0BR,EAAmB3C,YAC/CoD,EAA0BD,EACtBE,GACArmB,EAAM8C,MAAMyiB,SAAW,OAMnBvlB,EAAM+lB,0BACN/lB,EAAM8C,MAAMC,MAAQ,OAGpBujB,GADAA,GADgCH,EAA0BI,GACbF,GACPG,EAAkBC,EACxDC,EAAqB,CAAA,GAErB1mB,EAAM8C,MAAMC,MAAQ,SAQxB/C,EAAM8C,MAAMC,MAAQ,OACpB/C,EAAM8C,MAAMyiB,SAAW,KACvBvlB,EAAM8C,MAAM4X,SAAQ,GAAAnf,OAAM6qB,EAAuB,IAAA,IASrDpmB,EAAM8C,MAAM4X,SAAW,KACvB1a,EAAM8C,MAAMyiB,SAAQ,GAAAhqB,OAAMyE,EAAMjF,QAAQqrB,wBAAuB,IAAA,EAE/DpmB,EAAM8C,MAAMC,MAAQ,OACpBujB,EAAmBtmB,EAAMjF,QAAQ4rB,iBAAkD,MACnFD,EAAqB,CAAA,GAGXR,EAAiBlS,KAAKC,MAAM/Y,KAAK8E,EAAMjF,QAAQgZ,wBAAwB,GAAK,OAAO,IAGjEmS,EAAenT,oBAMnCkT,EAAS,WAFPW,EAA+C,WAAjCV,EAAezS,cAA6B0S,EAA0BluB,SAASub,KAAKtO,cAGrFghB,EAAe9S,YAAYwE,OAAO7U,MACjDkjB,EAAS,SACFW,GAAeV,EAAe9S,YAAYyE,OAAO9U,QACxDkjB,EAAS,UAGMC,EAAejiB,YAAY4iB,KAAKxT,SAAS4S,IAC/B,YAAXA,IAGvCjmB,EAAM8C,MAAMyiB,SAAW,KACFvlB,EAAM8C,MAAMC,MAAS,SAGjC,CAxFA,IAcIujB,EAoFMQ,EAaAC,EAsBIC,EArIRb,EAA0BR,EAAmB3C,YAE7CziB,EAAKP,EAAMxG,cAAc,IAAI,EAC7BytB,EAAarc,OAAOC,iBAAiBtK,EAAI,IAAI,EAC7C2mB,EAAoBD,EAAWnc,iBAAiB,mBAAmB,EACnEqc,EAAqBF,EAAWnc,iBAAiB,oBAAoB,EACrEsc,EAAqBH,EAAWnc,iBAAiB,cAAc,EAC/Duc,EAAsBJ,EAAWnc,iBAAiB,cAAc,EAChE0b,EAAkBc,WAAWF,EAAoB,EAAE,EAAIE,WAAWD,EAAqB,EAAE,EACzFZ,EAA2Ba,WAAWJ,EAAmB,EAAE,EAAII,WAAWH,EAAoB,EAAE,EAC9Ff,EAA4BpmB,EAAMjF,QAAlCqrB,wBACAG,EAAuBvmB,EAAMjF,QAA7BwrB,mBACAF,EAA4BrmB,EAAMjF,QAAlCsrB,wBACJK,EAAqB,CAAA,EA8ErBP,GAA2B,GAOrBW,EAA0B,SAACtiB,GAC7B,IAAA+iB,EAAgC1c,iBAAiBrG,CAAO,EAAhDse,EAAOyE,EAAPzE,QAAS0E,EAAUD,EAAVC,WACjB,MAAmB,SAAZ1E,GAAqC,YAAf0E,CACjC,GA4BMC,GAlBAV,EAA0B,SAACW,GAC7B,IAAMC,EAAgBD,EAAe5lB,WAC/B8lB,EAAsBd,EAAwBa,CAAa,EAE3DE,EAAaF,EAAcG,SAASC,YAAY,EAGtD,OAAKH,GAAsC,SAAfC,EAIT,SAAfA,EACO,KAEJF,EANIZ,EAAwBY,CAAa,CAOpD,GAG8ChC,CAAkB,KAItDqB,EAAiB,IAAIgB,iBAAiB,SAACC,GACzC,IAEIA,EAAejuB,IAAI,SAACkuB,GAChB,IAAMC,EAAoBrB,EAAwBoB,EAAStjB,MAAM,EAClDwjB,EAAmBF,EAAStjB,OAAOoT,sBAAsB,EAAhEjV,MAGR,GAAIolB,GAAsC,EAAjBC,EAOrB,MANApC,EAAgB,EAGhBgB,EAAeqB,WAAW,EAGpB,IAAI9uB,MAAM,sBAAsB,CAE9C,CAAC,CAED,CADF,MAAOqK,IAGb,CAAC,GAGc0kB,QAAQb,EAzBR,CAAEc,WAAY,CAAA,EAAMC,UAAW,CAAA,EAAOC,QAAS,CAAA,CAAM,CAyBxB,GAIhDzC,EAAgB,EAGZrrB,EAAS1C,SAAT0C,KACJA,IACM+tB,EAAwB/tB,EAAKnB,cAAa,iCAAA+B,OAAkC4B,EAAC,UAAA,CAAU,IAGzFxC,EAAKuH,YAAYwmB,CAAqB,EAI1ChC,KACMiC,EAAqB1wB,SAASuD,cAAc,OAAO,GACtCuF,aAAY,2BAAAxF,OAA4B4B,CAAC,EAAI,CAAA,CAAI,EACpEwrB,EAAmBtsB,UAAS,yBAAAd,OAA4B4B,EAAC,oDAAA,EAAA5B,OAAqD+qB,EAAgB,KAAA,EAC1H3rB,IACAA,EAAKuB,YAAYysB,CAAkB,CAG/C,CACJ,CAhNA,IAFA,IAAM/C,EAAsB3tB,SAASwqB,uBAAuB,sBAAsB,EAEzEtlB,EAAI,EAAGA,EAAIyoB,EAAoBxoB,OAAQD,CAAC,GAAEuoB,EAAA,CAiNvD,CA/pByBlsB,EAsCT,mCArCIK,MAAMC,KAAK7B,SAAS8B,iBAAiBP,CAAa,CAAC,EAG3DQ,IAAI,SAAC4uB,GACTA,EAAE1wB,iBAAiB,aAAc,SAAC0L,GACxBiL,EAAKjL,EAAEgB,OAETiK,EAAG9T,QAAQ8tB,0BACXha,EAAG/L,MAAM6H,gBAAkBkE,EAAG9T,QAAQ8tB,yBAGtCha,EAAG9T,QAAQ+tB,4BACXja,EAAG/L,MAAMimB,MAAQla,EAAG9T,QAAQ+tB,2BAG5Bja,EAAG9T,QAAQiuB,wBACXna,EAAG/L,MAAMob,UAAS,SAAA3iB,OAAYqtB,EAAE7tB,QAAQiuB,sBAAqB,GAAA,EAErE,CAAC,EAEDJ,EAAE1wB,iBAAiB,aAAc,SAAC0L,GAExBiL,EAAKjL,EAAEgB,OACTiK,EAAG9T,QAAQ8tB,0BACXha,EAAG/L,MAAM6H,gBAAkBkE,EAAG9T,QAAQkuB,oBAEtCpa,EAAG9T,QAAQ+tB,4BACXja,EAAG/L,MAAMimB,MAAQla,EAAG9T,QAAQmuB,kBAE5Bra,EAAG9T,QAAQiuB,wBACXna,EAAG/L,MAAMob,UAAY,WAE7B,CAAC,CACL,CAAC,EAMLuH,EAAoB,EACpB/C,EAAyB,EAwnBzB9X,OAAO1S,iBAAiB,SAAU,WAC9ButB,EAAoB,EACpB/C,EAAyB,CAC7B,CAAC,EAID,IADA,IAAMjY,EAAWxS,SAASwqB,uBAAuB,iBAAiB,EACzDtlB,EAAI,EAAGA,EAAIsN,EAASrN,OAAQD,CAAC,GAAI,CACtC,IAUcgsB,EAIAC,EAdR5kB,EAAUiG,EAAStN,GACrBqH,EAAQnL,UAAUC,SAAS,0BAA0B,IACrDkL,EAAQnL,UAAUgM,OAAO,0BAA0B,EACnDb,EAAQnL,UAAU+L,IAAI,qBAAqB,GAG3CZ,EAAQnL,UAAUC,SAAS,uBAAuB,IAC5CuqB,EAASrf,EAAQsf,UAAU7qB,MAAM,qBAAqB,IAC9CY,MAAM4X,QAAQoS,CAAM,IAExBsF,GADAE,EAAWxF,EAAO,IACKkE,YAAY,EAEzCvjB,EAAQnL,UAAUgM,OAAOgkB,CAAQ,EAE3BD,EAAoB5kB,EAAQhL,cAAc,sBAAsB,IAElE4vB,EAAkB/vB,UAAU+L,IAAI+jB,CAAW,CAI3D,CAIA,IAAM5lB,EAAkB,IAAI+lB,wBAAwB,CAChD/W,MAAO,sBACPoG,aAAc,CAAA,CAClB,CAAC,GAGexe,MAAQC,QAGhBmvB,+BAAiChmB,EAKrC,IAMJ,IAPUyd,EAAS/oB,SAAS8B,iBAAiB,qBAAqB,EACrDoD,EAAI,EAAGA,EAAI6jB,EAAO5jB,OAAQD,GAAK,EACd,IAAIqsB,mBAAmB,CAAExpB,MAAOghB,EAAO7jB,EAAG,CAAC,EACnDgO,4BAA4B5H,CAAe,EA6BjE,IAAMkmB,EAAuB,IAAIvR,YAAY,mBAAoB,CAC7DnU,OAAQ,CACJR,gBAAAA,CACJ,CACJ,CAAC,EACDtL,SAASkgB,cAAcsR,CAAoB,EAG3C,IAAIC,mBAAmBC,iBAAiBC,aAAa,EAAEhwB,KAAK,EAG5DiwB,iBAAiB7qB,YAAY6qB,iBAAiBjuB,MAAMC,SAAU8tB,iBAAiB3tB,aAAa,EAG5FuH,EAAgB8U,cAAc,EAG9ByR,cAAclwB,KAAK+vB,iBAAiBI,QAAQ,EAzCnBC,iBAAiBrwB,gBAAgB,EAEzCK,IAAI,SAAA8e,GAAGngB,EAASmgB,EAATngB,UACSkB,MAAMC,KAAKnB,EAAUoB,iBAAiB,mCAAmC,CAAC,EAElFC,IAAI,SAACiwB,GAClBA,EAAKlpB,aAAa,kBAAmB,CAAA,CAAK,CAC9C,CAAC,CACL,CAAC,EAIoBipB,iBAAiBrwB,gBAAgB,EAEzCK,IAAI,SAAAkwB,GAAGvxB,EAASuxB,EAATvxB,UACSkB,MAAMC,KAAKnB,EAAUoB,iBAAiB,uBAAuB,CAAC,EAEtEC,IAAI,SAACiwB,GAClBA,EAAKlpB,aAAa,kBAAmB,CAAA,CAAK,CAC9C,CAAC,CACL,CAAC,EA2BLopB,eAAevwB,KAAK+vB,iBAAiBS,SAAS,CAClD,CAAC","file":"wp-table-builder-frontend.js","sourcesContent":["// eslint-disable-next-line @wordpress/no-global-event-listener\ndocument.addEventListener('DOMContentLoaded', () => {\n\t(function assignToContext(key, factory) {\n\t\t// eslint-disable-next-line no-restricted-globals\n\t\tconst context = self || global;\n\n\t\tcontext[key] = factory();\n\t})('WptbFrontendBase', () => {\n\t\t/**\n\t\t * Table object.\n\t\t *\n\t\t * @param {Node} containerElement table top level container element.\n\t\t * @class\n\t\t */\n\t\tfunction WptbTableObject(containerElement) {\n\t\t\t/**\n\t\t\t * Top level wrapper for table element.\n\t\t\t *\n\t\t\t * @type {null | Node}\n\t\t\t */\n\t\t\tthis.parentContainer = null;\n\n\t\t\t/**\n\t\t\t * Container with matrix properties.\n\t\t\t *\n\t\t\t * @type {null | Node}\n\t\t\t */\n\t\t\tthis.matrixContainer = null;\n\n\t\t\t/**\n\t\t\t * Main table element.\n\t\t\t *\n\t\t\t * @type {null | HTMLTableElement}\n\t\t\t */\n\t\t\tthis.mainTable = null;\n\n\t\t\t/**\n\t\t\t * Table id.\n\t\t\t *\n\t\t\t * @type {null | number}\n\t\t\t */\n\t\t\tthis.id = null;\n\n\t\t\t/**\n\t\t\t * Parse table id.\n\t\t\t *\n\t\t\t * @param {HTMLTableElement} tableElement table element\n\t\t\t * @return {null | number} table id\n\t\t\t */\n\t\t\tconst parseId = (tableElement) => {\n\t\t\t\tconst tableId = tableElement.getAttribute('id');\n\t\t\t\tif (tableId) {\n\t\t\t\t\tconst { id } = tableId.match(/^wptb-table-id-(?<id>\\d+)$/)?.groups;\n\t\t\t\t\treturn parseInt(id, 10);\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Parse extra info from table.\n\t\t\t */\n\t\t\tconst parseExtra = () => {\n\t\t\t\tif (this.mainTable) {\n\t\t\t\t\tthis.id = parseId(this.matrixContainer);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Initialize frontend base.\n\t\t\t */\n\t\t\tconst init = () => {\n\t\t\t\tif (containerElement.classList.contains('wptb-table-container')) {\n\t\t\t\t\tthis.parentContainer = containerElement;\n\t\t\t\t\tconst matrixContainer = containerElement.querySelector('.wptb-table-container-matrix');\n\n\t\t\t\t\tif (matrixContainer) {\n\t\t\t\t\t\tthis.matrixContainer = matrixContainer;\n\n\t\t\t\t\t\tconst mainTable = this.matrixContainer.querySelector('table.wptb-preview-table');\n\n\t\t\t\t\t\tif (mainTable) {\n\t\t\t\t\t\t\tthis.mainTable = mainTable;\n\t\t\t\t\t\t\tparseExtra();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error('invalid table element');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('invalid matrix container');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('invalid table top level container');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tinit();\n\t\t}\n\n\t\t/**\n\t\t * Wptb frontend base operations and helpers.\n\t\t *\n\t\t * @class\n\t\t */\n\t\tfunction WptbFrontendBase() {\n\t\t\t/**\n\t\t\t * Available table objects.\n\t\t\t *\n\t\t\t * @type {Array}\n\t\t\t */\n\t\t\tconst tableObjects = [];\n\n\t\t\t/**\n\t\t\t * Find available tables and generate table objects.\n\t\t\t */\n\t\t\tconst prepareTableObjects = () => {\n\t\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\t\tArray.from(document.querySelectorAll('.wptb-table-container')).map((container) => {\n\t\t\t\t\ttableObjects.push(new WptbTableObject(container));\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Get available table objects.\n\t\t\t *\n\t\t\t * @return {Array} table objects array\n\t\t\t */\n\t\t\tthis.getTableObjects = () => {\n\t\t\t\treturn tableObjects;\n\t\t\t};\n\n\t\t\tthis.init = () => {\n\t\t\t\tprepareTableObjects();\n\t\t\t};\n\t\t}\n\n\t\tconst frontendBaseSingletonInstance = new WptbFrontendBase();\n\t\tfrontendBaseSingletonInstance.init();\n\n\t\treturn frontendBaseSingletonInstance;\n\t});\n});\n","/**\n * Extra styles module to add custom css rules defined for individual tables.\n */\n(function UMD(key, context, factory) {\n    if (typeof module !== 'undefined' && typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        // eslint-disable-next-line no-param-reassign\n        context[key] = factory();\n    }\n    // eslint-disable-next-line no-restricted-globals\n})('WPTB_ExtraStyles', self || global, () => {\n    /**\n     * Extra styles frontend manager.\n     *\n     * This component will be responsible for adding and maintaining extra styles defined for tables.\n     *\n     * @class\n     */\n    // eslint-disable-next-line camelcase\n    function WPTB_ExtraStyles() {\n        /**\n         * Extra styles operation modes\n         *\n         * @type {Object}\n         */\n        this.modes = {\n            builder: 'builder',\n            frontEnd: 'frontEnd',\n            block: 'block',\n        };\n\n        /**\n         * Base document for DOM operations.\n         *\n         * @type {Document}\n         */\n        this.baseDocument = document;\n\n        /**\n         * Current mode extra styles are operating on.\n         *\n         * @type {string}\n         */\n        this.currentMode = this.modes.builder;\n\n        /**\n         * General table styles.\n         *\n         * @type {string}\n         */\n        this.generalStyles = '';\n\n        /**\n         * HTML queries for table element in different plugin modes\n         *\n         * @type {Object}\n         */\n        const tableQueries = {\n            [this.modes.builder]: '.wptb-table-setup .wptb-preview-table',\n            [this.modes.block]: '.wptb-block-table-setup .wptb-preview-table',\n            [this.modes.frontEnd]: '.wptb-table-container .wptb-preview-table',\n        };\n\n        /**\n         * Format styles.\n         *\n         * @param {string} styles styles\n         * @return {string} formatted styles\n         */\n        const formatStyles = (styles) => {\n            // remove all newlines, comments and '!important' from style string to make it a one liner\n            const cleaned = styles.replaceAll(/(\\r?\\n)|(\\/\\*.+?\\*\\/)|(\\s*!important)/g, '');\n\n            // add '!important' to all rules to override default style rules\n            return cleaned.replaceAll(';', ' !important;');\n        };\n\n        /**\n         * Reform style rules so they will only affect given table id.\n         *\n         * @param {number} prefix prefix string that will be added to all rules\n         * @param {string} extraStyles extra styles\n         * @return {string} new style properties prefixed with table id class\n         */\n        const prefixStyleRules = (prefix, extraStyles) => {\n            // reformat styles into a suitable form for our regexp operations\n            const formattedStyles = formatStyles(extraStyles);\n\n            // Helper function to prefix selectors within content (for media queries)\n            const prefixSelectorsInContent = (content, prefix) => {\n                // Remove the outer braces from content\n                const innerContent = content.slice(1, -1);\n                const innerRules = parseCSS(innerContent);\n                const prefixedInnerRules = [];\n\n                innerRules.forEach((rule) => {\n                    if (!rule) return;\n\n                    const braceIndex = rule.indexOf('{');\n                    if (braceIndex === -1) return;\n\n                    const selector = rule.substring(0, braceIndex).trim();\n                    const ruleContent = rule.substring(braceIndex);\n\n                    if (selector === prefix) {\n                        prefixedInnerRules.push(rule);\n                    } else {\n                        const prefixedRule = `${prefix} ${selector}${ruleContent}`;\n                        prefixedInnerRules.push(prefixedRule);\n                    }\n                });\n\n                return `{${prefixedInnerRules.join('')}}`;\n            };\n\n            // Function to parse CSS and handle nested braces properly\n            const parseCSS = (css) => {\n                const result = [];\n                let current = '';\n                let braceCount = 0;\n                let i = 0;\n\n                while (i < css.length) {\n                    const char = css[i];\n                    current += char;\n\n                    if (char === '{') {\n                        braceCount++;\n                    } else if (char === '}') {\n                        braceCount--;\n                        if (braceCount === 0) {\n                            // Complete rule found\n                            result.push(current.trim());\n                            current = '';\n                        }\n                    }\n                    i++;\n                }\n\n                // Add any remaining content\n                if (current.trim()) {\n                    result.push(current.trim());\n                }\n\n                return result;\n            };\n\n            // Parse CSS into individual rules\n            const rules = parseCSS(formattedStyles);\n            const prefixedRules = [];\n\n            rules.forEach((rule) => {\n                if (!rule) return;\n\n                // Extract selector and content\n                const braceIndex = rule.indexOf('{');\n                if (braceIndex === -1) return;\n\n                const selector = rule.substring(0, braceIndex).trim();\n                const content = rule.substring(braceIndex);\n\n                // Skip if already prefixed with our prefix\n                if (selector === prefix) {\n                    prefixedRules.push(rule);\n                } else if (selector.startsWith('@')) {\n                    // Handle media queries and other at-rules\n                    // Parse the content inside the media query and prefix selectors there\n                    const prefixedContent = prefixSelectorsInContent(content, prefix);\n                    prefixedRules.push(`${selector}${prefixedContent}`);\n                } else {\n                    // Add prefix to regular selector\n                    const prefixedRule = `${prefix} ${selector}${content}`;\n                    prefixedRules.push(prefixedRule);\n                }\n            });\n\n            return prefixedRules.join('');\n        };\n\n        /**\n         * Apply general styles to document.\n         *\n         * @param {string} generalStyles general style rules\n         * @param {Node} baseElement element to use as base\n         */\n        const applyGeneralStyles = (generalStyles, baseElement = null) => {\n            const generalStylesheet = document.createElement('style');\n            generalStylesheet.type = 'text/css';\n            generalStylesheet.id = 'wptb-general-styles';\n\n            if (!baseElement) {\n                const head =\n                    this.currentMode === this.modes.block ? this.baseDocument : this.baseDocument.querySelector('head');\n\n                head.appendChild(generalStylesheet);\n            } else {\n                baseElement.insertAdjacentElement('beforebegin', generalStylesheet);\n            }\n            const prefixedStyleRules = prefixStyleRules(generalStyles.parentPrefix, generalStyles.styles);\n            generalStylesheet.appendChild(document.createTextNode(prefixedStyleRules));\n        };\n\n        /**\n         * Apply defined extra styles for given table element.\n         *\n         * @param {Element} tableElement table element\n         */\n        const applyExtraStyle = (tableElement) => {\n            const extraStylesRaw = tableElement.dataset.wptbExtraStyles;\n            const styleIdPrefix = 'wptb-extra-styles-';\n\n            if (!extraStylesRaw) {\n                return;\n            }\n            const extraStyles = atob(extraStylesRaw);\n\n            const [, tableId] = tableElement\n                .getAttribute('class')\n                .match(/wptb-element-main-table_setting-(?:startedid-)?(\\d+)/);\n\n            const styleId = styleIdPrefix + tableId;\n\n            const head = this.baseDocument.querySelector('head');\n\n            // since stylesheets are created for frontend only once at startup, checking document head for any created style object will work even with theme disabled tables which at builder, they are not inside a shadow-root\n            let styleElement = head?.querySelector(`#${styleId}`);\n\n            // if no style element is found, create one\n            if (!styleElement) {\n                styleElement = document.createElement('style');\n                styleElement.type = 'text/css';\n                styleElement.id = styleId;\n\n                const isThemeStylesDisabled = tableElement.dataset.disableThemeStyles;\n\n                // if theme styles are disabled, it means our table is residing inside a shadow-root, place style element inside shadow-root instead of document head\n                if (\n                    (isThemeStylesDisabled && this.currentMode === this.modes.frontEnd) ||\n                    this.currentMode === this.modes.block\n                ) {\n                    tableElement.insertAdjacentElement('beforebegin', styleElement);\n                    if (this.currentMode === this.modes.frontEnd && this.generalStyles) {\n                        applyGeneralStyles(this.generalStyles, tableElement);\n                    }\n                } else {\n                    head.appendChild(styleElement);\n                }\n            }\n            const uniqueClass = `.wptb-element-main-table_setting-${tableId}`;\n            // reform style rules so they will only affect the table they are assigned to\n            const prefixedStyles = prefixStyleRules(uniqueClass, extraStyles);\n            \n\n            // remove previous styles with updated ones\n            styleElement.innerHTML = '';\n            styleElement.appendChild(document.createTextNode(prefixedStyles));\n        };\n\n        /**\n         * Apply extra styles to all available tables on DOM.\n         *\n         * @param {string} mode operation mode to apply styles\n         * @param {string} generalStyles general style rules\n         * @param {Object} baseDocument base document for DOM operations\n         */\n        this.applyStyles = (mode = this.modes.frontEnd, generalStyles = null, baseDocument = document) => {\n            this.baseDocument = baseDocument;\n            this.currentMode = mode;\n            this.generalStyles = generalStyles;\n\n            const allTables = Array.from(this.baseDocument.querySelectorAll(tableQueries[mode]));\n\n            if (allTables) {\n                allTables.map(applyExtraStyle);\n            }\n\n            // only apply general styles on client frontend if any general styles are defined\n            if ((mode === this.modes.frontEnd || mode === this.modes.block) && generalStyles) {\n                applyGeneralStyles(generalStyles);\n            }\n        };\n    }\n\n    // send a singleton instance of manager\n    return new WPTB_ExtraStyles();\n});\n","(function UMD(key, context, factory) {\n\tif (typeof module !== 'undefined' && typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tcontext[key] = factory();\n\t}\n\t// eslint-disable-next-line no-restricted-globals\n})('WPTB_Logger', self || global, () => {\n\tconst format = '%c WP Table Builder %c {message} ';\n\tconst brandStyle =\n\t\t'border-radius:5px 0 0 5px; background-color: #3299D1; padding: 3px; color: #FFF; font-weight: bold;';\n\tconst messageStyle = 'background-color: {bgColor} ; padding: 3px; color: #FFF; border-radius: 0 5px 5px 0;';\n\n\t/**\n\t * Background colors for message.\n\t *\n\t * Add color property keys keeping in mind that internal function to use that colors will select them based on type of message, ie 'normal' color property for normal messages and 'error' color property for error message types.\n\t *\n\t * @type {Object}\n\t */\n\tconst bgColors = {\n\t\tnormal: '#48BB78',\n\t};\n\n\treturn {\n\t\t/**\n\t\t * Prepare format for incoming message.\n\t\t *\n\t\t * @param {string} message message to be used\n\t\t * @return {string} prepared message\n\t\t */\n\t\tprepareMessage(message) {\n\t\t\treturn format.replace('{message}', message);\n\t\t},\n\t\t/**\n\t\t * Prepare style of message.\n\t\t *\n\t\t * @param {string} messageType message type\n\t\t * @return {string} prepared style\n\t\t */\n\t\tprepareMessageStyle(messageType = 'normal') {\n\t\t\tlet keyName = 'normal';\n\n\t\t\tif (bgColors[messageType]) {\n\t\t\t\tkeyName = messageType;\n\t\t\t}\n\n\t\t\treturn messageStyle.replace('{bgColor}', bgColors[keyName]);\n\t\t},\n\t\t/**\n\t\t * Normal log function.\n\t\t *\n\t\t * @param {string} message message string\n\t\t */\n\t\tlog(message) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(this.prepareMessage(message), brandStyle, this.prepareMessageStyle('normal'));\n\t\t},\n\t};\n});\n","let WPTB_CutGlueTable = {\n    cutTableHorizontally: function (rowBefore, table) {\n        if( table && table.rows[rowBefore] ) {\n            for( let i = 0; i < rowBefore; i++ ) {\n                let tableRowsIChildren = table.rows[i].children;\n\n                for( let j = 0; j < tableRowsIChildren.length; j++ ) {\n                    if ( tableRowsIChildren[j].rowSpan > 1 && tableRowsIChildren[j].rowSpan > rowBefore - i ) {\n                        let newTdRowspan = tableRowsIChildren[j].rowSpan - rowBefore + i;\n                        tableRowsIChildren[j].rowSpan = rowBefore - i;\n                        if( ! tableRowsIChildren[j].dataset.sameCellBeforeDivision ) {\n                            tableRowsIChildren[j].dataset.sameCellBeforeDivision = 'r' + i + 'c' + j;\n                        }\n\n                        let td;\n                        if(table.hasOwnProperty('wptbCell')) {\n                            td = new table.wptbCell( table.mark );\n                            td = td.getDOMElement();\n                        } else {\n                            td = document.createElement('td');\n                        }\n\n                        let tdTopStyle = tableRowsIChildren[j].getAttribute( 'style' );\n                        td.setAttribute( 'style', tdTopStyle );\n                        td.colSpan = tableRowsIChildren[j].colSpan;\n                        td.rowSpan = newTdRowspan;\n                        td.dataset.sameCellBeforeDivision = tableRowsIChildren[j].dataset.sameCellBeforeDivision;\n\n                        let dataXIndex = tableRowsIChildren[j].dataset.xIndex;\n                        let dataXIndexNext = parseInt( dataXIndex ) + parseInt( tableRowsIChildren[j].colSpan );\n                        let beforeTd;\n                        while( ! beforeTd && dataXIndexNext < table.maxCols ) {\n                            beforeTd = table.rows[rowBefore].querySelector( '[data-x-index=\"' + dataXIndexNext + '\"]' );\n                            dataXIndexNext++;\n                        }\n                        table.rows[rowBefore].insertBefore( td, beforeTd );\n\n                        WPTB_RecalculateIndexes(table);\n                    }\n                }\n            }\n        }\n    },\n    glueTableHorizontally: function (table) {\n        if(table) {\n            let tds = [...table.getElementsByTagName( 'td' )];\n            for( let i = 0; i < tds.length; i++ ) {\n                if( tds[i].hasAttribute( 'data-same-cell-before-division' ) ) {\n                    let dataSameCellBeforeDivision = tds[i].dataset.sameCellBeforeDivision;\n                    let tdsSameBeforeDivision = table.querySelectorAll( '[data-same-cell-before-division=\"' + dataSameCellBeforeDivision + '\"]' );\n                    for( let j = 0; j < tdsSameBeforeDivision.length; j++ ) {\n                        if( tdsSameBeforeDivision[j] && tdsSameBeforeDivision[j + 1] ) {\n                            if( tdsSameBeforeDivision[j].parentNode && tdsSameBeforeDivision[j + 1].parentNode &&\n                                ! tdsSameBeforeDivision[j].parentNode.classList.contains( 'wptb-row-moving' ) &&\n                                ! tdsSameBeforeDivision[j + 1].parentNode.classList.contains( 'wptb-row-moving' ) ) {\n                                if( ( tdsSameBeforeDivision[j + 1].dataset.yIndex == parseInt( tdsSameBeforeDivision[j].dataset.yIndex ) +\n                                    parseInt( tdsSameBeforeDivision[j].rowSpan ) ) ) {\n                                    tdsSameBeforeDivision[j].rowSpan += tdsSameBeforeDivision[j + 1].rowSpan;\n\n                                    let tdsSameBeforeDivisionJPlusChildren = [...tdsSameBeforeDivision[j + 1].children];\n\n                                    for( let k = 0; k < tdsSameBeforeDivisionJPlusChildren.length; k++ ) {\n                                        tdsSameBeforeDivision[j].appendChild( tdsSameBeforeDivisionJPlusChildren[k] );\n                                    }\n\n                                    let nextRow = tdsSameBeforeDivision[j + 1].parentNode;\n                                    nextRow.removeChild( tdsSameBeforeDivision[j + 1] );\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            WPTB_RecalculateIndexes(table);\n        }\n    },\n    cutTableVertically: function (col, table) {\n        for ( let i = 0; i < table.rows.length; i++ ) {\n            if( col < table.maxCols ) {\n                if( col != 0 && ( ! table.rows[i].querySelector( '[data-x-index=\"' + col + '\"]' ) ) ) {\n                    let rowChildren = table.rows[i].children;\n\n                    let td,\n                        rowChildrenLength = rowChildren.length,\n                        afterTd,\n                        rowSpanNewTd,\n                        colSpanOld,\n                        colSpanNewTd;\n                    for( let j = 0; j < rowChildrenLength; j++ ) {\n                        if( rowChildren[j].colSpan > 1 && parseInt( rowChildren[j].dataset.xIndex ) < col &&\n                            parseInt( rowChildren[j].dataset.xIndex ) + parseInt( rowChildren[j].colSpan ) > col ) {\n                            if(table.hasOwnProperty('wptbCell')) {\n                                td = new table.wptbCell( table.mark );\n                                td = td.getDOMElement();\n                            } else {\n                                td = document.createElement('td');\n                            }\n\n                            rowSpanNewTd = rowChildren[j].rowSpan;\n                            colSpanOld = rowChildren[j].colSpan;\n                            rowChildren[j].colSpan = col - rowChildren[j].dataset.xIndex;\n                            colSpanNewTd = colSpanOld - rowChildren[j].colSpan;\n\n                            if( ! rowChildren[j].dataset.sameCellBeforeDivision ) {\n                                rowChildren[j].dataset.sameCellBeforeDivision = 'r' + i + 'c' + j;\n                            }\n\n                            let tdLeftStyle = rowChildren[j].getAttribute( 'style' );\n                            td.setAttribute( 'style', tdLeftStyle );\n\n                            let tdAnalogThisX = table.querySelector( '[data-x-index=\"' + col + '\"]' );\n                            if( tdAnalogThisX ) {\n                                td.style.width = tdAnalogThisX.style.width;\n                            }\n\n                            let tdAnalogThisY = table.querySelector( '[data-y-index=\"' + i + '\"]' );\n                            if( tdAnalogThisY ) {\n                                td.style.height = tdAnalogThisY.style.height;\n                            }\n                            if( rowChildren[j + 1] ) {\n                                afterTd = rowChildren[j + 1];\n                            } else {\n                                afterTd = null;\n                            }\n\n                            table.rows[i].insertBefore( td, afterTd );\n                            td.colSpan = colSpanNewTd;\n                            td.rowSpan = rowSpanNewTd;\n                            td.dataset.sameCellBeforeDivision = rowChildren[j].dataset.sameCellBeforeDivision;\n                            i += rowSpanNewTd - 1;\n                            break\n                        }\n                    }\n                }\n            }\n            WPTB_RecalculateIndexes(table);\n        }\n    },\n    glueTableVertically: function (table) {\n        if( table ) {\n            let tds = [...table.getElementsByTagName( 'td' )];\n            for( let i = 0; i < tds.length; i++ ) {\n                if( tds[i].hasAttribute( 'data-same-cell-before-division' ) ) {\n                    let dataSameCellBeforeDivision = tds[i].dataset.sameCellBeforeDivision;\n                    let tdsSameBeforeDivision = [...table.querySelectorAll( '[data-same-cell-before-division=\"' + dataSameCellBeforeDivision + '\"]' )];\n\n                    let jFirstTdGlue = null;\n                    for( let j = 0; j < tdsSameBeforeDivision.length; j++ ) {\n                        if( tdsSameBeforeDivision[j] && tdsSameBeforeDivision[j + 1] &&\n                            ! tdsSameBeforeDivision[j].classList.contains( 'wptb-column-moving' ) &&\n                            ! tdsSameBeforeDivision[j + 1].classList.contains( 'wptb-column-moving' ) ) {\n                            if( ( tdsSameBeforeDivision[j + 1].dataset.xIndex == parseInt( tdsSameBeforeDivision[j].dataset.xIndex ) +\n                                parseInt( tdsSameBeforeDivision[j].colSpan ) ) ) {\n                                if( jFirstTdGlue == null ) {\n                                    jFirstTdGlue = j;\n                                }\n                                tdsSameBeforeDivision[jFirstTdGlue].colSpan += tdsSameBeforeDivision[j + 1].colSpan;\n\n                                let tdsSameBeforeDivisionJPlusChildren = [...tdsSameBeforeDivision[j + 1].children];\n\n                                for( let k = 0; k < tdsSameBeforeDivisionJPlusChildren.length; k++ ) {\n                                    tdsSameBeforeDivision[jFirstTdGlue].appendChild( tdsSameBeforeDivisionJPlusChildren[k] );\n                                }\n\n                                let thisRow = tdsSameBeforeDivision[j + 1].parentNode;\n                                thisRow.removeChild( tdsSameBeforeDivision[j + 1] );\n                            }\n                        }\n                    }\n                }\n            }\n\n            WPTB_RecalculateIndexes(table);\n        }\n    }\n}\n","/**\n *\n * @param {HTMLElement} table\n * @param {string} typeFirst\n * @param {strinig} typeSecond\n * @param {func} workFunction\n * @param {object} responsiveFront\n */\nvar WPTB_GetDirectionAfterReconstruction = function (table, typeFirst, typeSecond, verticalProp, responsiveFront) {\n\n    let itemsPerHeader = 0;\n    let tableMaxCols = table.maxCols;\n    const switchMode = {};\n    let type = [];\n    if (responsiveFront && responsiveFront.getDirective(table)) {\n        switchMode.switch = function (e) {\n            const directives = responsiveFront.getDirective(table)\n\n            let sizeRangeId = 'desktop';\n            if (e && e.detail) {\n                sizeRangeId = e.detail.sizeRangeId;\n            }\n            type = [typeFirst, 1];\n            if (sizeRangeId !== 'desktop') {\n                if (directives.hasOwnProperty('modeOptions')) {\n                    const mode = directives.responsiveMode;\n                    const modeOptions = directives.modeOptions[mode];\n\n                    if (\n                        modeOptions.hasOwnProperty('topRowAsHeader') &&\n                        modeOptions.topRowAsHeader.hasOwnProperty(sizeRangeId) &&\n                        modeOptions.topRowAsHeader[sizeRangeId]\n                    ) {\n                        if (\n                            modeOptions.hasOwnProperty('cellStackDirection') &&\n                            modeOptions.cellStackDirection.hasOwnProperty(sizeRangeId)\n                        ) {\n                            if (modeOptions.cellStackDirection[sizeRangeId] === 'row') {\n                                type = [typeSecond, 2];\n                                itemsPerHeader = tableMaxCols - 1;\n                            } else if (modeOptions.cellStackDirection[sizeRangeId] === 'column') {\n                                if (modeOptions.hasOwnProperty('cellsPerRow')) {\n                                    itemsPerHeader = modeOptions.cellsPerRow[sizeRangeId];\n                                }\n                            }\n                        }\n                    } else {\n                        itemsPerHeader = 0;\n                    }\n                }\n            } else {\n                itemsPerHeader = 0;\n            }\n            return { type, itemsPerHeader }\n        };\n    } else {\n        switchMode.switch = function (e) {\n            type = [typeFirst, 1];\n            if (table.classList.contains('wptb-mobile-view-active')) {\n                if (table.classList.contains('wptb-table-preview-head')) {\n                    type = [typeSecond, 2];\n                    if (type === verticalProp) {\n                        itemsPerHeader = tableMaxCols - 1;\n                    }\n                }\n                let newTable = table.parentNode.parentNode.querySelector('.wptb-preview-table-mobile');\n                return { type, itemsPerHeader, newTable };\n            }\n\n            return { type, itemsPerHeader }\n        };\n    }\n\n    return switchMode;\n}\n","/**\n * Responsive class assignment for frontend operations.\n *\n * This file can be used as an UMD.\n */\n(function assignToGlobal(key, context, factory) {\n\tif (typeof exports === 'object' && typeof module !== 'undefined') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tcontext[key] = factory();\n\t}\n\t// eslint-disable-next-line no-restricted-globals\n})('WPTB_SortableTable', self || global, () => {\n\tfunction WPTB_SortTable(options = {}) {\n\t\tconst table = (this.table = options.table);\n\t\tWPTB_RecalculateIndexes(table);\n\t\tconst thisObject = this;\n\t\tthis.itemsPerHeader = 0;\n\t\tthis.tableMaxCols = table.maxCols;\n\t\tthis.cellsStylesScheme = {};\n\t\tthis.rowsStylesScheme = {};\n\n\t\t/**\n\t\t * sets the table to sort mode\n\t\t *\n\t\t * @param {string} type\n\t\t * @param {boolean} active\n\t\t * @param {number} number\n\t\t */\n\t\tthis.sortModeSwitcher = function (type, active) {\n\t\t\tif(active) {\n\t\t\t\tthis.sortModeSwitcher('horizontal', false);\n\t\t\t\tthis.sortModeSwitcher('vertical', false);\n\t\t\t}\n\n\t\t\tif (type === 'vertical') {\n\t\t\t\tthis.table.removeEventListener('click', this.sortableTableVerticalStart, false);\n\n\t\t\t\tif (active) {\n\t\t\t\t\tthis.sortingCellMouseMoveSwitcher('vertical', true);\n\t\t\t\t\tthis.table.addEventListener('click', this.sortableTableVerticalStart, false);\n\t\t\t\t\tthis.table.dataset.wptbSortableTableVertical = '1';\n\t\t\t\t\tthis.createTableElementsStylesScheme('td');\n\t\t\t\t\tthis.createTableElementsStylesScheme('tr');\n\t\t\t\t} else {\n\t\t\t\t\tthis.sortingCellMouseMoveSwitcher('vertical', false);\n\t\t\t\t\tdelete this.table.dataset.wptbSortableTableVertical;\n\t\t\t\t}\n\t\t\t} else if (type === 'horizontal') {\n\t\t\t\tthis.table.removeEventListener('click', this.sortableTableHorizontalStart, false);\n\n\t\t\t\tif (active) {\n\t\t\t\t\tthis.sortingCellMouseMoveSwitcher('horizontal', true);\n\t\t\t\t\tthis.table.addEventListener('click', this.sortableTableHorizontalStart, false);\n\t\t\t\t\tthis.table.dataset.wptbSortableTableHorizontal = '1';\n\t\t\t\t\tthis.createTableElementsStylesScheme('td');\n\t\t\t\t\tthis.createTableElementsStylesScheme('tr');\n\t\t\t\t} else {\n\t\t\t\t\tthis.sortingCellMouseMoveSwitcher('horizontal', false);\n\t\t\t\t\tdelete this.table.dataset.wptbSortableTableHorizontal;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * changes table object for old reconstruction table type\n\t\t *\n\t\t * @param {boolean}start\n\t\t * @returns {*}\n\t\t */\n\t\tthis.tableObjectChange = function (start = true) {\n\t\t\tif(this.table.classList.contains('wptb-mobile-view-active') && start) {\n\t\t\t\tthis.table = table.parentNode.parentNode.querySelector('.wptb-preview-table-mobile');\n\t\t\t} else if(this.table.classList.contains('wptb-preview-table-mobile') && !start) {\n\t\t\t\tthis.table = table.parentNode.querySelector('.wptb-preview-table');\n\t\t\t}\n\t\t\treturn this.table;\n\t\t}\n\n\t\t/**\n\t\t * fills the object with data about cell styles for all locations (create scheme)\n\t\t *\n\t\t * @param elemSelector\n\t\t */\n\t\tthis.createTableElementsStylesScheme = function (elemSelector) {\n\t\t\tthis.tableObjectChange();\n\t\t\tlet elements = this.table.querySelectorAll(elemSelector);\n\t\t\tif(elements.length) {\n\t\t\t\tfor(let i = 0; i < elements.length; i++) {\n\t\t\t\t\tlet elem = elements[i];\n\t\t\t\t\tlet cellFullStyleObj = window.getComputedStyle(elem, null);\n\t\t\t\t\tlet backgroundColor = cellFullStyleObj.getPropertyValue( 'background-color' );\n\t\t\t\t\tlet objectKey = '';\n\t\t\t\t\tif(elemSelector === 'td') {\n\t\t\t\t\t\tobjectKey = elem.dataset.xIndex + '-' + elem.dataset.yIndex;\n\t\t\t\t\t\tthis.cellsStylesScheme[objectKey] = {backgroundColor};\n\t\t\t\t\t} else if(elemSelector === 'tr') {\n\t\t\t\t\t\tobjectKey = String(i);\n\t\t\t\t\t\tthis.rowsStylesScheme[objectKey] = {backgroundColor};\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.tableObjectChange(false);\n\t\t}\n\n\t\t/**\n\t\t * applies saved cell styles data to all cells\n\t\t *\n\t\t * @param elemSelector\n\t\t */\n\t\tthis.reassignElementsStyles = function (elemSelector) {\n\t\t\tthis.tableObjectChange();\n\t\t\tlet elements = this.table.querySelectorAll(elemSelector);\n\t\t\tlet elementsStylesScheme;\n\t\t\tif(elemSelector === 'td') {\n\t\t\t\telementsStylesScheme = this.cellsStylesScheme;\n\t\t\t} else if(elemSelector === 'tr') {\n\t\t\t\telementsStylesScheme = this.rowsStylesScheme;\n\t\t\t}\n\t\t\tif(elements.length) {\n\t\t\t\tfor(let i = 0; i < elements.length; i++) {\n\t\t\t\t\tlet elem = elements[i];\n\t\t\t\t\tlet objectKey = '';\n\t\t\t\t\tif(elemSelector === 'td') {\n\t\t\t\t\t\tobjectKey = elem.dataset.xIndex + '-' + elem.dataset.yIndex;\n\t\t\t\t\t} else if(elemSelector === 'tr') {\n\t\t\t\t\t\tobjectKey = i;\n\t\t\t\t\t}\n\t\t\t\t\tif(elementsStylesScheme.hasOwnProperty(objectKey)) {\n\t\t\t\t\t\tlet elemStyles = elementsStylesScheme[objectKey];\n\t\t\t\t\t\tfor(let key in elemStyles) {\n\t\t\t\t\t\t\telem.style[key] = elemStyles[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.tableObjectChange(false);\n\t\t}\n\n\t\t/**\n\t\t * checks whether the table should be in the sort state\n\t\t * and connects the necessary handlers\n\t\t *\n\t\t * @param {object} responsiveFront\n\t\t */\n\t\tthis.sortableTableInitialization = function (responsiveFront) {\n\t\t\tlet typeFirst;\n\t\t\tlet typeSecond;\n\t\t\tif (this.table.dataset.wptbSortableTableVertical && this.table.dataset.wptbSortableTableVertical === '1') {\n\t\t\t\ttypeFirst = 'vertical';\n\t\t\t\ttypeSecond = 'horizontal';\n\t\t\t} else if (\n\t\t\t\tthis.table.dataset.wptbSortableTableHorizontal &&\n\t\t\t\tthis.table.dataset.wptbSortableTableHorizontal === '1'\n\t\t\t) {\n\t\t\t\ttypeFirst = 'horizontal';\n\t\t\t\ttypeSecond = 'vertical';\n\t\t\t}\n\n\t\t\tif(!typeFirst || typeof typeFirst !== 'string' || !typeSecond || typeof typeSecond !== 'string') return;\n\n\t\t\tlet switchMode = WPTB_GetDirectionAfterReconstruction(this.table, typeFirst, typeSecond, 'vertical', responsiveFront);\n\n\t\t\tif(typeof switchMode === 'object' && switchMode.hasOwnProperty('switch')) {\n\t\t\t\tfunction sortModeSwitcherRun (e) {\n\t\t\t\t\tlet switchModeObj = switchMode.switch(e);\n\t\t\t\t\tif(typeof switchModeObj === 'object') {\n\t\t\t\t\t\tthis.itemsPerHeader = switchModeObj.itemsPerHeader;\n\t\t\t\t\t\tif(switchModeObj.hasOwnProperty('newTable')) {\n\t\t\t\t\t\t\tlet tableOld = this.table;\n\t\t\t\t\t\t\tthis.table = switchModeObj.newTable;\n\t\t\t\t\t\t\tthis.sortModeSwitcher(switchModeObj.type[0], true);\n\t\t\t\t\t\t\tthis.table = tableOld;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.sortModeSwitcher(switchModeObj.type[0], true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortModeSwitcherRun.call(thisObject);\n\t\t\t\tthis.table.addEventListener(\n\t\t\t\t\t'table:rebuilt',\n\t\t\t\t\tfunction (e) {\n\t\t\t\t\t\tsortModeSwitcherRun.call(thisObject, e);\n\t\t\t\t\t},\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * adds and deletes mousemove and mouseleave events handlers when happens switch sorting mode\n\t\t * and also can add necessary attributes\n\t\t *\n\t\t * @param {string} type\n\t\t * @param {boolean} active\n\t\t */\n\t\tthis.sortingCellMouseMoveSwitcher = function (type, active) {\n\t\t\t/**\n\t\t\t * removes and adds mousemove and mouseleave events handlers\n\t\t\t *\n\t\t\t * @param {HTMLElement} td\n\t\t\t * @param {func} sCMM\n\t\t\t * @param {boolean} active\n\t\t\t */\n\t\t\tfunction s(td, sCMM, active) {\n\t\t\t\ttd.removeEventListener('mousemove', sCMM, false);\n\t\t\t\ttd.removeEventListener('mouseleave', tdMouseLeave, false);\n\t\t\t\tif (active) {\n\t\t\t\t\ttd.addEventListener('mousemove', sCMM, false);\n\t\t\t\t\ttd.addEventListener('mouseleave', tdMouseLeave, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * removes and adds data sorted attributes\n\t\t\t *\n\t\t\t * @param {HTMLElement} td\n\t\t\t * @param {string} dataAttr\n\t\t\t * @param {boolean} active\n\t\t\t */\n\t\t\tfunction dataAttrSortChange(td, dataAttr, active) {\n\t\t\t\tif (active) {\n\t\t\t\t\tif (!td.dataset[dataAttr] || td.dataset[dataAttr] !== 'desk-disabled') {\n\t\t\t\t\t\ttd.dataset[dataAttr] = 'ask';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttd.dataset[dataAttr] = 'desk';\n\t\t\t\t\t}\n\t\t\t\t} else if (td.dataset[dataAttr] === 'ask') {\n\t\t\t\t\ttd.dataset[dataAttr] = 'ask-disabled';\n\t\t\t\t} else if (td.dataset[dataAttr] === 'desk') {\n\t\t\t\t\ttd.dataset[dataAttr] = 'desk-disabled';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// removes all mousemove and mouseleave events handlers\n\t\t\t// and also removes all data sorted attributes from all cells\n\t\t\tlet tds = this.table.querySelectorAll('td');\n\t\t\tif (tds.length) {\n\t\t\t\ttds = [...tds];\n\t\t\t\ttds.map((td) => {\n\t\t\t\t\ts(td, sortingCellMouseMoveVertical, false);\n\t\t\t\t\tdataAttrSortChange(td, 'sortedVertical', false);\n\t\t\t\t\ts(td, sortingCellMouseMoveHorizontal, false);\n\t\t\t\t\tdataAttrSortChange(td, 'sortedHorizontal', false);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// if active === true sets sorted events handlers\n\t\t\t// and data sorted attributes for all cells\n\t\t\tif (active) {\n\t\t\t\tif (type === 'vertical') {\n\t\t\t\t\tlet rowsLength = this.table.rows.length;\n\t\t\t\t\tlet dataYIndexStart = 0;\n\t\t\t\t\twhile (rowsLength > 0) {\n\t\t\t\t\t\tlet tds = this.table.querySelectorAll(`[data-y-index=\"${dataYIndexStart}\"]`);\n\t\t\t\t\t\ttds = [...tds];\n\t\t\t\t\t\ttds.map((td) => {\n\t\t\t\t\t\t\ts(td, sortingCellMouseMoveVertical, active);\n\t\t\t\t\t\t\tdataAttrSortChange(td, 'sortedVertical', active);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (this.itemsPerHeader) {\n\t\t\t\t\t\t\trowsLength -= this.itemsPerHeader + 1;\n\t\t\t\t\t\t\tdataYIndexStart += this.itemsPerHeader + 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trowsLength = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (type === 'horizontal') {\n\t\t\t\t\tlet tds = this.table.querySelectorAll('[data-x-index=\"0\"]');\n\t\t\t\t\ttds = [...tds];\n\t\t\t\t\ttds.map((td) => {\n\t\t\t\t\t\tlet tdsPerAfter = this.table.querySelectorAll(`[data-y-index=\"${td.dataset.yIndex}\"]`);\n\t\t\t\t\t\tif(tdsPerAfter.length > 2) {\n\t\t\t\t\t\t\ts(td, sortingCellMouseMoveHorizontal, active);\n\t\t\t\t\t\t\tdataAttrSortChange(td, 'sortedHorizontal', active);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * adds a sortable-hover class for a cell when the cursor is over the sort icon (arrow)\n\t\t *\n\t\t * @param {event} e\n\t\t * @param {string} type\n\t\t * @param {HTMLElement} element td\n\t\t */\n\t\tfunction sortingCellMouseMov(e, type, element) {\n\t\t\tif (e.target.tagName === 'TD') {\n\t\t\t\tconst x = e.offsetX == undefined ? e.layerX : e.offsetX;\n\t\t\t\tconst y = e.offsetY == undefined ? e.layerY : e.offsetY;\n\t\t\t\tlet xMatch = false;\n\t\t\t\tif ((type === 'vertical' && e.target.clientWidth - x <= 35) || (type === 'horizontal' && x <= 35)) {\n\t\t\t\t\txMatch = true;\n\t\t\t\t}\n\t\t\t\tif (xMatch && (e.target.clientHeight - 35) / 2 < y && (e.target.clientHeight + 35) / 2 > y) {\n\t\t\t\t\telement.classList.add('sortable-hover');\n\t\t\t\t} else {\n\t\t\t\t\telement.classList.remove('sortable-hover');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telement.classList.remove('sortable-hover');\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * calls sortingCellMouseMov with the type parameter set to vertical\n\t\t *\n\t\t * @param {event} e\n\t\t */\n\t\tfunction sortingCellMouseMoveVertical(e) {\n\t\t\tsortingCellMouseMov(e, 'vertical', this);\n\t\t}\n\n\t\t/**\n\t\t * calls sortingCellMouseMov with the type parameter set to horizontal\n\t\t *\n\t\t * @param {event} e\n\t\t */\n\t\tfunction sortingCellMouseMoveHorizontal(e) {\n\t\t\tsortingCellMouseMov(e, 'horizontal', this);\n\t\t}\n\n\t\t/**\n\t\t * remove sortable-hover class from cell when cursor leave cell\n\t\t */\n\t\tfunction tdMouseLeave() {\n\t\t\tthis.classList.remove('sortable-hover');\n\t\t}\n\n\t\t/**\n\t\t * function for sorting the table vertically by the numeric content of cells\n\t\t *\n\t\t * @param {event} e\n\t\t * @param {HTMLElement} table\n\t\t * @param {string} type\n\t\t */\n\t\tfunction sortableTable(e, type) {\n\t\t\tif (\n\t\t\t\te.target &&\n\t\t\t\te.target.tagName === 'TD' &&\n\t\t\t\t!table.parentNode.classList.contains('wptb-preview-table-manage-cells')\n\t\t\t) {\n\t\t\t\tconst table = e.currentTarget;\n\t\t\t\tlet tableWasSorted = false;\n\t\t\t\tif (type === 'vertical' && e.target.dataset.hasOwnProperty('sortedVertical')) {\n\t\t\t\t\t/**\n\t\t\t\t\t * if table have enabled param topRowAsHeader and sellsStackDirection is column\n\t\t\t\t\t * the top and bottom rows that will not be sorted are temporarily removed from the table\n\t\t\t\t\t */\n\t\t\t\t\tconst tableRowsBefore = [];\n\t\t\t\t\tconst tableRowsAfter = [];\n\t\t\t\t\tif (this.itemsPerHeader && this.itemsPerHeader < table.rows.length) {\n\t\t\t\t\t\tWPTB_RecalculateIndexes(table);\n\t\t\t\t\t\tconst tableRowsArr = [...table.rows];\n\t\t\t\t\t\tconst tableLastCont = table.querySelector('tbody') ? table.querySelector('tbody') : table;\n\t\t\t\t\t\tfor (let i = 0; i < tableRowsArr.length; i++) {\n\t\t\t\t\t\t\tif (i < e.target.dataset.yIndex) {\n\t\t\t\t\t\t\t\ttableRowsBefore.push(tableRowsArr[i]);\n\t\t\t\t\t\t\t\ttableLastCont.removeChild(tableRowsArr[i]);\n\t\t\t\t\t\t\t} else if (i > parseInt(e.target.dataset.yIndex, 10) + this.itemsPerHeader) {\n\t\t\t\t\t\t\t\ttableRowsAfter.push(tableRowsArr[i]);\n\t\t\t\t\t\t\t\ttableLastCont.removeChild(tableRowsArr[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tWPTB_RecalculateIndexes(table);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tds = table.querySelectorAll(`[data-x-index=\"${e.target.dataset.xIndex}\"]`);\n\t\t\t\t\ttds = [...tds];\n\n\t\t\t\t\t/**\n\t\t\t\t\t * preparing table for sorting\n\t\t\t\t\t */\n\t\t\t\t\tlet rowspan;\n\t\t\t\t\tlet rowNum;\n\t\t\t\t\ttds.map((td) => {\n\t\t\t\t\t\tif (!(rowspan = parseInt(td.rowSpan, 10))) {\n\t\t\t\t\t\t\trowspan = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\trowNum = td.dataset.yIndex;\n\t\t\t\t\t\tWPTB_CutGlueTable.cutTableHorizontally(rowNum, table);\n\t\t\t\t\t\trowNum += rowspan;\n\t\t\t\t\t\tWPTB_CutGlueTable.cutTableHorizontally(rowNum, table);\n\t\t\t\t\t});\n\n\t\t\t\t\tconst rowsValuesArr = [];\n\t\t\t\t\tlet rowsTdFirst;\n\t\t\t\t\tlet tdYCoordsRowSpanPrevious = 0;\n\t\t\t\t\tconst tableRowsPushed = [];\n\t\t\t\t\tfor (let i = 0; i < tds.length; i++) {\n\t\t\t\t\t\tconst tdsChanged = changeSortingTdsCollection(\n\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\ttable,\n\t\t\t\t\t\t\ttds,\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\ttdYCoordsRowSpanPrevious,\n\t\t\t\t\t\t\t'vertical'\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (tdsChanged && tdsChanged.hasOwnProperty('i')) {\n\t\t\t\t\t\t\ttds = tdsChanged.tds;\n\t\t\t\t\t\t\ti = tdsChanged.i;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (tdsChanged) {\n\t\t\t\t\t\t\ttds = tdsChanged.tds;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst td = tds[i];\n\n\t\t\t\t\t\tlet tdRowspan = parseInt(td.rowSpan, 10);\n\t\t\t\t\t\tif (!tdRowspan) tdRowspan = 1;\n\n\t\t\t\t\t\ttdYCoordsRowSpanPrevious = parseInt(td.dataset.yIndex, 10) + tdRowspan;\n\n\t\t\t\t\t\tconst textElementsValues = textElementsValuesGet(td);\n\n\t\t\t\t\t\tconst rowsTd = [];\n\t\t\t\t\t\tfor (let j = 0; j < tdRowspan; j++) {\n\t\t\t\t\t\t\trowsTd.push(table.rows[parseInt(td.dataset.yIndex, 10) + j]);\n\t\t\t\t\t\t\ttableRowsPushed.push(parseInt(td.dataset.yIndex, 10) + j);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (td.dataset.yIndex > 0) {\n\t\t\t\t\t\t\trowsValuesArr.push({\n\t\t\t\t\t\t\t\trowsTd,\n\t\t\t\t\t\t\t\tvalue: textElementsValues,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trowsTdFirst = rowsTd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst orderBy = setSortedAscDataAttr(e, 'sortedVertical');\n\t\t\t\t\tif (!orderBy) return;\n\n\t\t\t\t\tif (rowsValuesArr.length) rowsValuesArr.sort((prev, next) => sortOrder(orderBy, prev, next));\n\n\t\t\t\t\trowsValuesArr.unshift({ rowsTd: rowsTdFirst });\n\n\t\t\t\t\tif (rowsValuesArr.length < table.rows.length) {\n\t\t\t\t\t\tfor (let i = 0; i < table.rows.length; i++) {\n\t\t\t\t\t\t\tif (tableRowsPushed.indexOf(i) > -1) continue;\n\t\t\t\t\t\t\tconst rowsTd = [];\n\t\t\t\t\t\t\trowsTd.push(table.rows[i]);\n\n\t\t\t\t\t\t\trowsValuesArr.push({\n\t\t\t\t\t\t\t\trowsTd,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst tBody = table.querySelector('tbody');\n\t\t\t\t\ttBody.innerHTML = '';\n\n\t\t\t\t\trowsValuesArr.map((rowsValObj) => {\n\t\t\t\t\t\trowsValObj.rowsTd.map((row) => {\n\t\t\t\t\t\t\ttBody.appendChild(row);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t/**\n\t\t\t\t\t * returning previously deleted rows\n\t\t\t\t\t */\n\t\t\t\t\tif (tableRowsBefore.length) {\n\t\t\t\t\t\tconst tableLastCont = table.querySelector('tbody') ? table.querySelector('tbody') : table;\n\t\t\t\t\t\tif (tableLastCont) {\n\t\t\t\t\t\t\tconst trRef = tableLastCont.querySelector('tr');\n\t\t\t\t\t\t\ttableRowsBefore.map((tr) => {\n\t\t\t\t\t\t\t\ttableLastCont.insertBefore(tr, trRef);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (tableRowsAfter.length) {\n\t\t\t\t\t\tconst tableLastCont = table.querySelector('tbody') ? table.querySelector('tbody') : table;\n\t\t\t\t\t\tif (tBody) {\n\t\t\t\t\t\t\ttableRowsAfter.map((tr) => {\n\t\t\t\t\t\t\t\ttableLastCont.appendChild(tr);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tWPTB_RecalculateIndexes(table);\n\n\t\t\t\t\tWPTB_CutGlueTable.glueTableHorizontally(table);\n\n\t\t\t\t\ttableWasSorted = true;\n\t\t\t\t} else if (type === 'horizontal' && e.target.dataset.xIndex === '0') {\n\t\t\t\t\tlet tds = table.querySelectorAll(`[data-y-index=\"${e.target.dataset.yIndex}\"]`);\n\t\t\t\t\ttds = [...tds];\n\n\t\t\t\t\t// preparing table for sorting\n\t\t\t\t\tlet colspan;\n\t\t\t\t\tlet colNum;\n\t\t\t\t\ttds.map((td) => {\n\t\t\t\t\t\tif (!(colspan = parseInt(td.colSpan, 10))) {\n\t\t\t\t\t\t\tcolspan = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolNum = td.dataset.xIndex;\n\t\t\t\t\t\tWPTB_CutGlueTable.cutTableVertically(colNum, table);\n\t\t\t\t\t\tcolNum += colspan;\n\t\t\t\t\t\tWPTB_CutGlueTable.cutTableVertically(colNum, table);\n\t\t\t\t\t});\n\n\t\t\t\t\tconst columnsValuesArr = [];\n\t\t\t\t\tlet columnsTdFirst;\n\n\t\t\t\t\tlet tdXCoordsColSpanPrevious = 0;\n\t\t\t\t\tfor (let i = 0; i < tds.length; i++) {\n\t\t\t\t\t\tconst tdsChanged = changeSortingTdsCollection(\n\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\ttable,\n\t\t\t\t\t\t\ttds,\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\ttdXCoordsColSpanPrevious,\n\t\t\t\t\t\t\t'horizontal'\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (tdsChanged && tdsChanged.hasOwnProperty('i')) {\n\t\t\t\t\t\t\ttds = tdsChanged.tds;\n\t\t\t\t\t\t\ti = tdsChanged.i;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (tdsChanged) {\n\t\t\t\t\t\t\ttds = tdsChanged.tds;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst td = tds[i];\n\t\t\t\t\t\tlet tdColspan = parseInt(td.colSpan, 10);\n\t\t\t\t\t\tif (!tdColspan) tdColspan = 1;\n\n\t\t\t\t\t\ttdXCoordsColSpanPrevious = parseInt(td.dataset.xIndex, 10) + tdColspan;\n\n\t\t\t\t\t\tconst textElementsValues = textElementsValuesGet(td);\n\t\t\t\t\t\tconst columnsTd = [];\n\t\t\t\t\t\tfor (let j = 0; j < tdColspan; j++) {\n\t\t\t\t\t\t\tconst tdsColumn = [\n\t\t\t\t\t\t\t\t...table.querySelectorAll(`[data-x-index=\"${parseInt(td.dataset.xIndex, 10) + j}\"]`),\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\tcolumnsTd.push(tdsColumn);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (td.dataset.xIndex > 0) {\n\t\t\t\t\t\t\tcolumnsValuesArr.push({\n\t\t\t\t\t\t\t\tcolumnsTd,\n\t\t\t\t\t\t\t\tvalue: textElementsValues,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcolumnsTdFirst = columnsTd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst orderBy = setSortedAscDataAttr(e, 'sortedHorizontal');\n\t\t\t\t\tif (!orderBy) return;\n\n\t\t\t\t\tif (columnsValuesArr.length) columnsValuesArr.sort((prev, next) => sortOrder(orderBy, prev, next));\n\n\t\t\t\t\tcolumnsValuesArr.unshift({ columnsTd: columnsTdFirst });\n\n\t\t\t\t\tif (columnsValuesArr.length < table.maxCols) {\n\t\t\t\t\t\tconst difference = table.maxCols - columnsValuesArr.length;\n\t\t\t\t\t\tfor (let i = 0; i < difference; i++) {\n\t\t\t\t\t\t\tconst tdsColumn = [\n\t\t\t\t\t\t\t\t...table.querySelectorAll(\n\t\t\t\t\t\t\t\t\t`[data-x-index=\"${parseInt(table.maxCols, 10) - parseInt(difference, 10) + i}\"]`\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t];\n\n\t\t\t\t\t\t\tcolumnsValuesArr.push({\n\t\t\t\t\t\t\t\tcolumnsTd: [tdsColumn],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < table.rows.length; i++) {\n\t\t\t\t\t\ttable.rows[i].innerHTML = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tcolumnsValuesArr.map((columnsValObj) => {\n\t\t\t\t\t\tcolumnsValObj.columnsTd.map((tdsColumn) => {\n\t\t\t\t\t\t\ttdsColumn.map((td) => {\n\t\t\t\t\t\t\t\ttable.rows[td.dataset.yIndex].appendChild(td);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tWPTB_RecalculateIndexes(table);\n\n\t\t\t\t\tWPTB_CutGlueTable.glueTableVertically(table);\n\n\t\t\t\t\ttableWasSorted = true;\n\t\t\t\t}\n\n\t\t\t\tif (tableWasSorted) {\n\t\t\t\t\tremoveCellsAttrAfterDivision(table);\n\n\t\t\t\t\tif (table.hasOwnProperty('tableSM')) {\n\t\t\t\t\t\tconst tableSM = table.tableSM();\n\t\t\t\t\t\tnew tableSM().tableStateSet();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.reassignElementsStyles('td');\n\t\t\t\t\tthis.reassignElementsStyles('tr');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Function that sets the data-attribute with the number of the row or column\n\t\t * that the table was sorted by. Returns the number of a row or column\n\t\t *\n\t\t * @param {event} e\n\t\t * @param {string} dataAttr\n\t\t * @returns {null|boolean}\n\t\t */\n\t\tfunction setSortedAscDataAttr(e, dataAttr) {\n\t\t\tif (\n\t\t\t\te.currentTarget &&\n\t\t\t\t(e.currentTarget.classList.contains('wptb-preview-table') ||\n\t\t\t\t\te.currentTarget.classList.contains('wptb-preview-table-mobile'))\n\t\t\t) {\n\t\t\t\tif (!e.target.dataset[dataAttr] || e.target.dataset[dataAttr] === 'ask') {\n\t\t\t\t\te.target.dataset[dataAttr] = 'desk';\n\t\t\t\t} else {\n\t\t\t\t\te.target.dataset[dataAttr] = 'ask';\n\t\t\t\t}\n\n\t\t\t\treturn e.target.dataset[dataAttr];\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * defines the sorting order\n\t\t *\n\t\t * @param {string} orderBy\n\t\t * @param prev\n\t\t * @param next\n\t\t * @returns {number}\n\t\t */\n\t\tfunction sortOrder(orderBy = 'ask', prev, next) {\n\t\t\tlet prevValue = prev.value;\n\t\t\tlet nextValue = next.value;\n\t\t\tif (parseInt(prevValue) && parseInt(nextValue)) {\n\t\t\t\tprevValue = parseInt(prevValue);\n\t\t\t\tnextValue = parseInt(nextValue);\n\t\t\t}\n\n\t\t\tif (orderBy === 'ask') {\n\t\t\t\tif (prevValue < nextValue) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (prevValue === nextValue) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (prevValue < nextValue) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (prevValue === nextValue) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\t/**\n\t\t * return cell text elements values\n\t\t *\n\t\t * @param cell {HTMLElement}\n\t\t * @returns {string}\n\t\t */\n\t\tfunction textElementsValuesGet(cell) {\n\t\t\tlet textElements = cell.querySelectorAll('.wptb-text-container');\n\t\t\ttextElements = [...textElements];\n\t\t\tlet value = '';\n\t\t\tfor (let j = 0; j < textElements.length; j++) {\n\t\t\t\tvalue += textElements[j].innerText;\n\t\t\t\tif (j !== textElements.length - 1) value += ' ';\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\t/**\n\t\t * adds cells to the collection of cells in the row or column that the table is sorted by.\n\t\t * These added cells are not originally were added in the collection,\n\t\t * because they are combined with cells from higher rows or left-side columns\n\t\t *\n\t\t * @param {event} e\n\t\t * @param {HTMLElement} table\n\t\t * @param {array} tds\n\t\t * @param {number} i\n\t\t * @param {number} tdIndexSpanPrev\n\t\t * @param {string} type\n\t\t * @returns {{tds: *}|boolean|{tds: *, i: *}}\n\t\t */\n\t\tfunction changeSortingTdsCollection(e, table, tds, i, tdIndexSpanPrev, type) {\n\t\t\tconst td = tds[i];\n\t\t\tlet tdsCollectionChanged = false;\n\t\t\tlet collectionTds;\n\t\t\tlet collectionTdsJSpan;\n\t\t\tlet collectionTdsJSpanProperty;\n\t\t\tlet indexName;\n\t\t\tlet indexNameCamelCase;\n\t\t\tlet indexNamePerpendicularCamelCase;\n\t\t\tlet tdSpanProperty;\n\t\t\t// max rows or columns column\n\t\t\tlet tableGroupCount;\n\n\t\t\tif (type === 'vertical') {\n\t\t\t\tcollectionTdsJSpanProperty = 'colSpan';\n\t\t\t\tindexName = 'data-y-index';\n\t\t\t\tindexNameCamelCase = 'yIndex';\n\t\t\t\tindexNamePerpendicularCamelCase = 'xIndex';\n\t\t\t\ttdSpanProperty = 'rowSpan';\n\t\t\t\ttableGroupCount = table.rows.length;\n\t\t\t} else if (type === 'horizontal') {\n\t\t\t\tcollectionTdsJSpanProperty = 'rowSpan';\n\t\t\t\tindexName = 'data-x-index';\n\t\t\t\tindexNameCamelCase = 'xIndex';\n\t\t\t\tindexNamePerpendicularCamelCase = 'yIndex';\n\t\t\t\ttdSpanProperty = 'colSpan';\n\t\t\t\ttableGroupCount = table.maxCols;\n\t\t\t}\n\n\t\t\tif (td.dataset[indexNameCamelCase] - tdIndexSpanPrev > 0) {\n\t\t\t\tcollectionTds = table.querySelectorAll(`[${indexName}=\"${tdIndexSpanPrev}\"]`);\n\n\t\t\t\tfor (let j = 0; j < collectionTds.length; j++) {\n\t\t\t\t\tcollectionTdsJSpan = collectionTds[j][collectionTdsJSpanProperty];\n\t\t\t\t\tif (!collectionTdsJSpan) collectionTdsJSpan = 1;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tcollectionTds[j].dataset[indexNamePerpendicularCamelCase] <\n\t\t\t\t\t\t\te.target.dataset[indexNamePerpendicularCamelCase] &&\n\t\t\t\t\t\tparseInt(collectionTds[j].dataset[indexNamePerpendicularCamelCase], 10) +\n\t\t\t\t\t\t\tparseInt(collectionTdsJSpan, 10) >\n\t\t\t\t\t\t\te.target.dataset[indexNamePerpendicularCamelCase]\n\t\t\t\t\t) {\n\t\t\t\t\t\ttds.splice(i, 0, collectionTds[j]);\n\t\t\t\t\t\ttdsCollectionChanged = true;\n\t\t\t\t\t\ti--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tdsCollectionChanged) return { tds, i };\n\n\t\t\tlet tdSpan = parseInt(td[tdSpanProperty], 10);\n\t\t\tif (!tdSpan) tdSpan = 1;\n\t\t\tif (i == tds.length - 1 && parseInt(td.dataset[indexNameCamelCase], 10) + tdSpan < tableGroupCount) {\n\t\t\t\tcollectionTds = table.querySelectorAll(\n\t\t\t\t\t`[${indexName}=\"${parseInt(td.dataset[indexNameCamelCase], 10) + tdSpan}\"]`\n\t\t\t\t);\n\t\t\t\tfor (let j = 0; j < collectionTds.length; j++) {\n\t\t\t\t\tcollectionTdsJSpan = collectionTds[j][collectionTdsJSpanProperty];\n\t\t\t\t\tif (!collectionTdsJSpan) collectionTdsJSpan = 1;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tcollectionTds[j].dataset[indexNamePerpendicularCamelCase] <\n\t\t\t\t\t\t\te.target.dataset[indexNamePerpendicularCamelCase] &&\n\t\t\t\t\t\tparseInt(collectionTds[j].dataset[indexNamePerpendicularCamelCase], 10) +\n\t\t\t\t\t\t\tparseInt(collectionTdsJSpan, 10) >\n\t\t\t\t\t\t\te.target.dataset[indexNamePerpendicularCamelCase]\n\t\t\t\t\t) {\n\t\t\t\t\t\ttds.push(collectionTds[j]);\n\t\t\t\t\t\ttdsCollectionChanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tdsCollectionChanged) return { tds };\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * remove cells attributes which were used for division table\n\t\t *\n\t\t * @param {HTMLElement} table\n\t\t */\n\t\tfunction removeCellsAttrAfterDivision(table) {\n\t\t\tconst tdsAll = [...table.getElementsByTagName('td')];\n\t\t\tfor (let i = 0; i < tdsAll.length; i++) {\n\t\t\t\tif (tdsAll[i].hasAttribute('data-same-cell-before-division')) {\n\t\t\t\t\ttdsAll[i].removeAttribute('data-same-cell-before-division');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * function for run sorting table vertically\n\t\t *\n\t\t * @param {event} e\n\t\t */\n\t\tthis.sortableTableVerticalStart = function (e) {\n\t\t\tsortableTable.call(thisObject, e, 'vertical');\n\t\t};\n\n\t\t/**\n\t\t * function for run sorting table horizontally\n\t\t *\n\t\t * @param {event} e\n\t\t */\n\t\tthis.sortableTableHorizontalStart = function (e) {\n\t\t\tsortableTable.call(thisObject, e, 'horizontal');\n\t\t};\n\n\t\treturn this;\n\t}\n\n\treturn WPTB_SortTable;\n});\n","const WPTB_RecalculateIndexes = function (table) {\n    let trs = table.getElementsByTagName( 'tr' ),\n        tds, maxCols = 0, maxColsFull = 0, tdsArr = [];\n\n    for ( let i = 0; i < trs.length; i++ ) {\n        tds = trs[i].getElementsByTagName( 'td' );\n\n        if ( tdsArr[i] == undefined ) {\n            tdsArr[i] = [];\n        }\n\n        let jMainIter = 0;\n        for ( let j = 0; j < tds.length; j++ ) {\n            if ( tdsArr[i][j] != undefined ) {\n                for ( let y = 0; y < 100; y++ ) {\n                    if ( tdsArr[i][jMainIter] != undefined ) {\n                        jMainIter++;\n                        continue;\n                    }\n                    tdsArr[i][jMainIter] = tds[j];\n                    tds[j].dataset.xIndex = jMainIter;\n                    break;\n                }\n            } else {\n                tdsArr[i][j] = tds[j];\n                tds[j].dataset.xIndex = jMainIter;\n            }\n            tds[j].dataset.yIndex = i;\n\n            if ( tds[j].colSpan > 1 ) {\n                for ( let k = 1; k < tds[j].colSpan; k++ ) {\n                    jMainIter++;\n                    tdsArr[i][jMainIter] = 'tdDummy';\n                }\n            }\n\n            if ( tds[j].rowSpan > 1 ) {\n                for ( let x = 1; x < tds[j].rowSpan; x++ ) {\n                    if ( tdsArr[i + x] == undefined ) {\n                        tdsArr[i + x] = [];\n                    }\n                    for ( let z = 0; z < tds[j].colSpan; z++ ) {\n                        tdsArr[i + x][jMainIter - tds[j].colSpan + 1 + z ] = 'tdDummy';\n                    }\n                }\n            }\n            jMainIter++;\n        }\n\n        if ( tds.length > maxCols ) {\n            maxCols = tds.length;\n        }\n\n        if( i == 0 ) {\n            maxColsFull = jMainIter;\n        }\n    }\n    table.columns = maxCols;\n    table.maxCols = maxColsFull;\n}\n","/**\n * Responsive class assignment for frontend operations.\n *\n * This file can be used as an UMD.\n */\n(function assignToGlobal(key, context, factory) {\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n        module.exports = factory();\n    } else {\n        // eslint-disable-next-line no-param-reassign\n        context[key] = factory();\n    }\n    // eslint-disable-next-line no-restricted-globals\n})('WPTB_ResponsiveFrontend', self || global, () => {\n    /**\n     * Log a message to console.\n     *\n     * @param {string} message message to be logged\n     * @param {string} type console log type (e.g info, warn, error)\n     * @throws An error will be given for invalid type value\n     */\n    function logToConsole(message, type = 'log') {\n        if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n            // eslint-disable-next-line no-console\n            if (console[type]) {\n                // eslint-disable-next-line no-console\n                console[type](`[WPTB]: ${message}`);\n            } else {\n                throw new Error(`no logging type found with given type value of [${type}]`);\n            }\n        }\n    }\n\n    /**\n     * Object implementation for cell element operations.\n     * If an empty cellElement parameter is given, a fresh cell element will be created.\n     *\n     * @param {HTMLElement | null} cellElement cell element\n     * @param {null | CellObject} reference main cell object if the current cell is a reference to that cell in cases like merged cells\n     * @class\n     */\n    function CellObject(cellElement, reference = null) {\n        // cell element\n        this.element = cellElement;\n\n        this.referenceObject = reference;\n\n        // variable for deciding part of merged cells to be visible or not\n        this.mergedRenderStatus = true;\n\n        // connected merged cell references\n        this.mergedCells = {\n            row: [],\n            column: [],\n        };\n\n        /**\n         * Get merged render status.\n         *\n         * @return {boolean} render status\n         */\n        this.getMergedRenderStatus = () => {\n            return this.mergedRenderStatus;\n        };\n\n        /**\n         * Set merged render status.\n         *\n         * @param {boolean} status render status\n         */\n        this.setMergedRenderStatus = (status) => {\n            this.mergedRenderStatus = status;\n        };\n\n        if (this.referenceObject !== null) {\n            this.element = cellElement.cloneNode(true);\n        }\n\n        // modifications object\n        // this object will keep track of the modifications that has done to the cell to make sure we can roll them back to their original values\n        this.modifications = {};\n\n        // spans object for cell's original merge values\n        this.spans = {\n            row: 1,\n            col: 1,\n        };\n\n        this.remainingSpans = {\n            row: 0,\n            col: 0,\n        };\n\n        /**\n         * Cache cell element's original span values.\n         *\n         * @private\n         */\n        this.cacheSpanValues = () => {\n            // eslint-disable-next-line array-callback-return\n            Object.keys(this.spans).map((k) => {\n                if (Object.prototype.hasOwnProperty.call(this.spans, k)) {\n                    const defaultVal = this.spans[k];\n\n                    this.spans[k] = this.element.getAttribute(`${k}Span`) || defaultVal;\n                }\n            });\n        };\n\n        this.cacheSpanValues();\n\n        /**\n         * Get original span value of cell object.\n         *\n         * @param {string} spanType span type, available values are row-column\n         * @param {boolean} fromElement instead of original value, get the assigned span value from HTMLElement itself\n         * @throws An error will be given for invalid span type\n         */\n        this.getSpan = (spanType, fromElement = false) => {\n            const spanVal = fromElement ? this.getElement().getAttribute(`${spanType}Span`) : this.spans[spanType];\n            if (spanVal) {\n                return spanVal;\n            }\n            throw new Error(`no span value found with the given type of [${spanType}]`);\n        };\n\n        /**\n         * Get cell element.\n         *\n         * @return {HTMLElement} cell element\n         */\n        this.getElement = () => {\n            return this.element;\n        };\n\n        // create a new cell element if no cellElement argument is given with constructor function\n        if (!cellElement) {\n            this.element = document.createElement('td');\n        }\n\n        /**\n         * Add attribute to cell element.\n         *\n         * This function have the ability to add/remove attributes from cell element.\n         * All attributes modified with this function will be cached with their before value for an easy reset on demand.\n         *\n         * @param {string} attributeKey attribute name in camelCase format, for sub-keys, use dot object notation\n         * @param {any} attributeValue attribute value\n         * @param {boolean} [append=false] append the value or replace it\n         * @param {string} [glue=,] glue to join attribute value if append option is enabled\n         */\n        this.setAttribute = (attributeKey, attributeValue, append = false, glue = ',') => {\n            let defaultVal = this.getElement()[attributeKey];\n\n            // if attribute value is a function or an object, it means we pulled a whole declaration instead of only inline attribute values, in that case, use getAttribute to get only inline values related to that attribute\n            if (typeof defaultVal === 'function' || typeof defaultVal === 'object') {\n                defaultVal = this.getElement().getAttribute(attributeKey);\n            }\n\n            // if there is already a default value defined, use that instead\n            if (this.modifications[attributeKey]) {\n                defaultVal = this.modifications[attributeKey].default;\n            }\n\n            let currentVal = defaultVal;\n\n            // join attributes\n            if (append) {\n                currentVal += `${currentVal}${glue}${attributeValue}`;\n            } else {\n                currentVal = attributeValue;\n            }\n\n            this.modifications[attributeKey] = {\n                value: currentVal,\n                default: defaultVal,\n            };\n\n            this.getElement()[attributeKey] = currentVal;\n        };\n\n        /**\n         * Set row/colspan for cell.\n         *\n         * @param {string} spanType span type\n         * @param {number} value value to assign to span\n         * @return {boolean} if any space left to render the element\n         */\n        this.setSpan = (spanType, value) => {\n            // working on main cell\n            if (this.referenceObject === null) {\n                const valueToApply = this.getSpan(spanType) - value < 0 ? this.getSpan(spanType) : value;\n\n                this.setAttribute(`${spanType}Span`, valueToApply);\n\n                // calculate remaining cells amount to merge in this span type\n                this.remainingSpans[spanType] = this.getSpan(spanType) - valueToApply;\n\n                // set visibility of connected merge group cells to false to not render them since we added necessary span values to main cell which will leak into their position\n                for (let mc = 0; mc < valueToApply - 1; mc += 1) {\n                    if (this.mergedCells[spanType] && this.mergedCells[spanType][mc]) {\n                        this.mergedCells[spanType][mc].setMergedRenderStatus(false);\n                    }\n                }\n\n                return true;\n            }\n            // working on reference\n\n            if (!this.getMergedRenderStatus()) {\n                return false;\n            }\n\n            const remainingVal = this.referenceObject.remainingSpans[spanType];\n\n            // no space left to put cell\n            if (remainingVal === 0) {\n                return false;\n            }\n\n            const valueToApply = remainingVal - value < 0 ? remainingVal : value;\n\n            const remainingParentSpans = remainingVal - valueToApply;\n            this.referenceObject.remainingSpans[spanType] = remainingParentSpans;\n\n            this.setAttribute(`${spanType}Span`, valueToApply);\n\n            // change render status of remaining connected merge cells\n            if (remainingParentSpans !== 0) {\n                const totalConnectedCells = this.referenceObject.mergedCells[spanType].length;\n                const startIndex = totalConnectedCells - remainingVal + 1;\n                const endIndex = startIndex + valueToApply - 1;\n\n                for (let mc = startIndex; mc < endIndex; mc += 1) {\n                    this.mergedCells[spanType][mc].setMergedRenderStatus(false);\n                }\n            }\n\n            return true;\n        };\n\n        /**\n         * Reset a modified attribute to its default value\n         *\n         * @param {string} attributeKey attribute name\n         */\n        this.resetAttribute = (attributeKey) => {\n            if (this.modifications[attributeKey]) {\n                this.getElement()[attributeKey] = this.modifications[attributeKey].default;\n                this.modifications[attributeKey] = undefined;\n            }\n        };\n\n        /**\n         * Reset all modified attributes of cell element to their default values.\n         */\n        this.resetAllAttributes = () => {\n            // eslint-disable-next-line array-callback-return\n            Object.keys(this.modifications).map((k) => {\n                if (Object.prototype.hasOwnProperty.call(this.modifications, k)) {\n                    this.resetAttribute(k);\n                }\n            });\n        };\n\n        return {\n            getElement: this.getElement,\n            el: this.element,\n            setAttribute: this.setAttribute,\n            resetAllAttributes: this.resetAllAttributes,\n            getSpan: this.getSpan,\n            setSpan: this.setSpan,\n            mergedCells: this.mergedCells,\n            setMergedRenderStatus: this.setMergedRenderStatus,\n            getMergedRenderStatus: this.getMergedRenderStatus,\n        };\n    }\n\n    CellObject.spanTypes = { row: 'row', column: 'col' };\n\n    /**\n     * Object implementation for table element operations.\n     *\n     * @param {HTMLElement} tableEl table element\n     * @return {Object} instance\n     * @class\n     */\n    function TableObject(tableEl) {\n        /**\n         * Table element.\n         *\n         * @private\n         * @type {HTMLElement}\n         */\n        this.tableElement = tableEl;\n\n        /**\n         * Parsed table object.\n         *\n         * @private\n         * @type {Array}\n         */\n        this.parsedTable = [];\n\n        /**\n         * An array of created table rows elements that are id'd according to their index in array.\n         *\n         * @type {Array}\n         */\n        this.rowCache = [];\n\n        /**\n         * Original table elements minus the cells.\n         *\n         * @type {Object}\n         * @private\n         */\n        this.originals = { rows: [] };\n\n        /**\n         * Row colors of original table.\n         *\n         * @type {{even: string, header: string, odd: string}}\n         */\n        this.rowColors = {\n            header: null,\n            even: null,\n            odd: null,\n        };\n\n        /**\n         * Add cell to parsed array.\n         *\n         * @private\n         * @param {number} r row id\n         * @param {number} c column id\n         * @param {CellObject} cellObject cell object to add to parsed array\n         */\n        this.addToParsed = (r, c, cellObject) => {\n            if (!this.parsedTable[r]) {\n                this.parsedTable[r] = [];\n            }\n\n            this.parsedTable[r][c] = cellObject;\n        };\n\n        /**\n         * Assign table cells into row and column numbers.\n         *\n         * @private\n         */\n        this.parseTable = () => {\n            const rows = Array.from(this.tableElement.querySelectorAll('tr'));\n\n            // filter rows who are marked as ignored\n            rows.filter((rowEl) => {\n                return rowEl.dataset.wptbResponsiveIgnore !== 'true';\n                // eslint-disable-next-line array-callback-return\n            }).map((r, ri) => {\n                // cache original rows for future use\n                this.originals.rows.push(r);\n\n                const cells = Array.from(r.querySelectorAll('td'));\n\n                let currentIndex = 0;\n                // eslint-disable-next-line array-callback-return\n                cells.map((c, ci) => {\n                    const currentCellObject = new CellObject(c);\n                    this.addToParsed(ri, currentIndex, currentCellObject);\n                    currentIndex += 1;\n\n                    const spanRow = currentCellObject.getSpan(CellObject.spanTypes.row);\n                    const spanCol = currentCellObject.getSpan(CellObject.spanTypes.column);\n\n                    if (spanRow > 1) {\n                        for (let sr = 1; sr < spanRow; sr += 1) {\n                            const referenceCell = new CellObject(c, currentCellObject);\n                            currentCellObject.mergedCells.row.push(referenceCell);\n                            this.addToParsed(ri + sr, ci, referenceCell);\n                        }\n                    }\n                    if (spanCol > 1) {\n                        for (let sc = 1; sc < spanCol; sc += 1) {\n                            const referenceCell = new CellObject(c, currentCellObject);\n                            currentCellObject.mergedCells.column.push(referenceCell);\n                            this.addToParsed(ri, currentIndex, referenceCell);\n                            currentIndex += 1;\n                        }\n                    }\n                });\n            });\n            this.parseRowColors(rows);\n        };\n\n        /**\n         * Parse row colors of original table for futures uses.\n         *\n         * @param {Array<HTMLElement>} rows html row elements\n         * @private\n         */\n        this.parseRowColors = (rows) => {\n            if (!rows || rows.length <= 0) {\n                return;\n            }\n\n            // get row colors if they are defined as datasets on table element\n            const headerDatasetColor = this.tableElement.dataset.wptbHeaderBackgroundColor;\n            const evenRowDatasetColor = this.tableElement.dataset.wptbEvenRowBackgroundColor;\n            const oddRowDatasetColor = this.tableElement.dataset.wptbOddRowBackgroundColor;\n\n            // header row color\n            this.rowColors.header =\n                headerDatasetColor !== undefined\n                    ? headerDatasetColor\n                    : rows[0].style.backgroundColor === ''\n                    ? null\n                    : rows[0].style.backgroundColor;\n\n            // calculate needed number of rows to get even and odd row background colors\n            const rowsNeeded = rows.length / 3 >= 1 ? 0 : rows.length === 1 ? 2 : (rows.length - 1) % 2;\n\n            // create additional rows and add them to table to get their row background colors since table row count may be lower to get even/odd rows\n            for (let rn = 0; rn < rowsNeeded; rn += 1) {\n                const tempRow = document.createElement('tr');\n                this.tableElement.querySelector('tbody').appendChild(tempRow);\n                rows.push(tempRow);\n            }\n\n            // even & odd row colors\n            // dataset colors have priority over colors gathered from computed row styles\n            this.rowColors.even = evenRowDatasetColor || getComputedStyle(rows[1]).backgroundColor;\n            this.rowColors.odd = evenRowDatasetColor ? oddRowDatasetColor : getComputedStyle(rows[2]).backgroundColor;\n\n            // remove created rows from DOM\n            for (let r = 0; r < rowsNeeded; r += 1) {\n                rows[rows.length - (r + 1)].remove();\n            }\n        };\n\n        /**\n         * Add a row to the table.\n         *\n         * @param {Array} classList an array of class names to be added to row\n         * @param {boolean} fromOriginals use rows from original table instead of creating a new one\n         * @param {number} originalIndex original row index\n         */\n        this.addRow = (classList, fromOriginals = false, originalIndex = 0) => {\n            if (!Array.isArray(classList)) {\n                // eslint-disable-next-line no-param-reassign\n                classList = [classList];\n            }\n\n            const tableBody = this.tableElement.querySelector('tbody');\n            let tempRow;\n\n            if (!fromOriginals) {\n                const range = document.createRange();\n                range.setStart(tableBody, 0);\n                // eslint-disable-next-line prefer-destructuring\n                tempRow = range.createContextualFragment(`<tr class=\"${classList.join(' ')}\"></tr>`).childNodes[0];\n            } else {\n                tempRow = this.originals.rows[originalIndex];\n            }\n\n            // add row to table body\n            tableBody.appendChild(tempRow);\n\n            // cache row for future use\n            this.rowCache.push(tempRow);\n\n            return { el: tempRow, id: this.rowCache.length - 1 };\n        };\n\n        /**\n         * Clear the contents of table element.\n         */\n        this.clearTable = () => {\n            // clear row cache\n            this.rowCache = [];\n\n            // clear children of `tbody` element\n            this.tableElement.querySelector('tbody').innerHTML = '';\n        };\n\n        /**\n         * Get the table cell at specified row-column location.\n         *\n         * As in arrays, row and column numbering starts from number 0.\n         *\n         * @param {number} r row number\n         * @param {number} c column number\n         * @param {boolean} returnObject return object instead of HTMLElement\n         * @return {HTMLElement | null | CellObject} element if address is possible, null if not\n         */\n        this.getCell = (r, c, returnObject = false) => {\n            try {\n                if (this.parsedTable[r][c]) {\n                    if (returnObject) {\n                        return this.parsedTable[r][c];\n                    }\n                    return this.parsedTable[r][c].el;\n                }\n            } catch (e) {\n                // eslint-disable-next-line no-console\n                logToConsole(`no cell found at the given address of [${r}-${c}]`, 'warn');\n                return null;\n            }\n            // eslint-disable-next-line no-console\n            logToConsole(`no cell found at the given address of [${r}-${c}]`, 'warn');\n            return null;\n        };\n\n        /**\n         * Append html element to a cached row.\n         *\n         * @param {HTMLElement} el element\n         * @param {number} rowId if of row in row cache\n         */\n        this.appendElementToRow = (el, rowId) => {\n            const cachedRow = this.rowCache[rowId];\n\n            if (el && cachedRow) {\n                cachedRow.appendChild(el);\n            }\n        };\n\n        this.getParsedTable = () => {\n            return this.parsedTable;\n        };\n\n        this.parseTable();\n\n        return {\n            addRow: this.addRow,\n            clearTable: this.clearTable,\n            getCell: this.getCell,\n            appendElementToRow: this.appendElementToRow,\n            el: this.tableElement,\n            rowColors: this.rowColors,\n            getParsedTable: this.getParsedTable,\n        };\n    }\n\n    // default options for responsive class\n    const responsiveClassDefaultOptions = {\n        query: '.wptb-preview-table',\n    };\n\n    /**\n     * Class for handling operations related to responsive functionalities of tables.\n     *\n     * @class\n     * @param {Object} options options object\n     */\n    function ResponsiveFront(options = {}) {\n        // merge default options with user sent options\n        this.options = { ...responsiveClassDefaultOptions, ...options };\n\n        this.elements = Array.from(document.querySelectorAll(this.options.query));\n\n        this.elementObjects = this.elements.map((e) => {\n            return {\n                el: e,\n                tableObject: new TableObject(e),\n            };\n        });\n\n        /**\n         * Get responsive directives of table element.\n         *\n         * @private\n         * @param {HTMLElement} el table element\n         * @return {Object | null} JSON representation of the directive element, if not available, null will be returned\n         */\n        this.getDirective = (el) => {\n            const directiveString = el.dataset.wptbResponsiveDirectives;\n\n            if (!directiveString) {\n                return null;\n            }\n\n            return JSON.parse(atob(directiveString));\n        };\n\n        /**\n         * Scroll operation related adjustments to responsive process.\n         *\n         * @param {Node} tableElement table element\n         * @param {boolean} revertToOriginal revert to original state\n         */\n        const scrollOperations = (tableElement, revertToOriginal) => {\n            const scrollFunctionalityStatus = tableElement.dataset.wptbHorizontalScrollStatus;\n            \n\n            if (scrollFunctionalityStatus) {\n                const matrixContainer = tableElement.parentNode;\n                if (revertToOriginal) {\n                    const storedMaxWidth = tableElement.dataset.wptbTableContainerMaxWidth;\n\n                    matrixContainer.style.width = `${storedMaxWidth}px`;\n                } else {\n                    matrixContainer.style.width = '';\n                }\n            }\n        };\n\n        /**\n         * Rebuild table in auto mode.\n         *\n         * Main characteristic of auto mode is table is rebuilt by stacking rows/columns on top of each other, leaving minimal effort from user to create a responsive table at breakpoints.\n         *\n         * @param {HTMLElement} tableEl table element\n         * @param {string} sizeRange range id for current screen size\n         * @param {Object} autoOption mode options\n         * @param {TableObject} tableObj table object\n         */\n        this.autoBuild = (tableEl, sizeRange, autoOption, tableObj) => {\n            // base options\n            const direction = autoOption.cellStackDirection[sizeRange];\n            // eslint-disable-next-line prefer-destructuring\n            const topRowAsHeader = autoOption.topRowAsHeader[sizeRange];\n            const cellsPerRow = autoOption.cellsPerRow[sizeRange];\n\n            // new options\n            const staticTopRow = autoOption.staticTopRow ? autoOption.staticTopRow[sizeRange] : false;\n            const repeatMergedHeader =\n                // check for undefined for backward compatibility of older tables\n                /* eslint-disable no-nested-ternary */\n                autoOption.repeatMergedHeader === undefined || autoOption.repeatMergedHeader[sizeRange] === true\n                    ? topRowAsHeader\n                        ? autoOption.repeatMergedHeader\n                            ? autoOption.repeatMergedHeader[sizeRange]\n                            : true\n                        : false\n                    : false;\n            /* eslint-enable no-nested-ternary */\n\n            tableObj.clearTable();\n\n            if (sizeRange === 'desktop') {\n                scrollOperations(tableEl, true);\n                this.buildDefault(tableObj);\n            } else {\n                scrollOperations(tableEl, false);\n                this.autoDirectionBuild(\n                    tableObj,\n                    direction,\n                    topRowAsHeader,\n                    staticTopRow,\n                    cellsPerRow,\n                    repeatMergedHeader,\n                );\n            }\n        };\n\n        /**\n         * Convert TableObject's parsed data to Cell structure for transformation.\n         *\n         * @param {TableObject} tableObj table object\n         * @return {Array<Array<Object>>} parsed table as Cell[][]\n         */\n        this.convertTableObjectToCells = (tableObj) => {\n            const parsedTable = tableObj.getParsedTable();\n\n            const rowCount = parsedTable.length;\n            const colCount = parsedTable.reduce((max, row) => Math.max(max, row.length), 0);\n\n            const tableRec = {};\n            const futColInit = {};\n\n            for (let i = 0; i < rowCount; i++) {\n                const row = parsedTable[i];\n                tableRec[i] = tableRec[i] || {};\n                let col = futColInit[i] || 0;\n                for (let j = 0; j < row.length; j++) {\n                    const cell = row[j];\n\n                    const colSpan = cell.el.colSpan;\n                    const rowSpan = cell.el.rowSpan;\n\n                    tableRec[i][col] = {\n                        value: cell,\n                        rowSpan,\n                        colSpan,\n                        hidden: false,\n                        col: col,\n                        row: i,\n                        shadow: false,\n                        originalRow: i,\n                        originalCol: col,\n                    };\n\n                    if (colSpan > 1 || rowSpan > 1) {\n                        for (let l = 0; l < rowSpan; l++) {\n                            for (let k = 0; k < colSpan; k++) {\n                                if (l === 0 && k === 0) continue;\n                                tableRec[i + l] = tableRec[i + l] || {};\n                                tableRec[i + l][col + k] = {\n                                    rowSpan: 1,\n                                    colSpan: 1,\n                                    hidden: true,\n                                    col: col + k,\n                                    row: i + l,\n                                    shadow: false,\n                                    originalRow: i + l,\n                                    originalCol: col + k,\n                                };\n                            }\n                        }\n                    }\n\n                    if (rowSpan > 1 && col === 0) {\n                        for (let l = 1; l < rowSpan; l++) {\n                            futColInit[i + l] = colSpan;\n                        }\n                    }\n\n                    col += colSpan;\n                }\n            }\n            const finalTable = [];\n            for (let i = 0; i < rowCount; i++) {\n                const row = [];\n                for (let j = 0; j < colCount; j++) {\n                    row.push(tableRec[i][j]);\n                }\n                finalTable.push(row);\n            }\n\n            return finalTable;\n        };\n\n        /**\n         * Transform table according to configuration.\n         *\n         * @param {Array<Array<Object>>} table parsed table as Cell[][]\n         * @param {Object} config transformation configuration\n         * @return {Array<Array<Object>>} transformed table\n         */\n        this.transformTable = (table, config) => {\n            const { transpose, repeatFirst, columnCount } = config;\n            if (transpose) {\n                const newTable = Array.from({ length: table[0].length }, () => []);\n                for (let r = 0; r < table[0].length; r++) {\n                    for (let c = 0; c < table.length; c++) {\n                        newTable[r][c] = table[c][r];\n                        const rowSpan = newTable[r][c].rowSpan;\n                        const colSpan = newTable[r][c].colSpan;\n                        newTable[r][c].rowSpan = colSpan;\n                        newTable[r][c].colSpan = rowSpan;\n                    }\n                }\n                table = newTable;\n            }\n\n            const oldTable = table;\n            table = [];\n\n            for (let r = 0; r < oldTable.length; r++) {\n                const row = [];\n                for (let c = 0; c < oldTable[r].length; c++) {\n                    row.push({\n                        ...oldTable[r][c],\n                    });\n                }\n                table.push(row);\n            }\n\n            if (columnCount >= table[0].length) {\n                return table;\n            }\n\n            const heads = {};\n            let loopInit = 0;\n\n            const isHeadActive = repeatFirst && table.length > 1;\n\n            if (isHeadActive) {\n                let maxColspan = 0;\n                loopInit = 1;\n                table.forEach((cells, idx) => {\n                    const cell = cells[0];\n                    heads[idx] = {\n                        cell,\n                        colspan: cell.colSpan,\n                    };\n                    maxColspan = Math.max(maxColspan, cell.colSpan);\n                });\n                if (maxColspan >= columnCount) {\n                    return table;\n                }\n            }\n\n            const subRowOfRow = {};\n\n            for (let r = 0; r < table.length; r++) {\n                if (!isHeadActive) {\n                    subRowOfRow[r] = { filled: 0, rows: [[]] };\n                } else {\n                    subRowOfRow[r] = { filled: heads[r].colspan, rows: [[heads[r].cell]] };\n                }\n            }\n\n            for (let r = 0; r < table.length; r++) {\n                const cells = table[r];\n                const subRowObj = subRowOfRow[r];\n                let subRow = subRowObj.rows[0];\n                for (let c = loopInit; c < cells.length; c++) {\n                    const cell = cells[c];\n                    subRow.push(cell);\n\n                    const colspan = cell.colSpan;\n                    const left = columnCount - subRowOfRow[r].filled;\n                    const spaceUsed = Math.min(colspan, left);\n                    if (spaceUsed === 0) {\n                        console.log('Space used is 0');\n                    }\n                    subRowObj.filled += 1;\n                    if (spaceUsed < colspan) {\n                        cell.colSpan = spaceUsed;\n                        const fillerProps = {\n                            ...cell,\n                            colSpan: colspan - spaceUsed,\n                            rowSpan: cell.rowSpan,\n                            hidden: false,\n                            shadow: true,\n                        };\n                        table[r][c + spaceUsed] = fillerProps;\n                    }\n\n                    if (subRow.length === columnCount) {\n                        subRow = [];\n                        subRowObj.filled = 0;\n                        subRowObj.rows.push(subRow);\n                        if (isHeadActive) {\n                            subRowObj.filled = heads[r].colspan;\n                            subRow.push(heads[r].cell);\n                        }\n                    }\n                }\n            }\n\n            const isEdgeRow = {};\n            const newTable = [];\n\n            const subRowCount = subRowOfRow[0].rows.length;\n            for (let sr = 0; sr < subRowCount; sr++) {\n                for (let r = 0; r < table.length; r++) {\n                    const subRow = subRowOfRow[r].rows[sr];\n                    if (subRow.length > 1 || !isHeadActive) {\n                        newTable.push(subRow);\n                    }\n                    if (newTable.length % table.length === 0 && newTable.length > 0) {\n                        isEdgeRow[newTable.length - 1] = true;\n                    }\n                }\n            }\n            return newTable;\n        };\n\n        /**\n         * Build table from Cell structure.\n         *\n         * @param {Array<Array<Object>>} tableData transformed table data\n         * @param {TableObject} tableObj table object for building\n         */\n        this.buildTableFromCells = (tableData, tableObj) => {\n            for (let i = 0; i < tableData.length; i++) {\n                const rowObj = tableObj.addRow('wptb-row');\n                for (let j = 0; j < tableData[i].length; j++) {\n                    const cellData = tableData[i][j];\n                    if (cellData.hidden) {\n                        continue;\n                    }\n\n                    let cellEl = cellData.value?.el;\n                    if (!cellEl) {\n                        cellEl = document.createElement('td');\n                    } else {\n                        cellEl = cellEl.cloneNode(true);\n                        if (cellData.shadow) {\n                            cellEl.innerHTML = '';\n                        }\n                        let bg = cellEl.style.backgroundColor || cellEl.style.background;\n                        if (cellData.originalRow === 0) {\n                            bg ||= tableObj.rowColors.header || tableObj.rowColors.odd;\n                        } else if (cellData.originalRow % 2 === 0) {\n                            bg ||= tableObj.rowColors.even;\n                        } else {\n                            bg ||= tableObj.rowColors.odd;\n                        }\n                        cellEl.style.backgroundColor = bg;\n                    }\n                    cellEl.colSpan = cellData.colSpan;\n                    cellEl.rowSpan = cellData.rowSpan;\n                    tableObj.appendElementToRow(cellEl, rowObj.id);\n                }\n            }\n        };\n\n        /**\n         * Rebuild table with a direction to read cells.\n         *\n         * Direction in question in here is either by row or column:\n         * * row: cells will be read row by row, in each row starting from the first column\n         * * column: cells will be read column by column, in each column starting from the first row of the table\n         *\n         * @param {TableObject} tableObj table object\n         * @param {string} direction direction to read cells, possible options [row, column]\n         * @param {boolean} topRowAsHeader use top row as header\n         * @param {boolean} staticTopRow use top row as static\n         * @param {number} cellsPerRow cells per row\n         * @param {boolean} repeatMergedHeader repeat merged top header if top row as header option is enabled\n         */\n        this.autoDirectionBuild = (\n            tableObj,\n            direction,\n            topRowAsHeader = false,\n            staticTopRow = false,\n            cellsPerRow = 1,\n            repeatMergedHeader = true,\n        ) => {\n            // Build transform configuration\n            const transformConfig = {\n                transpose: direction !== 'column',\n                repeatFirst: topRowAsHeader,\n                columnCount: cellsPerRow + (topRowAsHeader ? 1 : 0),\n            };\n\n            // Convert TableObject's parsed data to Cell structure for transformation\n            const parsedTable = this.convertTableObjectToCells(tableObj);\n\n            // Transform the table according to configuration\n            const transformedTable = this.transformTable(parsedTable, transformConfig);\n\n            // Build the new table from transformed cells\n            this.buildTableFromCells(transformedTable, tableObj);\n        };\n\n        /**\n         * Build table in its default form.\n         *\n         * Default form of table is the layout it has in desktop breakpoint.\n         *\n         * @param {TableObject} tableObj table object\n         */\n        this.buildDefault = (tableObj) => {\n            const parsedTable = tableObj.getParsedTable();\n            const rows = parsedTable.length;\n            const columns = parsedTable.reduce((max, row) => Math.max(max, row.length), 0);\n\n            for (let r = 0; r < rows; r += 1) {\n                const rowId = tableObj.addRow('', true, r).id;\n                for (let c = 0; c < columns; c += 1) {\n                    const tempCell = tableObj.getCell(r, c, true);\n\n                    // only render cell if a valid cell is found and it is not a reference\n                    if (tempCell && tempCell.referenceObject === null) {\n                        // reset all modified attributes of cell to their default values\n                        tempCell.resetAllAttributes();\n                        tableObj.appendElementToRow(tempCell.getElement(), rowId);\n                    }\n                }\n            }\n        };\n\n        /**\n         * Calculate range id for given size value.\n         *\n         * @param {number} val value\n         * @param {Object} stops an object containing stop ids as keys and respective sizes as values\n         * @return {string} range id\n         */\n        this.calculateRangeId = (val, stops) => {\n           let rangeId = 'desktop';\n           if (val <= stops.mobile.width) {\n            rangeId = 'mobile';\n           } else if (val <= stops.tablet.width) {\n            rangeId = 'tablet';\n           }\n           return rangeId;\n        };\n\n        /**\n         * Status of responsive enabled property.\n         *\n         * This property is the main switch whether to continue responsive operations or not. For breakpoint related enabled statuses, related properties should be checked\n         *\n         * @param {Object} directive table responsive directive\n         * @return {boolean} responsive enabled status\n         */\n        const isMainResponsiveEnabled = (directive) => {\n            return directive ? directive.responsiveEnabled : false;\n        };\n\n        /**\n         * Whether current responsive breakpoint enabled for responsive operations.\n         *\n         * @param {Object} directive table responsive directive\n         * @param {number} size relative size\n         */\n        const isCurrentBreakpointEnabled = (directive, size) => {\n            const sizeRangeId = this.calculateRangeId(size, directive.breakpoints);\n\n            if (sizeRangeId === 'desktop') {\n                return false;\n            }\n\n            const mode = directive.responsiveMode;\n            const modeOptions = directive.modeOptions[mode];\n\n            return modeOptions.disabled && !modeOptions.disabled[sizeRangeId];\n        };\n\n        /**\n         * Rebuild table according to its responsive directives.\n         *\n         * @private\n         * @param {HTMLElement} el table element\n         * @param {number} size size in pixels\n         * @param {TableObject} tableObj table object instance\n         * @throws An error will be given for invalid mode name\n         */\n        this.rebuildTable = (el, size, tableObj) => {\n            const directive = this.getDirective(el);\n            if (!directive) {\n                return;\n            }\n            if (!isMainResponsiveEnabled(directive)) {\n                // this.buildDefault(tableObj);\n                return;\n            }\n\n            const mode = directive.responsiveMode;\n\n            // main build logic for different responsive modes should be named in the format of `{modeName}Build` to automatically call the associated function from here\n            const buildCallable = this[`${mode}Build`];\n\n            if (!size) {\n                // eslint-disable-next-line no-param-reassign\n                size = el.getBoundingClientRect().width;\n            }\n\n            const sizeRangeId = this.calculateRangeId(size, directive.breakpoints);\n\n            if (!buildCallable) {\n                throw new Error(`No build mode named as [${mode}] found.`);\n            }\n            const modeOptions = directive.modeOptions[mode];\n\n            // if current breakpoint is disabled, render default table instead\n            if (!isCurrentBreakpointEnabled(directive, size)) {\n                tableObj.clearTable();\n                this.buildDefault(tableObj);\n            } else {\n                buildCallable.call(this, el, sizeRangeId, modeOptions, tableObj);\n            }\n\n            // eslint-disable-next-line no-undef\n            WPTB_RecalculateIndexes(el);\n            const tabEvent = new CustomEvent('table:rebuilt', {\n                detail: {\n                    sizeRangeId,\n                    topRowAsHeader: directive.modeOptions[mode].topRowAsHeader,\n                },\n            });\n            el.dispatchEvent(tabEvent);\n\n            // add html indicators to target table\n            if (el && sizeRangeId) {\n                el.dataset.wptbBreakpoint = sizeRangeId;\n            }\n        };\n\n        /**\n         * Calculate inner size which will be used to decide breakpoint operations.\n         *\n         * @param {HTMLTableElement} tableElement table element\n         * @return {number} inner size width\n         */\n        const calculateInnerSize = (tableElement) => {\n            let innerSize = document.body.clientWidth;\n\n            const directives = this.getDirective(tableElement);\n\n            // calculate size according to relative width directive\n            if (directives && directives.relativeWidth) {\n                switch (directives.relativeWidth) {\n                    case 'window':\n                        // eslint-disable-next-line no-param-reassign\n                        innerSize = document.body.clientWidth;\n                        break;\n                    case 'container':\n                        // get the size of the container table is in\n                        // eslint-disable-next-line no-param-reassign\n                        innerSize = tableElement.parentNode.parentNode.parentNode.clientWidth;\n                        break;\n                    default:\n                        // eslint-disable-next-line no-param-reassign\n                        innerSize = document.body.clientWidth;\n                        break;\n                }\n            }\n\n            return innerSize;\n        };\n\n        /**\n         * Rebuild tables with the given screen size.\n         *\n         * @param {number} size screen size\n         */\n        this.rebuildTables = (size) => {\n            // eslint-disable-next-line array-callback-return\n            this.elementObjects.map((o) => {\n                let innerSize = size;\n                if (!size) {\n                    // eslint-disable-next-line no-param-reassign\n                    innerSize = calculateInnerSize(o.el);\n                }\n                this.rebuildTable(o.el, innerSize, o.tableObject);\n            });\n        };\n\n        /**\n         * Get range id for target table.\n         *\n         * @param {HTMLTableElement} tableElement target table element\n         */\n        this.calculateRangeIdFromTable = (tableElement) => {\n            const directives = this.getDirective(tableElement);\n            const innerSize = calculateInnerSize(tableElement);\n\n            return this.calculateRangeId(innerSize, directives.breakpoints);\n        };\n\n        /**\n         * Check if current breakpoint is enabled for responsive operations.\n         *\n         * @param {HTMLTableElement} tableElement table element\n         */\n        this.isResponsiveEnabledForCurrentBreakpoint = (tableElement) => {\n            const tableDirectives = this.getDirective(tableElement);\n\n            return (\n                tableDirectives &&\n                isMainResponsiveEnabled(tableDirectives) &&\n                isCurrentBreakpointEnabled(tableDirectives, calculateInnerSize(tableElement))\n            );\n        };\n\n        /**\n         * Bind rebuilding of tables to window resize event.\n         */\n        this.bindRebuildToResize = () => {\n            // eslint-disable-next-line @wordpress/no-global-event-listener\n            window.addEventListener('resize', () => {\n                this.rebuildTables();\n            });\n        };\n\n        if (this.options.bindToResize) {\n            this.bindRebuildToResize();\n        }\n\n        /**\n         * Get cached table element object.\n         *\n         * @param {number} tableId table id to look for\n         * @return {null | Object} table element object\n         */\n        this.getTableElementObject = (tableId) => {\n            const [filteredObjects] = this.elementObjects.filter(({ el }) => {\n                const matrixWrapper = el.parentNode;\n\n                const regex = new RegExp(/^wptb-table-id-(\\d+)$/);\n                const matches = regex.exec(matrixWrapper.getAttribute('id'));\n\n                return matches && matches[1] && Number.parseInt(matches[1], 10) === tableId;\n            });\n\n            return filteredObjects;\n        };\n\n        /**\n         * Hide/show target row element for responsive calculations.\n         *\n         * @param {HTMLTableRowElement} rowElement row element\n         * @param {boolean} status status\n         */\n        this.markRowForResponsive = (rowElement, status) => {\n            // eslint-disable-next-line no-param-reassign\n            rowElement.dataset.wptbResponsiveIgnore = JSON.stringify(status);\n        };\n\n        return {\n            rebuildTables: this.rebuildTables,\n            rebuildTable: this.rebuildTable,\n            getDirective: this.getDirective,\n            calculateRangeId: this.calculateRangeId,\n            calculateRangeIdFromTable: this.calculateRangeIdFromTable,\n            isResponsiveEnabledForCurrentBreakpoint: this.isResponsiveEnabledForCurrentBreakpoint,\n            getTableElementObject: this.getTableElementObject,\n            markRowForResponsive: this.markRowForResponsive,\n            calculateInnerSize,\n            TableObject,\n        };\n    }\n\n    return ResponsiveFront;\n});\n","/**\n * Attach style pass component to global space.\n */\n(function attachToGlobal(globalKey, context, factory) {\n\t// eslint-disable-next-line no-param-reassign\n\tcontext[globalKey] = factory();\n\t// eslint-disable-next-line no-restricted-globals\n})('WPTB_StylePass', self || global, function factory() {\n\t/**\n\t * Style pass component\n\t * This component will be used to either let or block theme related styling to affect table styles.\n\t *\n\t * @class\n\t */\n\tfunction StylePass() {\n\t\tthis.options = { stylesheets: {} };\n\n\t\t/**\n\t\t * Maintain the same position of table container and insert shadow root container to exact same index.\n\t\t *\n\t\t * @param {HTMLElement} shadowRootContainer\n\t\t * @param {HTMLElement} tableContainer\n\t\t *\n\t\t */\n\t\tthis.insertShadowRoot = (shadowRootContainer, tableContainer) => {\n\t\t\tconst mainParent = tableContainer.parentNode;\n\t\t\tconst parentChildren = Array.from(mainParent.children);\n\t\t\tconst tableIndex = parentChildren.indexOf(tableContainer);\n\t\t\tconst upSibling = tableIndex - 1 > 0 ? null : parentChildren[tableIndex - 1];\n\t\t\tconst downSibling = tableIndex + 1 >= parentChildren.length ? null : parentChildren[tableIndex + 1];\n\n\t\t\tthis.prepareAllStylesheets(this.options.stylesheets, shadowRootContainer.shadowRoot);\n\t\t\tthis.borrowFromTheme(tableContainer);\n\n\t\t\tshadowRootContainer.shadowRoot.appendChild(tableContainer);\n\n\t\t\tif (upSibling) {\n\t\t\t\tupSibling.insertAdjacentElement('afterend', shadowRootContainer);\n\t\t\t} else if (downSibling) {\n\t\t\t\tdownSibling.insertAdjacentElement('beforebegin', shadowRootContainer);\n\t\t\t} else {\n\t\t\t\tmainParent.appendChild(shadowRootContainer);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Borrow some theme styles and reflect them to table.\n\t\t *\n\t\t * @param {HTMLElement} tableContainer table container element\n\t\t */\n\t\tthis.borrowFromTheme = (tableContainer) => {\n\t\t\tconst table = tableContainer.querySelector('table');\n\t\t\tconst { fontFamily } = getComputedStyle(table);\n\t\t\ttable.style.fontFamily = fontFamily;\n\t\t};\n\n\t\t/**\n\t\t * Initialize and start style pass.\n\t\t *\n\t\t * @param {Object} options style pass options\n\t\t */\n\t\tthis.init = (options) => {\n\t\t\tthis.options = { ...this.options, ...options };\n\t\t\tconst tableContainers = Array.from(document.querySelectorAll('div .wptb-table-container'));\n\n\t\t\tif (tableContainers.length > 0) {\n\t\t\t\ttableContainers.map(this.setupStylePass);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Check if style pass is enabled for current table.\n\t\t *\n\t\t * @param {HTMLElement} tableContainer table container\n\t\t * @return {string} status null for disabled, true for enabled\n\t\t */\n\t\tthis.checkTableEligibility = (tableContainer) => {\n\t\t\tconst table = tableContainer.querySelector('table');\n\t\t\treturn table ? this.options.settings.disableThemeStylesForAll || table.dataset.disableThemeStyles : false;\n\t\t};\n\n\t\t/**\n\t\t * Prepare containers for necessary style pass operations.\n\t\t *\n\t\t * @param {HTMLElement} tableContainer table container\n\t\t */\n\t\tthis.setupStylePass = (tableContainer) => {\n\t\t\t// abort if style pass is not enabled for table\n\t\t\tif (!this.checkTableEligibility(tableContainer)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst container = document.createElement('div');\n\t\t\tcontainer.classList.add('wptb-shadow-root-container');\n\n\t\t\tconst mainTable = tableContainer.querySelector('table');\n\n\t\t\tconst maxWidth = mainTable.dataset.wptbTableContainerMaxWidth;\n\n\t\t\tconst scrollStatus = mainTable.dataset.wptbHorizontalScrollStatus;\n\n\t\t\t// only add max-width to shadow root container if scroll functionality is disabled\n\t\t\tif (maxWidth && !scrollStatus) {\n\t\t\t\tcontainer.style.maxWidth = `${maxWidth}px`;\n\t\t\t}\n\n\t\t\tcontainer.attachShadow({ mode: 'open' });\n\n\t\t\tthis.insertShadowRoot(container, tableContainer);\n\t\t};\n\n\t\tthis.prepareAllStylesheets = (stylesheetsObj, root) => {\n\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\tObject.keys(stylesheetsObj).map((action) => {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(stylesheetsObj, action)) {\n\t\t\t\t\t// eslint-disable-next-line default-case\n\t\t\t\t\tswitch (action) {\n\t\t\t\t\t\tcase 'create':\n\t\t\t\t\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\t\t\t\t\tObject.keys(stylesheetsObj[action]).map((s) => {\n\t\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(stylesheetsObj[action], s)) {\n\t\t\t\t\t\t\t\t\tthis.prepareStylesheet(s, stylesheetsObj[action][s], root);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'copy':\n\t\t\t\t\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\t\t\t\t\tstylesheetsObj[action].map((query) => {\n\t\t\t\t\t\t\t\tthis.copyStylesheet(query, root);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Copy a stylesheet to current root.\n\t\t *\n\t\t * @param {string} query query to find stylesheet\n\t\t * @param {HTMLElement} root root\n\t\t */\n\t\tthis.copyStylesheet = (query, root) => {\n\t\t\tconst styleSheet = document.querySelector(query);\n\n\t\t\tif (styleSheet) {\n\t\t\t\troot.appendChild(styleSheet.cloneNode(true));\n\t\t\t}\n\t\t};\n\n\t\tthis.prepareStylesheet = (handler, url, root) => {\n\t\t\tconst linkElement = document.createElement('link');\n\t\t\tlinkElement.setAttribute('id', handler);\n\t\t\tlinkElement.setAttribute('href', url);\n\t\t\tlinkElement.setAttribute('rel', 'stylesheet');\n\t\t\tlinkElement.setAttribute('media', 'all');\n\n\t\t\troot.appendChild(linkElement);\n\t\t};\n\t}\n\n\treturn new StylePass();\n});\n","(function assignToGlobal(key, context, factory) {\n\tif (typeof exports === 'object' && typeof module !== 'undefined') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\tcontext[key] = factory();\n\t}\n\t// eslint-disable-next-line no-restricted-globals\n})('WPTB_LazyLoad', self || global, () => {\n\t/**\n\t * Lazy load animation.\n\t *\n\t * @param {Object} options options\n\t * @class\n\t */\n\tfunction LazyLoadAnimation(options) {\n\t\t/**\n\t\t * Default options.\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tconst defaults = {\n\t\t\tname: '',\n\t\t\tspeed: 8,\n\t\t\tstep: 10,\n\t\t\thooks: {},\n\t\t\tdirection: 'left',\n\t\t\tperspective: 1000,\n\t\t\tflashColor: '#FFFFFF',\n\t\t};\n\n\t\t// merged instance options\n\t\tconst instanceOptions = { ...defaults, ...options };\n\n\t\t/**\n\t\t * Style tag id for custom stylesheet rules.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tconst styleId = 'wptb-lazy-load-styles';\n\n\t\tconst bufferElementClass = 'wptb-lazy-load-buffer-element';\n\t\tconst bufferElementContainerClass = 'wptb-lazy-load-buffer-element-container';\n\n\t\t/**\n\t\t * Get instance related options.\n\t\t *\n\t\t * @return {Object} options\n\t\t */\n\t\tthis.getOptions = () => {\n\t\t\treturn { ...instanceOptions };\n\t\t};\n\n\t\t/**\n\t\t * Calculate animation duration relative to its supplied speed.\n\t\t *\n\t\t * @param {number} min minimum seconds\n\t\t * @param {number} max maximum seconds\n\t\t * @return {number} animation duration\n\t\t */\n\t\tthis.calculateDuration = (min = 0.1, max = 1) => {\n\t\t\treturn Math.max(min, max) - (Math.abs(max - min) / instanceOptions.step) * instanceOptions.speed;\n\t\t};\n\n\t\t/**\n\t\t * Calculate animation direction axis.\n\t\t *\n\t\t * @param {boolean} invert whether to invert axis\n\t\t *\n\t\t * @return {string} axis name\n\t\t */\n\t\tthis.calculateAnimationDirection = (invert = false) => {\n\t\t\tconst xAxis = ['left', 'right'];\n\t\t\tconst names = ['X', 'Y'];\n\t\t\tconst indexConstant = invert ? 1 : 0;\n\n\t\t\treturn xAxis.includes(instanceOptions.direction)\n\t\t\t\t? names[(0 + indexConstant) % 2]\n\t\t\t\t: names[(1 + indexConstant) % 2];\n\t\t};\n\n\t\t/**\n\t\t * Calculate a direction constant.\n\t\t *\n\t\t * @param {boolean} invert whether to invert constant\n\t\t *\n\t\t * @return {number} direction constant\n\t\t */\n\t\tthis.calculateDirectionConstant = (invert = false) => {\n\t\t\tconst positiveConstant = ['left', 'up'];\n\t\t\treturn (invert ? -1 : 1) * (positiveConstant.includes(this.getOptions().direction) ? 1 : -1);\n\t\t};\n\n\t\t/**\n\t\t * Get supplied user hook.\n\t\t *\n\t\t * @param {string} key hook name\n\t\t * @return {null | Function} user hook function\n\t\t */\n\t\tconst getHook = (key) => {\n\t\t\tif (Object.prototype.hasOwnProperty.call(instanceOptions.hooks, key)) {\n\t\t\t\tconst userHook = instanceOptions.hooks[key];\n\t\t\t\tif (typeof userHook === 'function') {\n\t\t\t\t\treturn userHook;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t/**\n\t\t * Call supplied user hook.\n\t\t *\n\t\t * @param {string} hookName hook name\n\t\t * @param {any} args arguments to call hook\n\t\t */\n\t\tconst callHook = (hookName, ...args) => {\n\t\t\tconst userHook = getHook(hookName);\n\t\t\tif (userHook) {\n\t\t\t\tuserHook.apply(this, args);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Delete instance.\n\t\t */\n\t\tconst cleanUp = () => {\n\t\t\tdelete this;\n\t\t};\n\n\t\t/**\n\t\t * Get buffer element.\n\t\t *\n\t\t * @param {HTMLElement} imgElement image element\n\t\t * @return {null | HTMLElement} buffer element\n\t\t */\n\t\tthis.getBufferElement = (imgElement) => {\n\t\t\tconst { parentNode } = imgElement;\n\t\t\treturn parentNode.querySelector(`.${bufferElementClass}`);\n\t\t};\n\n\t\t/**\n\t\t * Remove buffer element and associated options.\n\t\t *\n\t\t * @param {HTMLElement} imgElement image element\n\t\t */\n\t\tthis.removeBufferElement = (imgElement) => {\n\t\t\tconst bufferElement = this.getBufferElement(imgElement);\n\t\t\tif (bufferElement) {\n\t\t\t\tconst { parentNode } = bufferElement;\n\t\t\t\tparentNode.removeChild(bufferElement);\n\t\t\t\tparentNode.classList.remove(bufferElementContainerClass);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Add style element to document head.\n\t\t *\n\t\t * @param {string} content style content\n\t\t * @param {HTMLDocument} contentRoot content root\n\t\t */\n\t\tthis.addStylesheet = (content, contentRoot) => {\n\t\t\tlet lazyloadStyleSheet = contentRoot.querySelector(`style[id=\"${styleId}\"]`);\n\n\t\t\tif (!lazyloadStyleSheet) {\n\t\t\t\tlazyloadStyleSheet = contentRoot.createElement('style');\n\t\t\t\tlazyloadStyleSheet.id = styleId;\n\t\t\t\tlazyloadStyleSheet.type = 'text/css';\n\n\t\t\t\tcontentRoot.head.appendChild(lazyloadStyleSheet);\n\t\t\t}\n\n\t\t\tconst styleRules = document.createTextNode(content);\n\t\t\tlazyloadStyleSheet.innerHTML = '';\n\t\t\tlazyloadStyleSheet.appendChild(styleRules);\n\t\t};\n\n\t\t/**\n\t\t * Before animation base lifecycle hook.\n\t\t *\n\t\t * @param {HTMLElement} imgElement image element\n\t\t */\n\t\tthis.beforeAnimation = (imgElement) => {\n\t\t\tcallHook('beforeAnimation', imgElement);\n\t\t};\n\n\t\t/**\n\t\t * Animate element.\n\t\t *\n\t\t * @param {HTMLElement} imgElement image element\n\t\t */\n\t\tthis.animate = (imgElement) => {\n\t\t\tcallHook('animate', imgElement);\n\t\t};\n\n\t\t/**\n\t\t * After animation processes and cleanup.\n\t\t *\n\t\t * @param {HTMLElement} imgElement image element\n\t\t */\n\t\tthis.afterAnimation = (imgElement) => {\n\t\t\tcallHook('afterAnimation', imgElement);\n\t\t\tcleanUp();\n\t\t};\n\t}\n\n\t/**\n\t * Factory for lazy load animations.\n\t *\n\t * @param {Object} options factory options\n\t * @class\n\t */\n\tfunction LazyLoadAnimationFactory(options) {\n\t\tthis.getAnimation = (animationName, extraOptions = {}) => {\n\t\t\tif (options[animationName]) {\n\t\t\t\treturn new LazyLoadAnimation({ ...options[animationName], ...extraOptions });\n\t\t\t}\n\n\t\t\treturn new LazyLoadAnimation({});\n\t\t};\n\t}\n\n\t/**\n\t * Options for animation factory\n\t *\n\t * @type {Object}\n\t */\n\tconst factoryOptions = {\n\t\t/* eslint-disable no-param-reassign */\n\t\tnone: {\n\t\t\thooks: {\n\t\t\t\tanimate(imageElement) {\n\t\t\t\t\tthis.removeBufferElement(imageElement);\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tslideIn: {\n\t\t\thooks: {\n\t\t\t\tbeforeAnimation(imageElement) {\n\t\t\t\t\timageElement.parentNode.style.overflow = 'hidden';\n\n\t\t\t\t\timageElement.style.transform = `translate${this.calculateAnimationDirection()}(${\n\t\t\t\t\t\tthis.calculateDirectionConstant() * 100\n\t\t\t\t\t}%)`;\n\t\t\t\t},\n\t\t\t\tanimate(imageElement) {\n\t\t\t\t\tthis.removeBufferElement(imageElement);\n\t\t\t\t\timageElement.style.transition = `transform ${this.calculateDuration()}s ease-out`;\n\t\t\t\t\timageElement.style.transform = `translate${this.calculateAnimationDirection()}(0)`;\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tgrowSling: {\n\t\t\thooks: {\n\t\t\t\tbeforeAnimation(imageElement) {\n\t\t\t\t\timageElement.style.transform = 'scale(0.1)';\n\t\t\t\t},\n\t\t\t\tanimate(imageElement) {\n\t\t\t\t\tthis.removeBufferElement(imageElement);\n\t\t\t\t\timageElement.style.transition = `transform ${this.calculateDuration()}s cubic-bezier(0.68, -0.55, 0.27, 1.55)`;\n\t\t\t\t\timageElement.style.transform = 'scale(1)';\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tflash: {\n\t\t\thooks: {\n\t\t\t\tbeforeAnimation(imageElement) {\n\t\t\t\t\tconst flashElement = document.createElement('div');\n\t\t\t\t\tflashElement.classList.add('wptb-flash-element');\n\n\t\t\t\t\timageElement.parentNode.classList.add('wptb-lazy-load-buffer-element-container');\n\t\t\t\t\timageElement.insertAdjacentElement('afterend', flashElement);\n\n\t\t\t\t\tconst flashStyle = `@keyframes wptb-flash {0% {opacity:1;}100% {opacity: 0;}}  .wptb-flash-element {position: absolute; top: 0px; left: 0px; right: 0px; bottom: 0px; background-color: ${\n\t\t\t\t\t\tthis.getOptions().flashColor\n\t\t\t\t\t}}.wptb-flash-animation {animation: wptb-flash ${this.calculateDuration()}s  forwards ease-out}`;\n\t\t\t\t\tthis.addStylesheet(flashStyle, imageElement.ownerDocument);\n\t\t\t\t},\n\t\t\t\tanimate(imageElement) {\n\t\t\t\t\tthis.removeBufferElement(imageElement);\n\t\t\t\t\tconst flashElement = imageElement.parentNode.querySelector('.wptb-flash-element');\n\t\t\t\t\tif (flashElement) {\n\t\t\t\t\t\timageElement.parentNode.classList.add('wptb-lazy-load-buffer-element-container');\n\n\t\t\t\t\t\tflashElement.addEventListener('animationend', (e) => {\n\t\t\t\t\t\t\tif (e.animationName === 'wptb-flash') {\n\t\t\t\t\t\t\t\timageElement.parentNode.classList.remove('wptb-lazy-load-buffer-element-container');\n\t\t\t\t\t\t\t\tflashElement.remove();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tflashElement.classList.add('wptb-flash-animation');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tflip: {\n\t\t\thooks: {\n\t\t\t\tbeforeAnimation(imageElement) {\n\t\t\t\t\tconst parentWrapper = imageElement.parentNode;\n\t\t\t\t\tparentWrapper.classList.add('wptb-lazy-load-card-container');\n\t\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\t\tparentWrapper.parentNode?.classList.add('wptb-lazy-load-perspective-base');\n\n\t\t\t\t\timageElement.classList.add('wptb-lazy-load-card-back', 'wptb-lazy-load-hidden-backface');\n\n\t\t\t\t\tthis.getBufferElement(imageElement).classList.add(\n\t\t\t\t\t\t'wptb-lazy-load-hidden-backface',\n\t\t\t\t\t\t'wptb-lazy-load-card-front'\n\t\t\t\t\t);\n\n\t\t\t\t\tconst animationDirection = this.calculateAnimationDirection(true);\n\t\t\t\t\tconst rotationAmount = `${this.calculateDirectionConstant(true) * 180}deg`;\n\n\t\t\t\t\tconst styles = `.wptb-lazy-load-perspective-base{perspective: ${\n\t\t\t\t\t\tthis.getOptions().perspective\n\t\t\t\t\t}px;} .wptb-lazy-load-card-container{ transform-style: preserve-3d; transition: transform ${this.calculateDuration()}s ease-out;  } .wptb-lazy-load-card-container[data-wptb-card-flip='true']{transform: rotate${animationDirection}(${rotationAmount})} [data-wptb-card-flip='true'] .wptb-lazy-load-card-front svg{ animation: none !important;  opacity: 0.2;} .wptb-lazy-load-card-back { transform: rotate${animationDirection}(${rotationAmount})} .wptb-lazy-load-hidden-backface{backface-visibility: hidden;}`;\n\t\t\t\t\tthis.addStylesheet(styles, imageElement.ownerDocument);\n\t\t\t\t},\n\t\t\t\tanimate(imageElement) {\n\t\t\t\t\tconst parentWrapper = imageElement.parentNode;\n\t\t\t\t\tparentWrapper.addEventListener('transitionend', (e) => {\n\t\t\t\t\t\tif (e.propertyName === 'transform') {\n\t\t\t\t\t\t\tthis.removeBufferElement(imageElement);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparentWrapper.classList.remove('wptb-lazy-load-card-container', 'wptb-lazy-load-flip');\n\n\t\t\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\t\t\tparentWrapper.parentNode.classList.remove('wptb-lazy-load-perspective-base');\n\n\t\t\t\t\t\timageElement.classList.remove('wptb-lazy-load-card-back', 'wptb-lazy-load-hidden-backface');\n\t\t\t\t\t});\n\n\t\t\t\t\tparentWrapper.dataset.wptbCardFlip = 'true';\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t/* eslint-enable no-param-reassign */\n\t};\n\n\t/**\n\t * WPTB Lazy load functionality module.\n\t *\n\t * @class\n\t */\n\t// eslint-disable-next-line camelcase\n\tfunction WPTB_LazyLoad() {\n\t\t/**\n\t\t * Lazy load default options.\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tconst defaultOptions = {\n\t\t\t// this mode will be used to manually load image elements\n\t\t\tforceMode: false,\n\t\t};\n\n\t\t/**\n\t\t * Lazy load instance options.\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tlet options = {};\n\n\t\t/**\n\t\t * Scroll related cached data.\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tconst cachedScrollData = {\n\t\t\tlastYPosition: 0,\n\t\t};\n\n\t\t/**\n\t\t * All available table image elements.\n\t\t *\n\t\t * @type {Array}\n\t\t */\n\t\tconst allImages = [];\n\n\t\tconst bufferElementClass = 'wptb-lazy-load-buffer-element';\n\t\tconst bufferElementContainerClass = 'wptb-lazy-load-buffer-element-container';\n\n\t\tconst animationFactory = new LazyLoadAnimationFactory(factoryOptions);\n\n\t\t/**\n\t\t * Whether user scrolling down or up.\n\t\t *\n\t\t * @return {boolean} scrolling down or up\n\t\t */\n\t\tconst isGoingDown = () => {\n\t\t\treturn window.scrollY - cachedScrollData.lastYPosition >= 0;\n\t\t};\n\n\t\tlet animation = null;\n\n\t\t/**\n\t\t * Calculate visibility of image element depending on current position of page.\n\t\t *\n\t\t * @param {HTMLElement} imgElement image element\n\t\t * @param {number} currentYPos current position of page\n\t\t *\n\t\t * @return {boolean} is element visible or not\n\t\t */\n\t\tconst isElementVisible = (imgElement, currentYPos) => {\n\t\t\t// check position data of parent node instead of image element since a transformation affecting Y position of element might occurred\n\t\t\tconst { top, height, bottom } = imgElement.parentNode.getBoundingClientRect();\n\t\t\tconst { visibilityPercentage } = options;\n\n\t\t\tconst visibilityRangeTop = top + height * (visibilityPercentage / 100);\n\t\t\tconst visibilityRangeBottom = bottom - height * (visibilityPercentage / 100);\n\n\t\t\tconst visibilityVariable = isGoingDown() ? visibilityRangeTop : visibilityRangeBottom;\n\n\t\t\treturn visibilityVariable >= 0 && visibilityVariable <= currentYPos;\n\t\t};\n\n\t\t/**\n\t\t * Add a buffer element and associated options to image container.\n\t\t *\n\t\t * @param {HTMLElement} imgElement image element\n\t\t */\n\t\tconst addBufferElement = (imgElement) => {\n\t\t\tconst bufferElement = document.createElement('div');\n\t\t\tbufferElement.classList.add(bufferElementClass);\n\n\t\t\t// assign color to buffer element\n\t\t\tbufferElement.style.backgroundColor = options.backgroundColor;\n\n\t\t\tif (options.iconSvg) {\n\t\t\t\tbufferElement.innerHTML = `<div class=\"wptb-lazy-load-buffer-icon-wrapper wptb-plugin-filter-box-shadow-md\">${options.iconSvg}</div>`;\n\n\t\t\t\tconst svgIcon = bufferElement.querySelector('svg');\n\t\t\t\tconst iconWrapper = bufferElement.querySelector('.wptb-lazy-load-buffer-icon-wrapper');\n\n\t\t\t\t// assign icon size\n\t\t\t\ticonWrapper.style.width = `${options.iconSize}px`;\n\t\t\t\ticonWrapper.style.height = `${options.iconSize}px`;\n\n\t\t\t\t// assign icon animation related settings\n\t\t\t\ticonWrapper.dataset.wptbLazyLoadIconAnimation = options.iconAnimation;\n\n\t\t\t\tif (svgIcon) {\n\t\t\t\t\t// assign icon color\n\t\t\t\t\tsvgIcon.style.fill = options.iconColor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// insert buffer element adjacent to image element\n\t\t\timgElement.insertAdjacentElement('afterend', bufferElement);\n\n\t\t\timgElement.parentNode.classList.add(bufferElementContainerClass);\n\n\t\t\tanimation.beforeAnimation(imgElement);\n\t\t};\n\n\t\t/**\n\t\t * Function to call when image element is loaded.\n\t\t *\n\t\t * @param {Object} e event\n\t\t */\n\t\tconst imageElementLoadCallback = (e) => {\n\t\t\tconst imageElement = e.target;\n\n\t\t\tanimation.animate(imageElement);\n\n\t\t\timageElement.removeEventListener('load', imageElementLoadCallback);\n\n\t\t\tanimation.afterAnimation(imageElement);\n\t\t};\n\n\t\t/**\n\t\t * Process image element for visibility.\n\t\t *\n\t\t * @param {HTMLElement} imgElement image element\n\t\t * @param {number} currentYPos current position of page\n\t\t */\n\t\tconst processIndividualImageElement = (imgElement, currentYPos) => {\n\t\t\tif (options.forceMode || isElementVisible(imgElement, currentYPos)) {\n\t\t\t\tconst delayCallback = () => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\timageElementLoadCallback({ target: imgElement });\n\t\t\t\t\t}, options.delay * 1000);\n\t\t\t\t};\n\n\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\timgElement.dataset.wptbLazyLoadStatus = 'true';\n\n\t\t\t\timgElement.addEventListener('load', options.delay ? delayCallback : imageElementLoadCallback);\n\n\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\timgElement.src = imgElement.dataset.wptbLazyLoadTarget;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Update cached last scroll position.\n\t\t *\n\t\t * @param {number} position y position\n\t\t */\n\t\tconst updateLastScrollY = (position) => {\n\t\t\tcachedScrollData.lastYPosition = position;\n\t\t};\n\n\t\t/**\n\t\t * Process array of image elements for visibility.\n\t\t *\n\t\t * @param {Array} imgElements image elements array\n\t\t * @param {number} currentYPos current position of page\n\t\t * @param {boolean} firstTimeProcess whether process is run for the first time or not\n\t\t * @param {boolean} forceLoad whether to force load images or not with force mode enabled\n\t\t */\n\t\tconst processImageElements = (imgElements, currentYPos, firstTimeProcess = false, forceLoad = false) => {\n\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\timgElements\n\t\t\t\t.filter((element) => {\n\t\t\t\t\treturn element.dataset.wptbLazyLoadStatus === 'false';\n\t\t\t\t})\n\t\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\t\t.map((img) => {\n\t\t\t\t\t// updateBackgroundColor(img);\n\n\t\t\t\t\tif (firstTimeProcess) {\n\t\t\t\t\t\taddBufferElement(img);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!options.forceMode || forceLoad) {\n\t\t\t\t\t\tprocessIndividualImageElement(img, currentYPos);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tupdateLastScrollY(window.scrollY);\n\t\t};\n\n\t\t/**\n\t\t * Get window current y position.\n\t\t *\n\t\t * @return {number} y position\n\t\t */\n\t\tconst windowCurrentYPosition = () => {\n\t\t\treturn window.innerHeight;\n\t\t};\n\n\t\t/**\n\t\t * Get all image elements inside table.\n\t\t *\n\t\t * @param {Array} allTables table array\n\t\t * @return {Array} table image elements\n\t\t */\n\t\tconst getAllTableImages = (allTables) => {\n\t\t\treturn allTables.reduce((carry, tableElement) => {\n\t\t\t\tconst images = Array.from(tableElement.querySelectorAll('.wptb-lazy-load-img'));\n\t\t\t\tcarry.push(...images);\n\t\t\t\treturn carry;\n\t\t\t}, []);\n\t\t};\n\n\t\t/**\n\t\t * Assign lazy load functionality to table elements.\n\t\t */\n\t\tconst assignLazyLoadToElements = () => {\n\t\t\tconst tables = Array.from(document.querySelectorAll('.wptb-preview-table'));\n\n\t\t\t// tables under shadow roots\n\t\t\tconst shadowTables = Array.from(document.querySelectorAll('.wptb-shadow-root-container')).reduce(\n\t\t\t\t(carry, shadowRootContainer) => {\n\t\t\t\t\tconst table = shadowRootContainer.shadowRoot.querySelector('.wptb-preview-table');\n\t\t\t\t\tif (table) {\n\t\t\t\t\t\tcarry.push(table);\n\t\t\t\t\t}\n\t\t\t\t\treturn carry;\n\t\t\t\t},\n\t\t\t\t[]\n\t\t\t);\n\n\t\t\tconst allTables = [...tables, ...shadowTables];\n\t\t\tallImages.push(...getAllTableImages(allTables));\n\n\t\t\t// process image elements on window load\n\t\t\tprocessImageElements(allImages, windowCurrentYPosition(), true);\n\n\t\t\t// only bind to scroll event if force mode is not enabled\n\t\t\tif (!options.forceMode) {\n\t\t\t\t// eslint-disable-next-line @wordpress/no-global-event-listener\n\t\t\t\twindow.addEventListener(\n\t\t\t\t\t'scroll',\n\t\t\t\t\t() => {\n\t\t\t\t\t\tprocessImageElements(allImages, windowCurrentYPosition());\n\t\t\t\t\t},\n\t\t\t\t\t{ passive: true }\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Force load all images.\n\t\t */\n\t\tthis.forceLoadImages = () => {\n\t\t\tprocessImageElements(allImages, null, false, true);\n\t\t};\n\n\t\t/**\n\t\t * Initialize lazy load.\n\t\t *\n\t\t * @param {Object} initOptions options object\n\t\t */\n\t\tthis.init = (initOptions) => {\n\t\t\tif (initOptions && typeof initOptions === 'object') {\n\t\t\t\toptions = { ...defaultOptions, ...initOptions };\n\n\t\t\t\tif (options.enabled) {\n\t\t\t\t\tanimation = animationFactory.getAnimation(options.imageLoadAnimation, {\n\t\t\t\t\t\tspeed: options.imageLoadAnimationSpeed,\n\t\t\t\t\t\tdirection: options.imageLoadAnimationDirection,\n\t\t\t\t\t\tperspective: options.imageLoadAnimationPerspective,\n\t\t\t\t\t\t...options,\n\t\t\t\t\t});\n\t\t\t\t\tassignLazyLoadToElements();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t// eslint-disable-next-line camelcase\n\treturn new WPTB_LazyLoad();\n});\n","/* eslint-disable camelcase */\n(function assignToGlobal(key, context, factory) {\n\tcontext[key] = factory();\n\t// eslint-disable-next-line no-restricted-globals\n})('WPTB_ScrollManager', self || global, () => {\n\t/**\n\t * Scroll manager for WPTB.\n\t *\n\t * @param {Object} scrollOptions options\n\t * @class\n\t */\n\tfunction WPTB_ScrollManager(scrollOptions) {\n\t\tconst { frontendCalculationStatus } = scrollOptions;\n\n\t\t/**\n\t\t * Prepare tables for scroll functionality.\n\t\t *\n\t\t * @param {Node} tableElement table element\n\t\t */\n\t\tconst prepareTableForScroll = (tableElement) => {\n\t\t\tconst mainContainer = tableElement.parentNode.parentNode;\n\t\t\tconst matrixContainer = tableElement.parentNode;\n\n\t\t\tmainContainer.dataset.wptbHorizontalScrollStatus = 'true';\n\t\t\tconst storedMaxWidth = mainContainer.style.maxWidth;\n\t\t\tmainContainer.style.maxWidth = '';\n\n\t\t\tmatrixContainer.style.width = storedMaxWidth;\n\t\t};\n\n\t\t/**\n\t\t * Initialize scroll manager processes.\n\t\t */\n\t\tthis.init = () => {\n\t\t\tconst tableElements = Array.from(\n\t\t\t\tdocument.querySelectorAll('table[data-wptb-horizontal-scroll-status=true]')\n\t\t\t);\n\n\t\t\t// only start preparing tables for scroll functionality if backend didn't\n\t\t\t// main factor for that is if server didn't implement `mb_encode_numericentity` function\n\t\t\tif (frontendCalculationStatus) {\n\t\t\t\ttableElements.map(prepareTableForScroll);\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * @module WPTB_ScrollManager\n\t */\n\treturn WPTB_ScrollManager;\n});\n","/* eslint-disable */\ndocument.addEventListener('DOMContentLoaded', function () {\n    const tableContainers = document.getElementsByClassName('wptb-table-container');\n\n    /**\n     * Adds hover color change support for supported button elements.\n     *\n     * @param {string} querySelector query selector string\n     */\n    function addHoverSupport(querySelector) {\n        const buttons = Array.from(document.querySelectorAll(querySelector));\n\n        // eslint-disable-next-line array-callback-return\n        buttons.map((b) => {\n            b.addEventListener('mouseenter', (e) => {\n                const el = e.target;\n                // hover background-color\n                if (el.dataset.wptbElementHoverBgColor) {\n                    el.style.backgroundColor = el.dataset.wptbElementHoverBgColor;\n                }\n                // hover color\n                if (el.dataset.wptbElementHoverTextColor) {\n                    el.style.color = el.dataset.wptbElementHoverTextColor;\n                }\n                // hover scale\n                if (el.dataset.wptbElementHoverScale) {\n                    el.style.transform = `scale(${b.dataset.wptbElementHoverScale})`;\n                }\n            });\n\n            b.addEventListener('mouseleave', (e) => {\n                // reset all supported hover properties to their default value\n                const el = e.target;\n                if (el.dataset.wptbElementHoverBgColor) {\n                    el.style.backgroundColor = el.dataset.wptbElementBgColor;\n                }\n                if (el.dataset.wptbElementHoverTextColor) {\n                    el.style.color = el.dataset.wptbElementColor;\n                }\n                if (el.dataset.wptbElementHoverScale) {\n                    el.style.transform = 'scale(1)';\n                }\n            });\n        });\n    }\n\n    // add all kind of functions that have event listeners before responsive table reconstruction to make sure those event listeners are carried over to their clones\n    addHoverSupport('.wptb-preview-table .wptb-button');\n\n    wptb_tdDefaultWidth();\n    wptb_tableReconstraction();\n\n    function wptb_tableReconstraction() {\n        for (let i = 0; i < tableContainers.length; i++) {\n            const tableContainer = tableContainers[i];\n\n            // Set default indicator of creating a new table in true\n            let createNewTableIndic = true;\n\n            let previewTable = tableContainer.getElementsByClassName('wptb-preview-table');\n            let tableContainerMatrix = tableContainer.getElementsByClassName('wptb-table-container-matrix');\n\n            if (previewTable.length > 0 && tableContainerMatrix.length > 0) {\n                previewTable = previewTable[0];\n                tableContainerMatrix = tableContainerMatrix[0];\n                previewTable.style.display = 'table';\n\n                if (previewTable.dataset.wptbTableAlignment) {\n                    const { wptbTableAlignment } = previewTable.dataset;\n\n                    const wptbTableContainerWidth = tableContainer.offsetWidth;\n                    if (wptbTableContainerWidth < previewTable.offsetWidth) {\n                        previewTable.style.float = null;\n                    } else if (wptbTableAlignment == 'center') {\n                        previewTable.style.float = null;\n                    } else {\n                        previewTable.style.float = wptbTableAlignment;\n                    }\n\n                    if (wptbTableAlignment == 'center') {\n                        tableContainer.style.float = null;\n                    } else {\n                        tableContainer.style.float = wptbTableAlignment;\n                    }\n                }\n\n                // check data parametrs reconstraction and wptbAdaptiveTable if they are both equal 1 then continue\n                if (previewTable.dataset.reconstraction == 1 && previewTable.dataset.wptbAdaptiveTable == 1) {\n                    // get widths for wptb-table-container and wptb-preview-table\n                    const tableContainerWidth = tableContainer.offsetWidth;\n                    const previewTableWidth = previewTable.offsetWidth;\n\n                    // get count of table columns\n                    let tableColumns;\n                    const previewTableRows = previewTable.rows;\n                    if (previewTableRows.length > 0) {\n                        const firstRow = previewTableRows[0];\n                        const tdsRow = firstRow.querySelectorAll('td');\n\n                        tableColumns = tdsRow.length;\n                    }\n\n                    // check the top line if it is presented as a title\n                    const tablePreviewHeadIndic = previewTable.classList.contains('wptb-table-preview-head');\n\n                    // check conditions: if table top row is as \"header\" - table must have more that two columns,\n                    // otherwise table must have more taht one columns\n                    let tableReconstructed = false;\n                    let wptbPreviewTableMobile;\n                    if ((!tablePreviewHeadIndic || tableColumns > 2) && tableColumns > 1) {\n                        // if width of wptb-table-container less then width of wptb-preview-table -\n                        // continue the way creation new mobile table\n                        if (tableContainerWidth < previewTableWidth) {\n                            tableContainer.style.overflow = 'unset';\n\n                            // hide wptb-table-container-matrix\n                            if (tableContainerMatrix && !tableContainerMatrix.classList.contains('wptb-matrix-hide')) {\n                                tableContainerMatrix.classList.add('wptb-matrix-hide');\n                                tableReconstructed = true;\n                            }\n                            previewTable.classList.add('wptb-mobile-view-active');\n\n                            if (previewTable.rows && tableColumns) {\n                                // we get the estimated cell width\n                                const tdWidth = previewTableWidth / tableColumns;\n\n                                // get the quantity of whole Columns that are can placed in the container\n                                let wholeColumnsInContainer = Math.floor(tableContainerWidth / tdWidth);\n                                if (wholeColumnsInContainer < 1) wholeColumnsInContainer = 1;\n\n                                // check for the existence of a mobile table\n                                // if it available, check this table for compliance\n                                // with our conditions. If it compliance, remain this table\n                                // and cancel creating a new table ( createNewTableIndic = false ).\n                                if (tableContainer.getElementsByClassName('wptb-preview-table-mobile').length > 0) {\n                                    wptbPreviewTableMobile =\n                                        tableContainer.getElementsByClassName('wptb-preview-table-mobile')[0];\n                                    wptbPreviewTableMobile.classList.remove('wptb-mobile-hide');\n                                    const dataWholeColumnInContainer =\n                                        wptbPreviewTableMobile.dataset.wholeColumnsInContainer;\n\n                                    if (\n                                        dataWholeColumnInContainer == wholeColumnsInContainer &&\n                                        previewTable.classList.contains('wptb-table-preview-head')\n                                    ) {\n                                        createNewTableIndic = false;\n                                    } else if (\n                                        dataWholeColumnInContainer == wholeColumnsInContainer &&\n                                        !previewTable.classList.contains('wptb-table-preview-head') &&\n                                        (tableContainerWidth > 480 || wptbPreviewTableMobile.column == 1)\n                                    ) {\n                                        createNewTableIndic = false;\n                                    } else {\n                                        wptbPreviewTableMobile.parentNode.removeChild(wptbPreviewTableMobile);\n                                    }\n                                }\n                                //\n                                // if indicator of creating of table \"true\" - continue\n                                if (createNewTableIndic) {\n                                    // create new table for mobile devices\n                                    const newTable = document.createElement('table');\n                                    const newTableTbody = document.createElement('tbody');\n                                    newTable.appendChild(newTableTbody);\n\n                                    // add css class for new mobile table\n                                    newTable.classList.add('wptb-preview-table-mobile');\n                                    const infArr = previewTable.className.match(/wptb-element-main(.+)-(\\d+)/i);\n                                    if (infArr && Array.isArray(infArr)) {\n                                        newTable.classList.add(infArr[0]);\n                                    }\n\n                                    // get number of rows for wptb-preview-table\n                                    const tableRows = previewTable.rows.length;\n\n                                    // In this variable must have quantity columns of the last section of the new table\n                                    let newTableLastSectionFilledColumns;\n\n                                    // set valuesIsSaved in 'false'\n                                    // if the parameters newTableLastSectionFilledColumns get\n                                    // optimal values, valuesIsSaved must have value 'true'\n                                    let valuesIsSaved = false;\n\n                                    // check if top row is as \"header\"\n                                    if (previewTable.classList.contains('wptb-table-preview-head')) {\n                                        // quantity rows without top row\n                                        const tableRowsWithoutHeader = tableRows - 1;\n\n                                        // this variable will have quantity columns in new mobile table\n                                        let newTableColumnsWithoutLeftHeader;\n\n                                        // if quantity of rows in desktop table more than\n                                        // quantity whole columns which are can placed in the container,\n                                        // execute \"loop for\"\n                                        if (tableRows > wholeColumnsInContainer) {\n                                            // this code, сyclical reduces the number of columns in the new table,\n                                            // until the optimal view is obtained so that the last block of the new table\n                                            // has more than half the columns compared to the previous blocks\n                                            for (let i = 0; i < tableRowsWithoutHeader; i++) {\n                                                newTableColumnsWithoutLeftHeader = wholeColumnsInContainer - 1 - i;\n                                                if (newTableColumnsWithoutLeftHeader <= 0)\n                                                    newTableColumnsWithoutLeftHeader = 1;\n\n                                                newTableLastSectionFilledColumns =\n                                                    tableRowsWithoutHeader % newTableColumnsWithoutLeftHeader;\n\n                                                if (newTableLastSectionFilledColumns == 0) {\n                                                    valuesIsSaved = true;\n                                                    break;\n                                                } else if (\n                                                    newTableColumnsWithoutLeftHeader > 0 &&\n                                                    newTableColumnsWithoutLeftHeader <= 6 &&\n                                                    newTableColumnsWithoutLeftHeader -\n                                                        2 * newTableLastSectionFilledColumns <\n                                                        0 &&\n                                                    newTableLastSectionFilledColumns < newTableColumnsWithoutLeftHeader\n                                                ) {\n                                                    valuesIsSaved = true;\n                                                    break;\n                                                } else if (\n                                                    newTableColumnsWithoutLeftHeader > 6 &&\n                                                    newTableColumnsWithoutLeftHeader <= 12 &&\n                                                    newTableColumnsWithoutLeftHeader -\n                                                        1.8 * newTableLastSectionFilledColumns <\n                                                        0 &&\n                                                    newTableLastSectionFilledColumns < newTableColumnsWithoutLeftHeader\n                                                ) {\n                                                    valuesIsSaved = true;\n                                                    break;\n                                                } else if (\n                                                    newTableColumnsWithoutLeftHeader > 12 &&\n                                                    newTableColumnsWithoutLeftHeader <= 18 &&\n                                                    newTableColumnsWithoutLeftHeader -\n                                                        1.6 * newTableLastSectionFilledColumns <\n                                                        0 &&\n                                                    newTableLastSectionFilledColumns < newTableColumnsWithoutLeftHeader\n                                                ) {\n                                                    valuesIsSaved = true;\n                                                    break;\n                                                } else {\n                                                    continue;\n                                                }\n                                            }\n                                        } else {\n                                            newTableColumnsWithoutLeftHeader = tableRowsWithoutHeader;\n                                            newTableLastSectionFilledColumns = 0;\n                                            valuesIsSaved = true;\n                                        }\n\n                                        // if all necessary values ​​are available (  ), execute\n                                        if (valuesIsSaved) {\n                                            let countRows;\n                                            if (newTableColumnsWithoutLeftHeader > 0) {\n                                                countRows =\n                                                    tableColumns *\n                                                    Math.ceil(\n                                                        tableRowsWithoutHeader / newTableColumnsWithoutLeftHeader,\n                                                    );\n                                            } else {\n                                                countRows = tableColumns;\n                                            }\n\n                                            const sectionNumberLast = Math.floor((countRows - 1) / tableColumns);\n                                            let tdStyles;\n                                            for (let j = 0; j < countRows; j++) {\n                                                const sectionNumber = Math.floor(j / tableColumns);\n                                                const tr = document.createElement('tr');\n                                                const tdLeftHeader =\n                                                    previewTable.rows[0].children[\n                                                        j - sectionNumber * tableColumns\n                                                    ].cloneNode(true);\n                                                let td;\n                                                const rowFirstStyles = window.getComputedStyle(previewTable.rows[0]);\n                                                if (!tdLeftHeader.style.backgroundColor) {\n                                                    tdLeftHeader.style.backgroundColor = rowFirstStyles.backgroundColor;\n                                                }\n                                                tdLeftHeader.style.width = null;\n                                                tdLeftHeader.style.height = null;\n                                                // tdLeftHeader.removeAttribute('data-x-index');\n                                                tdLeftHeader.removeAttribute('data-wptb-css-td-auto-width');\n                                                tdStyles = window.getComputedStyle(previewTable.querySelector('td'));\n                                                if (tdStyles.borderTopColor) {\n                                                    tdLeftHeader.style.borderColor = tdStyles.borderTopColor;\n                                                } else {\n                                                    tdLeftHeader.style.borderColor = tdStyles.borderBottomColor;\n                                                }\n                                                if (sectionNumber > 0 && j % tableColumns == 0) {\n                                                    tdLeftHeader.style.borderTopWidth = '5px';\n                                                }\n                                                tr.appendChild(tdLeftHeader);\n\n                                                for (\n                                                    let k = newTableColumnsWithoutLeftHeader * sectionNumber + 1;\n                                                    k < newTableColumnsWithoutLeftHeader * (sectionNumber + 1) + 1;\n                                                    k++\n                                                ) {\n                                                    if (k < previewTable.rows.length) {\n                                                        td =\n                                                            previewTable.rows[k].children[\n                                                                j - sectionNumber * tableColumns\n                                                            ].cloneNode(true);\n                                                        const rowKStyles = window.getComputedStyle(\n                                                            previewTable.rows[k],\n                                                        );\n                                                        if (!td.style.backgroundColor) {\n                                                            td.style.backgroundColor = rowKStyles.backgroundColor;\n                                                        }\n\n                                                        td.style.width = null;\n                                                        td.style.height = null;\n                                                        // td.removeAttribute('data-x-index');\n                                                        td.removeAttribute('data-wptb-css-td-auto-width');\n                                                    } else {\n                                                        td = document.createElement('td');\n                                                        td.style.borderWidth = '0px';\n\n                                                        td.style.background = '#fff';\n                                                    }\n\n                                                    tdStyles = window.getComputedStyle(\n                                                        previewTable.querySelector('td'),\n                                                    );\n                                                    if (tdStyles.borderTopColor) {\n                                                        td.style.borderColor = tdStyles.borderTopColor;\n                                                    } else {\n                                                        td.style.borderColor = tdStyles.borderBottomColor;\n                                                    }\n\n                                                    if (sectionNumber > 0 && j % tableColumns == 0) {\n                                                        td.style.borderTopWidth = '5px';\n                                                    }\n\n                                                    tr.appendChild(td);\n                                                }\n\n                                                newTableTbody.appendChild(tr);\n                                            }\n                                        }\n                                    } else {\n                                        let newTableColumns;\n                                        if (tableContainerWidth > 480) {\n                                            for (let i = 0; i < tableColumns; i++) {\n                                                newTableColumns = wholeColumnsInContainer - i;\n                                                if (newTableColumns == 0) newTableColumns = 1;\n                                                newTableLastSectionFilledColumns = tableColumns % newTableColumns;\n\n                                                if (newTableLastSectionFilledColumns == 0) {\n                                                    valuesIsSaved = true;\n                                                    break;\n                                                } else if (\n                                                    newTableColumns > 0 &&\n                                                    newTableColumns <= 6 &&\n                                                    newTableColumns - 2 * newTableLastSectionFilledColumns <= 0 &&\n                                                    newTableLastSectionFilledColumns < newTableColumns\n                                                ) {\n                                                    valuesIsSaved = true;\n                                                    break;\n                                                } else if (\n                                                    newTableColumns > 6 &&\n                                                    newTableColumns <= 12 &&\n                                                    newTableColumns - 1.8 * newTableLastSectionFilledColumns <= 0 &&\n                                                    newTableLastSectionFilledColumns < newTableColumns\n                                                ) {\n                                                    valuesIsSaved = true;\n                                                    break;\n                                                } else if (\n                                                    newTableColumns > 12 &&\n                                                    newTableColumns <= 18 &&\n                                                    newTableColumns - 1.6 * newTableLastSectionFilledColumns <= 0 &&\n                                                    newTableLastSectionFilledColumns < newTableColumns\n                                                ) {\n                                                    valuesIsSaved = true;\n                                                    break;\n                                                } else {\n                                                    continue;\n                                                }\n                                            }\n                                        } else {\n                                            newTableColumns = 1;\n                                            newTableLastSectionFilledColumns = 0;\n                                            valuesIsSaved = true;\n                                            newTable.column = 1;\n                                        }\n\n                                        const increaseRatioRows = Math.ceil(tableColumns / newTableColumns);\n\n                                        const newTableRows = increaseRatioRows * tableRows;\n\n                                        if (valuesIsSaved) {\n                                            for (let i = 0; i < newTableRows; i++) {\n                                                const sectionNumber = Math.floor(i / tableRows);\n                                                const tr = document.createElement('tr');\n                                                let jMax;\n                                                let jStart;\n                                                if (\n                                                    sectionNumber != increaseRatioRows - 1 ||\n                                                    newTableLastSectionFilledColumns == 0\n                                                ) {\n                                                    jStart = sectionNumber * newTableColumns;\n                                                    jMax = newTableColumns * (1 + sectionNumber);\n                                                } else {\n                                                    jStart = tableColumns - newTableLastSectionFilledColumns;\n                                                    jMax = tableColumns;\n                                                }\n                                                const row = previewTable.rows[i - sectionNumber * tableRows];\n                                                tr.classList = row.classList;\n                                                tr.style.backgroundColor = row.style.backgroundColor;\n\n                                                for (let j = jStart; j < jMax; j++) {\n                                                    const newTd = row.children[j].cloneNode(true);\n                                                    if (!newTd.style.backgroundColor) {\n                                                        const rowStyles = window.getComputedStyle(row);\n                                                        newTd.style.backgroundColor = rowStyles.backgroundColor;\n                                                    }\n                                                    newTd.style.width = null;\n                                                    newTd.style.height = null;\n                                                    // newTd.removeAttribute('data-x-index');\n                                                    newTd.removeAttribute('data-wptb-css-td-auto-width');\n                                                    tr.appendChild(newTd);\n                                                }\n\n                                                newTableTbody.appendChild(tr);\n                                            }\n                                        }\n                                    }\n\n                                    newTable.dataset.wholeColumnsInContainer = wholeColumnsInContainer;\n                                    const images = newTable.querySelectorAll('[srcset]');\n                                    if (images.length > 0) {\n                                        for (let i = 0; i < images.length; i++) {\n                                            images[i].removeAttribute('srcset');\n                                        }\n                                    }\n                                    wptbPreviewTableMobile = newTable;\n                                    tableContainer.appendChild(newTable);\n                                    tableReconstructed = true;\n                                }\n                            }\n                        } else if (\n                            tableContainerMatrix &&\n                            tableContainerMatrix.classList.contains('wptb-matrix-hide')\n                        ) {\n                            tableContainerMatrix.classList.remove('wptb-matrix-hide');\n                            tableReconstructed = true;\n                            previewTable.classList.remove('wptb-mobile-view-active');\n                            wptbPreviewTableMobile = tableContainer.querySelector('.wptb-preview-table-mobile');\n                            if (wptbPreviewTableMobile) {\n                                tableContainer\n                                    .getElementsByClassName('wptb-preview-table-mobile')[0]\n                                    .classList.add('wptb-mobile-hide');\n                            }\n                            tableContainer.style.overflow = 'auto';\n                        }\n                    } else {\n                        previewTable.style.minWidth = 'auto';\n                    }\n\n                    WPTB_RecalculateIndexes(previewTable);\n\n                    if (tableReconstructed) {\n                        WPTB_RecalculateIndexes(wptbPreviewTableMobile);\n                        const tabEvent = new CustomEvent('table:rebuilt', { detail: true, bubbles: true });\n                        previewTable.dispatchEvent(tabEvent);\n                    }\n                }\n            }\n        }\n    }\n\n    function wptb_tdDefaultWidth() {\n        const wptbTableContainers = document.getElementsByClassName('wptb-table-container');\n        // let frontendEditLink = document.querySelectorAll( '.wptb-frontend-table-edit-link' );\n        for (let i = 0; i < wptbTableContainers.length; i++) {\n            const wptbTableContainer = wptbTableContainers[i];\n\n            wptbTableContainer.classList.add(`wptb-table-container-${i}`);\n\n            let table = wptbTableContainer.getElementsByClassName('wptb-preview-table');\n            if (table.length > 0) {\n                table = table[0];\n\n                // added check for horizontal scroll functionality while adding max width property to table container style\n                if (\n                    table.dataset.wptbTableContainerMaxWidth &&\n                    !table.dataset.wptbTableHorizontalScrollStatus &&\n                    !wptbTableContainer.dataset.wptbHorizontalScrollStatus\n                ) {\n                    wptbTableContainer.style.maxWidth = `${table.dataset.wptbTableContainerMaxWidth}px`;\n                }\n                table.classList.remove('wptb-table-preview-static-indic');\n\n                table.merginCellsHorizontally = false;\n                const tds = table.querySelectorAll('td');\n                for (let j = 0; j < tds.length; j++) {\n                    if (tds[j].colSpan > 1) {\n                        table.mergingCellsHorizontally = true;\n                    }\n                }\n                const wptbTableContainerWidth = wptbTableContainer.offsetWidth;\n\n                const td = table.querySelector('td');\n                const tdStyleObj = window.getComputedStyle(td, null);\n                const tdBorderLeftWidth = tdStyleObj.getPropertyValue('border-left-width');\n                const tdBorderRightWidth = tdStyleObj.getPropertyValue('border-right-width');\n                const tdPaddingLeftWidth = tdStyleObj.getPropertyValue('padding-left');\n                const tdPaddingRightWidth = tdStyleObj.getPropertyValue('padding-left');\n                const tdPaddingCommon = parseFloat(tdPaddingLeftWidth, 10) + parseFloat(tdPaddingRightWidth, 10);\n                const tableTdBorderCommonWidth = parseFloat(tdBorderLeftWidth, 10) + parseFloat(tdBorderRightWidth, 10);\n                const { wptbTableTdsSumMaxWidth } = table.dataset;\n                const { wptbFixedWidthSize } = table.dataset;\n                const { wptbCellsWidthAutoCount } = table.dataset;\n                let styleElementCreate = false;\n                let tableTdWidthAuto;\n\n                /**\n                 * Table width logic to determine final width on rendered tables.\n                 */\n                const tableWidthLogic = () => {\n                    // eslint-disable-next-line no-shadow\n                    const wptbTableContainerWidth = wptbTableContainer.offsetWidth;\n                    if (wptbTableTdsSumMaxWidth < wptbTableContainerWidth) {\n                        if (wptbCellsWidthAutoCount) {\n                            table.style.minWidth = '100%';\n\n                            //                        if( frontendEditLink && frontendEditLink[i] ) {\n                            //                            frontendEditLink[i].style.minWidth = wptbTableTdsSumMaxWidth + 'px';\n                            //                        }\n\n                            if (table.mergingCellsHorizontally) {\n                                table.style.width = 'auto';\n                                const tableTdsWidthAutoCommon = wptbTableContainerWidth - wptbFixedWidthSize;\n                                tableTdWidthAuto = tableTdsWidthAutoCommon / wptbCellsWidthAutoCount;\n                                tableTdWidthAuto = tableTdWidthAuto - tdPaddingCommon - tableTdBorderCommonWidth;\n                                styleElementCreate = true;\n                            } else {\n                                table.style.width = '100%';\n\n                                //                            if( frontendEditLink && frontendEditLink[i] ) {\n                                //                                frontendEditLink[i].style.width = '100%';\n                                //                                frontendEditLink[i].style.maxWidth = '100%';\n                                //                            }\n                            }\n                        } else {\n                            table.style.width = 'auto';\n                            table.style.minWidth = null;\n                            table.style.maxWidth = `${wptbTableTdsSumMaxWidth}px`;\n\n                            //                        if( frontendEditLink && frontendEditLink[i] ) {\n                            //                            frontendEditLink[i].style.width = null;\n                            //                            frontendEditLink[i].style.minWidth = null;\n                            //                            frontendEditLink[i].style.maxWidth = wptbTableTdsSumMaxWidth + 'px';\n                            //                        }\n                        }\n                    } else {\n                        table.style.maxWidth = null;\n                        table.style.minWidth = `${table.dataset.wptbTableTdsSumMaxWidth}px`;\n                        \n                        table.style.width = 'auto';\n                        tableTdWidthAuto = table.dataset.wptbTdWidthAuto ? table.dataset.wptbTdWidthAuto : '100';\n                        styleElementCreate = true;\n                        // Doing this for ability to early return\n                        (() => {\n                            const responsiveness = JSON.parse(atob(table.dataset.wptbResponsiveDirectives) || 'false');\n                            \n\n                            if (!responsiveness || !responsiveness.responsiveEnabled) {\n                                return;\n                            }\n\n                            const targetWidth = responsiveness.relativeWidth !== 'window' ? wptbTableContainerWidth : document.body.clientWidth;\n\n                            let device = 'desktop';\n                            if (targetWidth <= responsiveness.breakpoints.mobile.width) {\n                                device = 'mobile';\n                            } else if (targetWidth <= responsiveness.breakpoints.tablet.width) {\n                                device = 'tablet';\n                            }\n                                \n                            const isDisabled = responsiveness.modeOptions.auto.disabled[device];\n                            if (isDisabled || device === 'desktop') {\n                                return;\n                            }\n\t\t\t\t\t\t\ttable.style.minWidth = null;\n                            table.style.width =  '100%';\n                        })();\n                    }\n                };\n\n                // if current table container width is equal or lower than zero, than it means it is hidden through css styles, width calculations should be done when it becomes visible again\n                if (wptbTableContainerWidth <= 0) {\n                    /**\n                     * Calculate element visibility status.\n                     *\n                     * @param {Element} element element to check\n                     * @return {boolean} whether element is visible or not\n                     */\n                    const elementVisibilityStatus = (element) => {\n                        const { display, visibility } = getComputedStyle(element);\n                        return display !== 'none' || visibility === 'visible';\n                    };\n\n                    /**\n                     * Find parent element that is responsible for hiding our table.\n                     *\n                     * This function is recursive, it will keep searching parents till it hit 'body' element.\n                     *\n                     * @param {Element} currentElement current element in check\n                     * @return {null|Element} found parent or null\n                     */\n                    const findParentWithNoDisplay = (currentElement) => {\n                        const currentParent = currentElement.parentNode;\n                        const parentDisplayStatus = elementVisibilityStatus(currentParent);\n                        // lower cased element name\n                        const parentType = currentParent.nodeName.toLowerCase();\n\n                        // if parent is visible make a recursive call\n                        if (!parentDisplayStatus && parentType !== 'body') {\n                            return findParentWithNoDisplay(currentParent);\n                        }\n                        // hit body element, should return null to signal a problem with current DOM\n                        if (parentType === 'body') {\n                            return null;\n                        }\n                        return currentParent;\n                    };\n\n                    // find parent container with hidden display property\n                    const culpritParent = findParentWithNoDisplay(wptbTableContainer);\n                    if (culpritParent) {\n                        // setup a mutation observer to detect visibility change of parent which is responsible for hiding our table\n                        const config = { attributes: true, childList: false, subtree: false };\n                        const parentObserver = new MutationObserver((mutationRecord) => {\n                            try {\n                                // eslint-disable-next-line array-callback-return\n                                mutationRecord.map((mutation) => {\n                                    const currentVisibility = elementVisibilityStatus(mutation.target);\n                                    const { width: containerWidth } = mutation.target.getBoundingClientRect();\n\n                                    // call width logic and start calculations for our table since it is visible now\n                                    if (currentVisibility && containerWidth > 0) {\n                                        tableWidthLogic();\n\n                                        // disconnect observer\n                                        parentObserver.disconnect();\n\n                                        // get out of iteration\n                                        throw new Error('get out of iteration');\n                                    }\n                                });\n                            } catch (e) {\n                                // do nothing since an error is thrown to get out of array iteration\n                            }\n                        });\n\n                        // observe parent for visibility changes\n                        parentObserver.observe(culpritParent, config);\n                    }\n                } else {\n                    // if no hidden parent element is found, it means our table is visible, continue normally\n                    tableWidthLogic();\n                }\n\n                const { head } = document;\n                if (head) {\n                    const cssForTdsWidthAutoOld = head.querySelector(`style[data-wptb-td-auto-width-${i}=\"true\"]`);\n\n                    if (cssForTdsWidthAutoOld) {\n                        head.removeChild(cssForTdsWidthAutoOld);\n                    }\n                }\n\n                if (styleElementCreate) {\n                    const cssForTdsWidthAuto = document.createElement('style');\n                    cssForTdsWidthAuto.setAttribute(`data-wptb-td-auto-width-${i}`, true);\n                    cssForTdsWidthAuto.innerHTML = `.wptb-table-container-${i} table td[data-wptb-css-td-auto-width=true]{width:${tableTdWidthAuto}px}`;\n                    if (head) {\n                        head.appendChild(cssForTdsWidthAuto);\n                    }\n                }\n            }\n        }\n    }\n\n    window.addEventListener('resize', () => {\n        wptb_tdDefaultWidth();\n        wptb_tableReconstraction();\n    });\n\n    // code for adding of old css styles for correct view\n    const elements = document.getElementsByClassName('wptb-ph-element');\n    for (let i = 0; i < elements.length; i++) {\n        const element = elements[i];\n        if (element.classList.contains('wptb-list-item-container')) {\n            element.classList.remove('wptb-list-item-container');\n            element.classList.add('wptb-list-container');\n        }\n\n        if (element.classList.contains('wptb-button-container')) {\n            const infArr = element.className.match(/wptb-size-([A-Z]+)/i);\n            if (infArr && Array.isArray(infArr)) {\n                const wptbSize = infArr[0];\n                const wptbSizeNew = wptbSize.toLowerCase();\n\n                element.classList.remove(wptbSize);\n\n                const wptbButtonWrapper = element.querySelector('.wptb-button-wrapper');\n                if (wptbButtonWrapper) {\n                    wptbButtonWrapper.classList.add(wptbSizeNew);\n                }\n            }\n        }\n    }\n\n    // responsive setup\n    // eslint-disable-next-line no-unused-vars\n    const responsiveFront = new WPTB_ResponsiveFrontend({\n        query: '.wptb-preview-table',\n        bindToResize: true,\n    });\n\n    // eslint-disable-next-line no-restricted-globals\n    const context = self || global;\n\n    // assign responsive front instance to global context\n    context.wptbResponsiveFrontendInstance = responsiveFront;\n\n    // sorting table\n    function sortingTable() {\n        const tables = document.querySelectorAll('.wptb-preview-table');\n        for (let i = 0; i < tables.length; i += 1) {\n            const sortableTable = new WPTB_SortableTable({ table: tables[i] });\n            sortableTable.sortableTableInitialization(responsiveFront);\n        }\n    }\n\n    const textIconFrontendEditFix = () => {\n        const tableObjects = WptbFrontendBase.getTableObjects();\n\n        tableObjects.map(({ mainTable }) => {\n            const textIconElements = Array.from(mainTable.querySelectorAll('.wptb-text_icon_element-container'));\n\n            textIconElements.map((tiEl) => {\n                tiEl.setAttribute('contenteditable', false);\n            });\n        });\n    };\n\n    const badgeFrontendEditFix = () => {\n        const tableObjects = WptbFrontendBase.getTableObjects();\n\n        tableObjects.map(({ mainTable }) => {\n            const textIconElements = Array.from(mainTable.querySelectorAll('.wptb-badge-container'));\n\n            textIconElements.map((tiEl) => {\n                tiEl.setAttribute('contenteditable', false);\n            });\n        });\n    };\n\n    sortingTable();\n    const responsiveFrontReady = new CustomEvent('responsive:front', {\n        detail: {\n            responsiveFront,\n        },\n    });\n    document.dispatchEvent(responsiveFrontReady);\n\n    // initialize scroll manager\n    new WPTB_ScrollManager(WptbFrontendData.scrollManager).init();\n\n    // apply defined extra styles to tables if there is any\n    WPTB_ExtraStyles.applyStyles(WPTB_ExtraStyles.modes.frontEnd, WptbFrontendData.generalStyles);\n\n    // rebuild tables according to current responsive mode\n    responsiveFront.rebuildTables();\n\n    // initialize lazy load module\n    WPTB_LazyLoad.init(WptbFrontendData.lazyLoad);\n\n    textIconFrontendEditFix();\n    badgeFrontendEditFix();\n\n    // initialize style pass\n    WPTB_StylePass.init(WptbFrontendData.stylePass);\n});\n"]}