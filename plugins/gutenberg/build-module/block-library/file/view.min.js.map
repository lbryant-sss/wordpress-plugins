{
  "version": 3,
  "sources": ["../../../packages/block-library/src/file/view.js", "../../../packages/block-library/src/file/utils/index.js"],
  "sourcesContent": ["/**\n * WordPress dependencies\n */\nimport { store } from '@wordpress/interactivity';\n/**\n * Internal dependencies\n */\nimport { browserSupportsPdfs } from './utils';\n\nstore(\n\t'core/file',\n\t{\n\t\tstate: {\n\t\t\tget hasPdfPreview() {\n\t\t\t\treturn browserSupportsPdfs();\n\t\t\t},\n\t\t},\n\t},\n\t{ lock: true }\n);\n", "/**\n * Uses a combination of user agent matching and feature detection to determine whether\n * the current browser supports rendering PDFs inline.\n *\n * @return {boolean} Whether or not the browser supports inline PDFs.\n */\nexport const browserSupportsPdfs = () => {\n\t// Use native feature detection if available.\n\tif ( window.navigator.pdfViewerEnabled ) {\n\t\treturn true;\n\t}\n\n\t// Most mobile devices include \"Mobi\" in their UA.\n\tif ( window.navigator.userAgent.indexOf( 'Mobi' ) > -1 ) {\n\t\treturn false;\n\t}\n\n\t// Android tablets are the notable exception.\n\tif ( window.navigator.userAgent.indexOf( 'Android' ) > -1 ) {\n\t\treturn false;\n\t}\n\n\t// iPad pretends to be a Mac.\n\tif (\n\t\twindow.navigator.userAgent.indexOf( 'Macintosh' ) > -1 &&\n\t\twindow.navigator.maxTouchPoints &&\n\t\twindow.navigator.maxTouchPoints > 2\n\t) {\n\t\treturn false;\n\t}\n\n\t// IE only supports PDFs when there's an ActiveX object available for it.\n\tif (\n\t\t!! ( window.ActiveXObject || 'ActiveXObject' in window ) &&\n\t\t! (\n\t\t\tcreateActiveXObject( 'AcroPDF.PDF' ) ||\n\t\t\tcreateActiveXObject( 'PDF.PdfCtrl' )\n\t\t)\n\t) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\n/**\n * Helper function for creating ActiveX objects, catching any errors that are thrown\n * when it's generated.\n *\n * @param {string} type The name of the ActiveX object to create.\n * @return {window.ActiveXObject|undefined} The generated ActiveXObject, or null if it failed.\n */\nconst createActiveXObject = ( type ) => {\n\tlet ax;\n\ttry {\n\t\tax = new window.ActiveXObject( type );\n\t} catch ( e ) {\n\t\tax = undefined;\n\t}\n\treturn ax;\n};\n"],
  "mappings": "AAGA,OAAS,SAAAA,MAAa,2BCGf,IAAMC,EAAsB,IAE7B,OAAO,UAAU,iBACd,GAIH,SAAO,UAAU,UAAU,QAAS,MAAO,EAAI,IAK/C,OAAO,UAAU,UAAU,QAAS,SAAU,EAAI,IAMtD,OAAO,UAAU,UAAU,QAAS,WAAY,EAAI,IACpD,OAAO,UAAU,gBACjB,OAAO,UAAU,eAAiB,IAO7B,OAAO,eAAiB,kBAAmB,SAChD,EACCC,EAAqB,aAAc,GACnCA,EAAqB,aAAc,IAgBhCA,EAAwBC,GAAU,CACvC,IAAIC,EACJ,GAAI,CACHA,EAAK,IAAI,OAAO,cAAeD,CAAK,CACrC,MAAc,CACbC,EAAK,MACN,CACA,OAAOA,CACR,EDnDAC,EACC,YACA,CACC,MAAO,CACN,IAAI,eAAgB,CACnB,OAAOC,EAAoB,CAC5B,CACD,CACD,EACA,CAAE,KAAM,EAAK,CACd",
  "names": ["store", "browserSupportsPdfs", "createActiveXObject", "type", "ax", "store", "browserSupportsPdfs"]
}
