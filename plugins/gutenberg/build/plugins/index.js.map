{
  "version": 3,
  "sources": ["vendor-external:react/jsx-runtime", "wordpress-external:@wordpress/element", "wordpress-external:@wordpress/hooks", "wordpress-external:@wordpress/is-shallow-equal", "wordpress-external:@wordpress/compose", "wordpress-external:@wordpress/deprecated", "wordpress-external:@wordpress/primitives", "../../packages/plugins/src/index.ts", "../../packages/plugins/src/components/plugin-area/index.tsx", "../../node_modules/memize/dist/index.js", "../../packages/plugins/src/components/plugin-context/index.tsx", "../../packages/plugins/src/components/plugin-error-boundary/index.tsx", "../../packages/plugins/src/api/index.ts", "../../packages/icons/src/library/plugins.tsx"],
  "sourcesContent": ["module.exports = window.ReactJSXRuntime;", "module.exports = window.wp.element;", "module.exports = window.wp.hooks;", "module.exports = window.wp.isShallowEqual;", "module.exports = window.wp.compose;", "module.exports = window.wp.deprecated;", "module.exports = window.wp.primitives;", "export * from './components';\nexport * from './api';\n", "/**\n * External dependencies\n */\nimport memoize from 'memize';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useSyncExternalStore } from '@wordpress/element';\nimport { addAction, removeAction } from '@wordpress/hooks';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\n\n/**\n * Internal dependencies\n */\nimport { PluginContextProvider } from '../plugin-context';\nimport { PluginErrorBoundary } from '../plugin-error-boundary';\nimport { getPlugins } from '../../api';\nimport type { PluginContext } from '../plugin-context';\nimport type { WPPlugin } from '../../api';\n\nconst getPluginContext = memoize(\n\t( icon: PluginContext[ 'icon' ], name: PluginContext[ 'name' ] ) => ( {\n\t\ticon,\n\t\tname,\n\t} )\n);\n\n/**\n * A component that renders all plugin fills in a hidden div.\n *\n * @param  props\n * @param  props.scope\n * @param  props.onError\n * @example\n * ```js\n * // Using ES5 syntax\n * var el = React.createElement;\n * var PluginArea = wp.plugins.PluginArea;\n *\n * function Layout() {\n * \treturn el(\n * \t\t'div',\n * \t\t{ scope: 'my-page' },\n * \t\t'Content of the page',\n * \t\tPluginArea\n * \t);\n * }\n * ```\n *\n * @example\n * ```js\n * // Using ESNext syntax\n * import { PluginArea } from '@wordpress/plugins';\n *\n * const Layout = () => (\n * \t<div>\n * \t\tContent of the page\n * \t\t<PluginArea scope=\"my-page\" />\n * \t</div>\n * );\n * ```\n *\n * @return {Component} The component to be rendered.\n */\nfunction PluginArea( {\n\tscope,\n\tonError,\n}: {\n\tscope?: string;\n\tonError?: ( name: WPPlugin[ 'name' ], error: Error ) => void;\n} ) {\n\tconst store = useMemo( () => {\n\t\tlet lastValue: WPPlugin[] = [];\n\n\t\treturn {\n\t\t\tsubscribe(\n\t\t\t\tlistener: (\n\t\t\t\t\tplugin: Omit< WPPlugin, 'name' >,\n\t\t\t\t\tname: WPPlugin[ 'name' ]\n\t\t\t\t) => void\n\t\t\t) {\n\t\t\t\taddAction(\n\t\t\t\t\t'plugins.pluginRegistered',\n\t\t\t\t\t'core/plugins/plugin-area/plugins-registered',\n\t\t\t\t\tlistener\n\t\t\t\t);\n\t\t\t\taddAction(\n\t\t\t\t\t'plugins.pluginUnregistered',\n\t\t\t\t\t'core/plugins/plugin-area/plugins-unregistered',\n\t\t\t\t\tlistener\n\t\t\t\t);\n\t\t\t\treturn () => {\n\t\t\t\t\tremoveAction(\n\t\t\t\t\t\t'plugins.pluginRegistered',\n\t\t\t\t\t\t'core/plugins/plugin-area/plugins-registered'\n\t\t\t\t\t);\n\t\t\t\t\tremoveAction(\n\t\t\t\t\t\t'plugins.pluginUnregistered',\n\t\t\t\t\t\t'core/plugins/plugin-area/plugins-unregistered'\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetValue() {\n\t\t\t\tconst nextValue = getPlugins( scope );\n\n\t\t\t\tif ( ! isShallowEqual( lastValue, nextValue ) ) {\n\t\t\t\t\tlastValue = nextValue;\n\t\t\t\t}\n\n\t\t\t\treturn lastValue;\n\t\t\t},\n\t\t};\n\t}, [ scope ] );\n\n\tconst plugins = useSyncExternalStore(\n\t\tstore.subscribe,\n\t\tstore.getValue,\n\t\tstore.getValue\n\t);\n\n\treturn (\n\t\t<div style={ { display: 'none' } }>\n\t\t\t{ plugins.map( ( { icon, name, render: Plugin } ) => (\n\t\t\t\t<PluginContextProvider\n\t\t\t\t\tkey={ name }\n\t\t\t\t\tvalue={ getPluginContext( icon, name ) }\n\t\t\t\t>\n\t\t\t\t\t<PluginErrorBoundary name={ name } onError={ onError }>\n\t\t\t\t\t\t<Plugin />\n\t\t\t\t\t</PluginErrorBoundary>\n\t\t\t\t</PluginContextProvider>\n\t\t\t) ) }\n\t\t</div>\n\t);\n}\n\nexport default PluginArea;\n", "/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {(...args: any[]) => any} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {((...args: Parameters<F>) => ReturnType<F>) & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize(fn, options) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized(/* ...args */) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs,\n\t\t\ti;\n\n\t\tsearchCache: while (node) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif (node.args.length !== arguments.length) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (node.args[i] !== arguments[i]) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== head) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif (node === tail) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ (head).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply(null, args),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (head) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif (size === /** @type {MemizeOptions} */ (options).maxSize) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ (tail).prev;\n\t\t\t/** @type {MemizeCacheNode} */ (tail).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function () {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nexport { memize as default };\n", "/**\n * WordPress dependencies\n */\nimport { createContext, useContext } from '@wordpress/element';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport type { WPPlugin } from '../../api';\n\nexport interface PluginContext {\n\tname: null | WPPlugin[ 'name' ];\n\ticon: null | WPPlugin[ 'icon' ];\n}\n\nconst Context = createContext< PluginContext >( {\n\tname: null,\n\ticon: null,\n} );\nContext.displayName = 'PluginContext';\n\nexport const PluginContextProvider = Context.Provider;\n\n/**\n * A hook that returns the plugin context.\n *\n * @return {PluginContext} Plugin context\n */\nexport function usePluginContext() {\n\treturn useContext( Context );\n}\n\n/**\n * A Higher Order Component used to inject Plugin context to the\n * wrapped component.\n *\n * @deprecated 6.8.0 Use `usePluginContext` hook instead.\n *\n * @param  mapContextToProps Function called on every context change,\n *                           expected to return object of props to\n *                           merge with the component's own props.\n *\n * @return {Component} Enhanced component with injected context as props.\n */\nexport const withPluginContext = (\n\tmapContextToProps: < T >(\n\t\tcontext: PluginContext,\n\t\tprops: T\n\t) => T & PluginContext\n) =>\n\tcreateHigherOrderComponent( ( OriginalComponent ) => {\n\t\tdeprecated( 'wp.plugins.withPluginContext', {\n\t\t\tsince: '6.8.0',\n\t\t\talternative: 'wp.plugins.usePluginContext',\n\t\t} );\n\t\treturn ( props ) => (\n\t\t\t<Context.Consumer>\n\t\t\t\t{ ( context ) => (\n\t\t\t\t\t<OriginalComponent\n\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t\t{ ...mapContextToProps( context, props ) }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</Context.Consumer>\n\t\t);\n\t}, 'withPluginContext' );\n", "/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport type {\n\tPluginErrorBoundaryProps as Props,\n\tPluginErrorBoundaryState as State,\n} from '../../types';\n\nexport class PluginErrorBoundary extends Component< Props, State > {\n\tconstructor( props: Props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\thasError: false,\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromError(): State {\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidCatch( error: Error ): void {\n\t\tconst { name, onError } = this.props;\n\t\tif ( onError ) {\n\t\t\tonError( name, error );\n\t\t}\n\t}\n\n\trender(): React.ReactNode {\n\t\tif ( ! this.state.hasError ) {\n\t\t\treturn this.props.children;\n\t\t}\n\n\t\treturn null;\n\t}\n}\n", "/* eslint no-console: [ 'error', { allow: [ 'error' ] } ] */\n/**\n * External dependencies\n */\nimport type { ComponentType } from 'react';\n\n/**\n * WordPress dependencies\n */\nimport { applyFilters, doAction } from '@wordpress/hooks';\nimport { plugins as pluginsIcon } from '@wordpress/icons';\nimport type { IconType } from '@wordpress/components';\n\n/**\n * Defined behavior of a plugin type.\n */\nexport interface WPPlugin {\n\t/**\n\t * A string identifying the plugin. Must be unique across all registered plugins.\n\t */\n\tname: string;\n\n\t/**\n\t * An icon to be shown in the UI. It can be a slug of the Dashicon, or an\n\t * element (or function returning an element) if you choose to render your\n\t * own SVG.\n\t */\n\ticon?: IconType;\n\n\t/**\n\t * A component containing the UI elements to be rendered.\n\t */\n\trender: ComponentType;\n\n\t/**\n\t * The optional scope to be used when rendering inside a plugin area.\n\t * No scope by default.\n\t */\n\tscope?: string;\n}\n\ntype PluginSettings = Omit< WPPlugin, 'name' >;\n\n/**\n * Plugin definitions keyed by plugin name.\n */\nconst plugins = {} as Record< string, WPPlugin >;\n\n/**\n * Registers a plugin to the editor.\n *\n * @param name     A string identifying the plugin. Must be\n *                 unique across all registered plugins.\n * @param settings The settings for this plugin.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var el = React.createElement;\n * var Fragment = wp.element.Fragment;\n * var PluginSidebar = wp.editor.PluginSidebar;\n * var PluginSidebarMoreMenuItem = wp.editor.PluginSidebarMoreMenuItem;\n * var registerPlugin = wp.plugins.registerPlugin;\n * var moreIcon = React.createElement( 'svg' ); //... svg element.\n *\n * function Component() {\n * \treturn el(\n * \t\tFragment,\n * \t\t{},\n * \t\tel(\n * \t\t\tPluginSidebarMoreMenuItem,\n * \t\t\t{\n * \t\t\t\ttarget: 'sidebar-name',\n * \t\t\t},\n * \t\t\t'My Sidebar'\n * \t\t),\n * \t\tel(\n * \t\t\tPluginSidebar,\n * \t\t\t{\n * \t\t\t\tname: 'sidebar-name',\n * \t\t\t\ttitle: 'My Sidebar',\n * \t\t\t},\n * \t\t\t'Content of the sidebar'\n * \t\t)\n * \t);\n * }\n * registerPlugin( 'plugin-name', {\n * \ticon: moreIcon,\n * \trender: Component,\n * \tscope: 'my-page',\n * } );\n * ```\n *\n * @example\n * ```js\n * // Using ESNext syntax\n * import { PluginSidebar, PluginSidebarMoreMenuItem } from '@wordpress/editor';\n * import { registerPlugin } from '@wordpress/plugins';\n * import { more } from '@wordpress/icons';\n *\n * const Component = () => (\n * \t<>\n * \t\t<PluginSidebarMoreMenuItem\n * \t\t\ttarget=\"sidebar-name\"\n * \t\t>\n * \t\t\tMy Sidebar\n * \t\t</PluginSidebarMoreMenuItem>\n * \t\t<PluginSidebar\n * \t\t\tname=\"sidebar-name\"\n * \t\t\ttitle=\"My Sidebar\"\n * \t\t>\n * \t\t\tContent of the sidebar\n * \t\t</PluginSidebar>\n * \t</>\n * );\n *\n * registerPlugin( 'plugin-name', {\n * \ticon: more,\n * \trender: Component,\n * \tscope: 'my-page',\n * } );\n * ```\n *\n * @return The final plugin settings object.\n */\nexport function registerPlugin(\n\tname: string,\n\tsettings: PluginSettings\n): PluginSettings | null {\n\tif ( typeof settings !== 'object' ) {\n\t\tconsole.error( 'No settings object provided!' );\n\t\treturn null;\n\t}\n\tif ( typeof name !== 'string' ) {\n\t\tconsole.error( 'Plugin name must be string.' );\n\t\treturn null;\n\t}\n\tif ( ! /^[a-z][a-z0-9-]*$/.test( name ) ) {\n\t\tconsole.error(\n\t\t\t'Plugin name must include only lowercase alphanumeric characters or dashes, and start with a letter. Example: \"my-plugin\".'\n\t\t);\n\t\treturn null;\n\t}\n\tif ( plugins[ name ] ) {\n\t\tconsole.error( `Plugin \"${ name }\" is already registered.` );\n\t}\n\n\tsettings = applyFilters(\n\t\t'plugins.registerPlugin',\n\t\tsettings,\n\t\tname\n\t) as PluginSettings;\n\n\tconst { render, scope } = settings;\n\n\tif ( typeof render !== 'function' ) {\n\t\tconsole.error(\n\t\t\t'The \"render\" property must be specified and must be a valid function.'\n\t\t);\n\t\treturn null;\n\t}\n\n\tif ( scope ) {\n\t\tif ( typeof scope !== 'string' ) {\n\t\t\tconsole.error( 'Plugin scope must be string.' );\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( ! /^[a-z][a-z0-9-]*$/.test( scope ) ) {\n\t\t\tconsole.error(\n\t\t\t\t'Plugin scope must include only lowercase alphanumeric characters or dashes, and start with a letter. Example: \"my-page\".'\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tplugins[ name ] = {\n\t\tname,\n\t\ticon: pluginsIcon,\n\t\t...settings,\n\t};\n\n\tdoAction( 'plugins.pluginRegistered', settings, name );\n\n\treturn settings;\n}\n\n/**\n * Unregisters a plugin by name.\n *\n * @param name Plugin name.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var unregisterPlugin = wp.plugins.unregisterPlugin;\n *\n * unregisterPlugin( 'plugin-name' );\n * ```\n *\n * @example\n * ```js\n * // Using ESNext syntax\n * import { unregisterPlugin } from '@wordpress/plugins';\n *\n * unregisterPlugin( 'plugin-name' );\n * ```\n *\n * @return The previous plugin settings object, if it has been\n *         successfully unregistered; otherwise `undefined`.\n */\nexport function unregisterPlugin( name: string ): WPPlugin | undefined {\n\tif ( ! plugins[ name ] ) {\n\t\tconsole.error( 'Plugin \"' + name + '\" is not registered.' );\n\t\treturn;\n\t}\n\tconst oldPlugin = plugins[ name ];\n\tdelete plugins[ name ];\n\n\tdoAction( 'plugins.pluginUnregistered', oldPlugin, name );\n\n\treturn oldPlugin;\n}\n\n/**\n * Returns a registered plugin settings.\n *\n * @param name Plugin name.\n *\n * @return Plugin setting.\n */\nexport function getPlugin( name: string ): WPPlugin | undefined {\n\treturn plugins[ name ];\n}\n\n/**\n * Returns all registered plugins without a scope or for a given scope.\n *\n * @param scope The scope to be used when rendering inside\n *              a plugin area. No scope by default.\n *\n * @return The list of plugins without a scope or for a given scope.\n */\nexport function getPlugins( scope?: string ): WPPlugin[] {\n\treturn Object.values( plugins ).filter(\n\t\t( plugin ) => plugin.scope === scope\n\t);\n}\n", "/* eslint-disable prettier/prettier */\n/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\n\nexport default (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t<Path d=\"M10.5 4v4h3V4H15v4h1.5a1 1 0 011 1v4l-3 4v2a1 1 0 01-1 1h-3a1 1 0 01-1-1v-2l-3-4V9a1 1 0 011-1H9V4h1.5zm.5 12.5v2h2v-2l3-4v-3H8v3l3 4z\" />\n\t</SVG>\n);\n/* eslint-enable */\n"],
  "mappings": "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",
  "names": ["import_jsx_runtime", "import_element", "import_hooks", "deprecated", "import_element", "import_jsx_runtime", "isShallowEqual", "plugins"]
}
