{
  "version": 3,
  "sources": ["wordpress-external:@wordpress/deprecated", "wordpress-external:@wordpress/data", "vendor-external:react/jsx-runtime", "wordpress-external:@wordpress/compose", "wordpress-external:@wordpress/components", "wordpress-external:@wordpress/i18n", "wordpress-external:@wordpress/element", "wordpress-external:@wordpress/primitives", "../../packages/nux/src/index.js", "../../packages/nux/src/store/index.js", "../../packages/nux/src/store/reducer.js", "../../packages/nux/src/store/actions.js", "../../packages/nux/src/store/selectors.js", "../../packages/nux/src/components/dot-tip/index.js", "../../packages/icons/src/library/close.tsx"],
  "sourcesContent": ["module.exports = window.wp.deprecated;", "module.exports = window.wp.data;", "module.exports = window.ReactJSXRuntime;", "module.exports = window.wp.compose;", "module.exports = window.wp.components;", "module.exports = window.wp.i18n;", "module.exports = window.wp.element;", "module.exports = window.wp.primitives;", "/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\n\nexport { store } from './store';\nexport { default as DotTip } from './components/dot-tip';\n\ndeprecated( 'wp.nux', {\n\tsince: '5.4',\n\thint: 'wp.components.Guide can be used to show a user guide.',\n\tversion: '6.2',\n} );\n", "/**\n * WordPress dependencies\n */\nimport { createReduxStore, registerStore } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\n\nconst STORE_NAME = 'core/nux';\n\n/**\n * Store definition for the nux namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n\tpersist: [ 'preferences' ],\n} );\n\n// Once we build a more generic persistence plugin that works across types of stores\n// we'd be able to replace this with a register call.\nregisterStore( STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n\tpersist: [ 'preferences' ],\n} );\n", "/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer that tracks which tips are in a guide. Each guide is represented by\n * an array which contains the tip identifiers contained within that guide.\n *\n * @param {Array}  state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Array} Updated state.\n */\nexport function guides( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'TRIGGER_GUIDE':\n\t\t\treturn [ ...state, action.tipIds ];\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer that tracks whether or not tips are globally enabled.\n *\n * @param {boolean} state  Current state.\n * @param {Object}  action Dispatched action.\n *\n * @return {boolean} Updated state.\n */\nexport function areTipsEnabled( state = true, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'DISABLE_TIPS':\n\t\t\treturn false;\n\n\t\tcase 'ENABLE_TIPS':\n\t\t\treturn true;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer that tracks which tips have been dismissed. If the state object\n * contains a tip identifier, then that tip is dismissed.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function dismissedTips( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'DISMISS_TIP':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.id ]: true,\n\t\t\t};\n\n\t\tcase 'ENABLE_TIPS':\n\t\t\treturn {};\n\t}\n\n\treturn state;\n}\n\nconst preferences = combineReducers( { areTipsEnabled, dismissedTips } );\n\nexport default combineReducers( { guides, preferences } );\n", "/**\n * Returns an action object that, when dispatched, presents a guide that takes\n * the user through a series of tips step by step.\n *\n * @param {string[]} tipIds Which tips to show in the guide.\n *\n * @return {Object} Action object.\n */\nexport function triggerGuide( tipIds ) {\n\treturn {\n\t\ttype: 'TRIGGER_GUIDE',\n\t\ttipIds,\n\t};\n}\n\n/**\n * Returns an action object that, when dispatched, dismisses the given tip. A\n * dismissed tip will not show again.\n *\n * @param {string} id The tip to dismiss.\n *\n * @return {Object} Action object.\n */\nexport function dismissTip( id ) {\n\treturn {\n\t\ttype: 'DISMISS_TIP',\n\t\tid,\n\t};\n}\n\n/**\n * Returns an action object that, when dispatched, prevents all tips from\n * showing again.\n *\n * @return {Object} Action object.\n */\nexport function disableTips() {\n\treturn {\n\t\ttype: 'DISABLE_TIPS',\n\t};\n}\n\n/**\n * Returns an action object that, when dispatched, makes all tips show again.\n *\n * @return {Object} Action object.\n */\nexport function enableTips() {\n\treturn {\n\t\ttype: 'ENABLE_TIPS',\n\t};\n}\n", "/**\n * WordPress dependencies\n */\nimport { createSelector } from '@wordpress/data';\n\n/**\n * An object containing information about a guide.\n *\n * @typedef {Object} NUXGuideInfo\n * @property {string[]} tipIds       Which tips the guide contains.\n * @property {?string}  currentTipId The guide's currently showing tip.\n * @property {?string}  nextTipId    The guide's next tip to show.\n */\n\n/**\n * Returns an object describing the guide, if any, that the given tip is a part\n * of.\n *\n * @param {Object} state Global application state.\n * @param {string} tipId The tip to query.\n *\n * @return {?NUXGuideInfo} Information about the associated guide.\n */\nexport const getAssociatedGuide = createSelector(\n\t( state, tipId ) => {\n\t\tfor ( const tipIds of state.guides ) {\n\t\t\tif ( tipIds.includes( tipId ) ) {\n\t\t\t\tconst nonDismissedTips = tipIds.filter(\n\t\t\t\t\t( tId ) =>\n\t\t\t\t\t\t! Object.keys(\n\t\t\t\t\t\t\tstate.preferences.dismissedTips\n\t\t\t\t\t\t).includes( tId )\n\t\t\t\t);\n\t\t\t\tconst [ currentTipId = null, nextTipId = null ] =\n\t\t\t\t\tnonDismissedTips;\n\t\t\t\treturn { tipIds, currentTipId, nextTipId };\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\t( state ) => [ state.guides, state.preferences.dismissedTips ]\n);\n\n/**\n * Determines whether or not the given tip is showing. Tips are hidden if they\n * are disabled, have been dismissed, or are not the current tip in any\n * guide that they have been added to.\n *\n * @param {Object} state Global application state.\n * @param {string} tipId The tip to query.\n *\n * @return {boolean} Whether or not the given tip is showing.\n */\nexport function isTipVisible( state, tipId ) {\n\tif ( ! state.preferences.areTipsEnabled ) {\n\t\treturn false;\n\t}\n\n\tif ( state.preferences.dismissedTips?.hasOwnProperty( tipId ) ) {\n\t\treturn false;\n\t}\n\n\tconst associatedGuide = getAssociatedGuide( state, tipId );\n\tif ( associatedGuide && associatedGuide.currentTipId !== tipId ) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns whether or not tips are globally enabled.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether tips are globally enabled.\n */\nexport function areTipsEnabled( state ) {\n\treturn state.preferences.areTipsEnabled;\n}\n", "/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { Popover, Button } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { useCallback, useRef } from '@wordpress/element';\nimport { close } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { store as nuxStore } from '../../store';\n\nfunction onClick( event ) {\n\t// Tips are often nested within buttons. We stop propagation so that clicking\n\t// on a tip doesn't result in the button being clicked.\n\tevent.stopPropagation();\n}\n\nexport function DotTip( {\n\tposition = 'middle right',\n\tchildren,\n\tisVisible,\n\thasNextTip,\n\tonDismiss,\n\tonDisable,\n} ) {\n\tconst anchorParent = useRef( null );\n\tconst onFocusOutsideCallback = useCallback(\n\t\t( event ) => {\n\t\t\tif ( ! anchorParent.current ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( anchorParent.current.contains( event.relatedTarget ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonDisable();\n\t\t},\n\t\t[ onDisable, anchorParent ]\n\t);\n\tif ( ! isVisible ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Popover\n\t\t\tclassName=\"nux-dot-tip\"\n\t\t\tposition={ position }\n\t\t\tfocusOnMount\n\t\t\trole=\"dialog\"\n\t\t\taria-label={ __( 'Editor tips' ) }\n\t\t\tonClick={ onClick }\n\t\t\tonFocusOutside={ onFocusOutsideCallback }\n\t\t>\n\t\t\t<p>{ children }</p>\n\t\t\t<p>\n\t\t\t\t<Button\n\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\tonClick={ onDismiss }\n\t\t\t\t>\n\t\t\t\t\t{ hasNextTip ? __( 'See next tip' ) : __( 'Got it' ) }\n\t\t\t\t</Button>\n\t\t\t</p>\n\t\t\t<Button\n\t\t\t\tsize=\"small\"\n\t\t\t\tclassName=\"nux-dot-tip__disable\"\n\t\t\t\ticon={ close }\n\t\t\t\tlabel={ __( 'Disable tips' ) }\n\t\t\t\tonClick={ onDisable }\n\t\t\t/>\n\t\t</Popover>\n\t);\n}\n\nexport default compose(\n\twithSelect( ( select, { tipId } ) => {\n\t\tconst { isTipVisible, getAssociatedGuide } = select( nuxStore );\n\t\tconst associatedGuide = getAssociatedGuide( tipId );\n\t\treturn {\n\t\t\tisVisible: isTipVisible( tipId ),\n\t\t\thasNextTip: !! ( associatedGuide && associatedGuide.nextTipId ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { tipId } ) => {\n\t\tconst { dismissTip, disableTips } = dispatch( nuxStore );\n\t\treturn {\n\t\t\tonDismiss() {\n\t\t\t\tdismissTip( tipId );\n\t\t\t},\n\t\t\tonDisable() {\n\t\t\t\tdisableTips();\n\t\t\t},\n\t\t};\n\t} )\n)( DotTip );\n", "/* eslint-disable prettier/prettier */\n/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\n\nexport default (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t<Path d=\"m13.06 12 6.47-6.47-1.06-1.06L12 10.94 5.53 4.47 4.47 5.53 10.94 12l-6.47 6.47 1.06 1.06L12 13.06l6.47 6.47 1.06-1.06L13.06 12Z\" />\n\t</SVG>\n);\n/* eslint-enable */\n"],
  "mappings": "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",
  "names": ["import_data", "areTipsEnabled", "import_data", "import_jsx_runtime", "import_data", "isTipVisible", "getAssociatedGuide", "dismissTip", "disableTips", "deprecated"]
}
