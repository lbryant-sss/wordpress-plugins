{
  "version": 3,
  "sources": ["vendor-external:react/jsx-runtime", "wordpress-external:@wordpress/element", "../../packages/primitives/src/index.js", "../../packages/primitives/src/svg/index.js", "../../node_modules/clsx/dist/clsx.mjs", "../../packages/primitives/src/horizontal-rule/index.js", "../../packages/primitives/src/block-quotation/index.js", "../../packages/primitives/src/view/index.js"],
  "sourcesContent": ["module.exports = window.ReactJSXRuntime;", "module.exports = window.wp.element;", "export * from './svg';\nexport * from './horizontal-rule';\nexport * from './block-quotation';\nexport * from './view';\n", "/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { createElement, forwardRef } from '@wordpress/element';\n\n/** @typedef {{isPressed?: boolean} & import('react').ComponentPropsWithoutRef<'svg'>} SVGProps */\n\n/**\n * @param {import('react').ComponentPropsWithoutRef<'circle'>} props\n *\n * @return {JSX.Element} Circle component\n */\nexport const Circle = ( props ) => createElement( 'circle', props );\n\n/**\n * @param {import('react').ComponentPropsWithoutRef<'g'>} props\n *\n * @return {JSX.Element} G component\n */\nexport const G = ( props ) => createElement( 'g', props );\n\n/**\n * @param {import('react').ComponentPropsWithoutRef<'line'>} props\n *\n * @return {JSX.Element} Path component\n */\nexport const Line = ( props ) => createElement( 'line', props );\n\n/**\n * @param {import('react').ComponentPropsWithoutRef<'path'>} props\n *\n * @return {JSX.Element} Path component\n */\nexport const Path = ( props ) => createElement( 'path', props );\n\n/**\n * @param {import('react').ComponentPropsWithoutRef<'polygon'>} props\n *\n * @return {JSX.Element} Polygon component\n */\nexport const Polygon = ( props ) => createElement( 'polygon', props );\n\n/**\n * @param {import('react').ComponentPropsWithoutRef<'rect'>} props\n *\n * @return {JSX.Element} Rect component\n */\nexport const Rect = ( props ) => createElement( 'rect', props );\n\n/**\n * @param {import('react').ComponentPropsWithoutRef<'defs'>} props\n *\n * @return {JSX.Element} Defs component\n */\nexport const Defs = ( props ) => createElement( 'defs', props );\n\n/**\n * @param {import('react').ComponentPropsWithoutRef<'radialGradient'>} props\n *\n * @return {JSX.Element} RadialGradient component\n */\nexport const RadialGradient = ( props ) =>\n\tcreateElement( 'radialGradient', props );\n\n/**\n * @param {import('react').ComponentPropsWithoutRef<'linearGradient'>} props\n *\n * @return {JSX.Element} LinearGradient component\n */\nexport const LinearGradient = ( props ) =>\n\tcreateElement( 'linearGradient', props );\n\n/**\n * @param {import('react').ComponentPropsWithoutRef<'stop'>} props\n *\n * @return {JSX.Element} Stop component\n */\nexport const Stop = ( props ) => createElement( 'stop', props );\n\nexport const SVG = forwardRef(\n\t/**\n\t * @param {SVGProps}                                    props isPressed indicates whether the SVG should appear as pressed.\n\t *                                                            Other props will be passed through to svg component.\n\t * @param {import('react').ForwardedRef<SVGSVGElement>} ref   The forwarded ref to the SVG element.\n\t *\n\t * @return {JSX.Element} Stop component\n\t */\n\t( { className, isPressed, ...props }, ref ) => {\n\t\tconst appliedProps = {\n\t\t\t...props,\n\t\t\tclassName:\n\t\t\t\tclsx( className, { 'is-pressed': isPressed } ) || undefined,\n\t\t\t'aria-hidden': true,\n\t\t\tfocusable: false,\n\t\t};\n\n\t\t// Disable reason: We need to have a way to render HTML tag for web.\n\t\t// eslint-disable-next-line react/forbid-elements\n\t\treturn <svg { ...appliedProps } ref={ ref } />;\n\t}\n);\nSVG.displayName = 'SVG';\n", "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "export const HorizontalRule = 'hr';\n", "export const BlockQuotation = 'blockquote';\n", "export const View = 'div';\n"],
  "mappings": "spBAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CAAAA,EAAO,QAAU,OAAO,kBCAxB,IAAAC,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CAAAA,EAAO,QAAU,OAAO,GAAG,UCA3B,IAAAC,EAAA,GAAAC,EAAAD,EAAA,oBAAAE,EAAA,WAAAC,EAAA,SAAAC,EAAA,MAAAC,EAAA,mBAAAC,EAAA,SAAAC,EAAA,mBAAAC,EAAA,SAAAC,EAAA,YAAAC,EAAA,mBAAAC,EAAA,SAAAC,EAAA,QAAAC,EAAA,SAAAC,EAAA,SAAAC,ICuGS,IAAAC,EAAA,OCvGT,SAASC,EAAEC,EAAE,CAAC,IAAI,EAAEC,EAAEC,EAAE,GAAG,GAAa,OAAOF,GAAjB,UAA8B,OAAOA,GAAjB,SAAmBE,GAAGF,UAAoB,OAAOA,GAAjB,SAAmB,GAAG,MAAM,QAAQA,CAAC,EAAE,CAAC,IAAIG,EAAEH,EAAE,OAAO,IAAI,EAAE,EAAE,EAAEG,EAAE,IAAIH,EAAE,CAAC,IAAIC,EAAEF,EAAEC,EAAE,CAAC,CAAC,KAAKE,IAAIA,GAAG,KAAKA,GAAGD,EAAE,KAAM,KAAIA,KAAKD,EAAEA,EAAEC,CAAC,IAAIC,IAAIA,GAAG,KAAKA,GAAGD,GAAG,OAAOC,CAAC,CAAQ,SAASE,GAAM,CAAC,QAAQJ,EAAE,EAAEC,EAAE,EAAEC,EAAE,GAAGC,EAAE,UAAU,OAAOF,EAAEE,EAAEF,KAAKD,EAAE,UAAUC,CAAC,KAAK,EAAEF,EAAEC,CAAC,KAAKE,IAAIA,GAAG,KAAKA,GAAG,GAAG,OAAOA,CAAC,CAAC,IAAOG,EAAQD,EDQ/X,IAAAE,EAA0C,OAS7BC,EAAWC,MAAW,iBAAe,SAAUA,CAAM,EAOrDC,EAAMD,MAAW,iBAAe,IAAKA,CAAM,EAO3CE,EAASF,MAAW,iBAAe,OAAQA,CAAM,EAOjDG,EAASH,MAAW,iBAAe,OAAQA,CAAM,EAOjDI,EAAYJ,MAAW,iBAAe,UAAWA,CAAM,EAOvDK,EAASL,MAAW,iBAAe,OAAQA,CAAM,EAOjDM,EAASN,MAAW,iBAAe,OAAQA,CAAM,EAOjDO,EAAmBP,MAC/B,iBAAe,iBAAkBA,CAAM,EAO3BQ,EAAmBR,MAC/B,iBAAe,iBAAkBA,CAAM,EAO3BS,EAAST,MAAW,iBAAe,OAAQA,CAAM,EAEjDU,KAAM,cAQlB,CAAE,CAAE,UAAAC,EAAW,UAAAC,EAAW,GAAGZ,CAAM,EAAGa,IAAS,CAC9C,IAAMC,EAAe,CACpB,GAAGd,EACH,UACCe,EAAMJ,EAAW,CAAE,aAAcC,CAAU,CAAE,GAAK,OACnD,cAAe,GACf,UAAW,EACZ,EAIA,SAAO,OAAC,MAAA,CAAM,GAAGE,EAAe,IAAAD,CAAA,CAAY,CAC7C,CACD,EACAH,EAAI,YAAc,ME1GX,IAAMM,EAAiB,KCAvB,IAAMC,EAAiB,aCAvB,IAAMC,EAAO",
  "names": ["require_jsx_runtime", "__commonJSMin", "exports", "module", "require_element", "__commonJSMin", "exports", "module", "index_exports", "__export", "BlockQuotation", "Circle", "Defs", "G", "HorizontalRule", "Line", "LinearGradient", "Path", "Polygon", "RadialGradient", "Rect", "SVG", "Stop", "View", "import_jsx_runtime", "r", "e", "f", "n", "o", "clsx", "clsx_default", "import_element", "Circle", "props", "G", "Line", "Path", "Polygon", "Rect", "Defs", "RadialGradient", "LinearGradient", "Stop", "SVG", "className", "isPressed", "ref", "appliedProps", "clsx_default", "HorizontalRule", "BlockQuotation", "View"]
}
